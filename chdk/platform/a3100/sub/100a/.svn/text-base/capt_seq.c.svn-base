#include "lolevel.h"
#include "platform.h"
#include "core.h"

static long *nrflag = (long*)(0x5ca0-0x08);  // Found @ ff932688

#include "../../../generic/capt_seq.c"


void __attribute__((naked,noinline)) sub_FF9325DC_my() {
 asm volatile (
      "    STMFD   SP!, {R0-R8,LR} \n" 
      "    MOV     R4, R0 \n" 
      "    BL      sub_FF9330D4 \n" 
      "    MVN     R1, #0 \n" 
      "    BL      sub_FF838D10 \n" 
      "    LDR     R5, =0x5C98 \n" 
      "    LDR     R0, [R5, #0xC] \n" 
      "    CMP     R0, #0 \n" 
      "    BNE     loc_FF93262C \n" 
      "    MOV     R1, #1 \n" 
      "    MOV     R0, #0 \n" 
      "    BL      sub_FF81F41C \n" 
      "    STR     R0, [R5, #0xC] \n" 
      "    MOV     R3, #0 \n" 
      "    STR     R3, [SP] \n" 
      "    LDR     R3, =0xFF932018 \n" 
      "    LDR     R0, =0xFF932844 \n" 
      "    MOV     R2, #0x400 \n" 
      "    MOV     R1, #0x17 \n" 
      "    BL      sub_FF81F3E8 \n" 
"loc_FF93262C:\n"
      "    MOV     R2, #4 \n" 
      "    ADD     R1, SP, #8 \n" 
      "    MOV     R0, #0x8A \n" 
      "    BL      sub_FF87E05C \n" 
      "    TST     R0, #1 \n" 
      "    LDRNE   R1, =0x3CD \n" 
      "    LDRNE   R0, =0xFF93229C \n" 
      "    BLNE    sub_FF81F5E8 \n" 
      "    LDR     R6, =0x35A00 \n" 
      "    LDR     R7, =0x3593C \n" 
      "    LDR     R3, [R6] \n" 
      "    LDRSH   R2, [R6, #0xC] \n" 
      "    LDRSH   R1, [R6, #0xE] \n" 
      "    LDR     R0, [R7, #0x88] \n" 
      "    BL      sub_FF900BF0 \n" 
      "    BL      sub_FF856788 \n" 
      "    LDR     R3, =0x5CA0 \n" 
      "    STRH    R0, [R4, #0xA4] \n" 
      "    SUB     R2, R3, #4 \n" 
      "    STRD    R2, [SP] \n" 
      "    MOV     R1, R0 \n" 
      "    LDRH    R0, [R7, #0x5C] \n" 
      "    LDRSH   R2, [R6, #0xC] \n" 
      "    SUB     R3, R3, #8 \n" 
      "    BL      sub_FF933740 \n"

		"BL      wait_until_remote_button_is_released\n" // untested!
		"BL      capt_seq_hook_set_nr\n"
		"B       sub_ff932690\n" // -> continue in firmware
 );
}
void __attribute__((naked,noinline)) loc_FF86DA90_my() { // FF86DA90
 asm volatile (
      "    STMFD   SP!, {R4-R6,LR} \n" 
      "    LDR     R4, [R0, #0xC] \n" 
      "    LDR     R6, =0x3593C \n" 
      "    LDR     R0, [R4, #8] \n" 
      "    MOV     R5, #0 \n" 
      "    ORR     R0, R0, #1 \n" 
      "    STR     R0, [R4, #8] \n" 
      "    LDR     R0, [R6, #0x24] \n" 
      "    CMP     R0, #0 \n" 
      "    MOVEQ   R0, #2 \n" 
      "    BLEQ    sub_FF869DA0 \n" 
      "    BL      sub_FF86DF8C \n" 
      "    LDR     R0, [R6, #0x24] \n" 
      "    CMP     R0, #0 \n" 
      "    BNE     loc_FF86DB2C \n" 
      "    MOV     R0, R4 \n" 
      "    BL      sub_FF86E32C \n" 
      "    MOV     R0, R4 \n" 
      "    BL      sub_FF931184 \n" 
      "    CMP     R0, #0 \n" 
      "    MOV     R0, R4 \n" 
      "    BEQ     loc_FF86DB04 \n" 
      "    BL      sub_FF931210 \n" 
      "    TST     R0, #1 \n" 
      "    MOVNE   R2, R4 \n" 
      "    LDMNEFD SP!, {R4-R6,LR} \n" 
      "    MOVNE   R1, #1 \n" 
      "    BNE     sub_FF86BA20 \n" 
      "    B       loc_FF86DB08 \n" 
"loc_FF86DB04:\n"
      "    BL      sub_FF9311D4 \n" 
"loc_FF86DB08:\n"
      "    MOV     R0, R4 \n" 
      "    BL      sub_FF86D1DC \n" 
      "    MOV     R0, R4 \n" 
      "    BL      sub_FF932514 \n" 
      "    BL      sub_FF932F48 \n" 
      "    MOV     R0, R4 \n" 
      //"    BL      sub_FF9325DC \n" 
      "    BL      sub_FF9325DC_my \n"  // ---> nr setup


      "    MOV     R5, R0 \n" 
      "    B       loc_FF86DB3C \n" 
"loc_FF86DB2C:\n"
      "    LDR     R0, =0x2814 \n" 
      "    LDR     R0, [R0, #0x10] \n" 
      "    CMP     R0, #0 \n" 
      "    MOVNE   R5, #0x1D \n" 
"loc_FF86DB3C:\n"
		"BL      capt_seq_hook_raw_here\n" // ++++->
      "    BL      sub_FF8706A4 \n" 
      "    BL      sub_FF8706EC \n" 
      "    BL      sub_FF87072C \n" 
      "    MOV     R2, R4 \n" 
      "    MOV     R1, #1 \n" 
      "    MOV     R0, R5 \n" 
      "    BL      sub_FF86BA20 \n" 
      "    BL      sub_FF932878 \n" 
      "    CMP     R0, #0 \n" 
      "    LDRNE   R0, [R4, #8] \n" 
      "    ORRNE   R0, R0, #0x2000 \n" 
      "    STRNE   R0, [R4, #8] \n" 
      "    LDMFD   SP!, {R4-R6,PC} \n" 

  );
}

void __attribute__((naked,noinline)) task_CaptSeqTask_my() {// ff86d6a0
	asm volatile (
      "    STMFD   SP!, {R3-R9,LR} \n" 
      "    LDR     R6, =0x2814 \n" 
      "    LDR     R4, =0x3593C \n" 
      "    MOV     R9, #1 \n" 
      "    MOV     R7, #0 \n" 
"loc_FF86D6B4:\n"
      "    LDR     R0, [R6, #4] \n" 
      "    MOV     R2, #0 \n" 
      "    MOV     R1, SP \n" 
      "    BL      sub_FF838F6C \n" 
      "    TST     R0, #1 \n" 
      "    BEQ     loc_FF86D6E0 \n" 
      "    LDR     R1, =0x5B4 \n" 
      "    LDR     R0, =0xFF86D258 \n" 
      "    BL      sub_FF81F5E8 \n" 
      "    BL      sub_FF81F3A0 \n" 
      "    LDMFD   SP!, {R3-R9,PC} \n" 
"loc_FF86D6E0:\n"
      "    LDR     R0, [SP] \n" 
      "    LDR     R1, [R0] \n" 
      "    CMP     R1, #0x1D \n" 
      "    ADDLS   PC, PC, R1, LSL #2 \n" 
      "    B       loc_FF86D968 \n" 
      "    B       loc_FF86D76C \n" 
      "    B       loc_FF86D7D0 \n" 
      "    B       loc_FF86D80C \n" 
      "    B       loc_FF86D820 \n" 
      "    B       loc_FF86D818 \n" 
      "    B       loc_FF86D828 \n" 
      "    B       loc_FF86D830 \n" 
      "    B       loc_FF86D838 \n" 
      "    B       loc_FF86D890 \n" 
      "    B       loc_FF86D8B8 \n" 
      "    B       loc_FF86D89C \n" 
      "    B       loc_FF86D8A8 \n" 
      "    B       loc_FF86D8B0 \n" 
      "    B       loc_FF86D8C0 \n" 
      "    B       loc_FF86D8C8 \n" 
      "    B       loc_FF86D8D0 \n" 
      "    B       loc_FF86D8D8 \n" 
      "    B       loc_FF86D8E0 \n" 
      "    B       loc_FF86D8EC \n" 
      "    B       loc_FF86D8F4 \n" 
      "    B       loc_FF86D8FC \n" 
      "    B       loc_FF86D904 \n" 
      "    B       loc_FF86D90C \n" 
      "    B       loc_FF86D918 \n" 
      "    B       loc_FF86D920 \n" 
      "    B       loc_FF86D928 \n" 
      "    B       loc_FF86D930 \n" 
      "    B       loc_FF86D938 \n" 
      "    B       loc_FF86D944 \n" 
      "    B       loc_FF86D974 \n" 
"loc_FF86D76C:\n"
      "    BL      sub_FF86DF9C \n"

		// TODO do we need the short press hack ?
		"BL      shooting_expo_param_override\n"  // +
      "    BL      sub_FF86B5AC \n" 
      "    LDR     R0, [R4, #0x24] \n" 
      "    CMP     R0, #0 \n" 
      "    BEQ     loc_FF86D974 \n" 
      "    BL      sub_FF86CF38 \n" 
      "    MOV     R5, R0 \n" 
      "    LDR     R0, [R4, #0x24] \n" 
      "    CMP     R0, #0 \n" 
      "    BEQ     loc_FF86D7B4 \n" 
      "    MOV     R0, #0xC \n" 
      "    BL      sub_FF871DD4 \n" 
      "    TST     R0, #1 \n" 
      "    STRNE   R9, [R6, #0x10] \n" 
      "    LDRNE   R0, [R5, #8] \n" 
      "    ORRNE   R0, R0, #0x40000000 \n" 
      "    STRNE   R0, [R5, #8] \n" 
      "    BNE     loc_FF86D974 \n" 
"loc_FF86D7B4:\n"
      "    MOV     R0, R5 \n" 
      "    BL      sub_FF86D1DC \n" 
      "    MOV     R0, R5 \n" 
      //"    BL      sub_FF9325DC \n" 
      "    BL      sub_FF9325DC_my \n"  // -> nr setup (quick press)
      "    TST     R0, #1 \n" 
      "    STRNE   R9, [R6, #0x10] \n" 
      "    B       loc_FF86D974 \n" 
"loc_FF86D7D0:\n"
      "    LDR     R0, [R4, #0x24] \n" 
      "    CMP     R0, #0 \n" 
      "    BNE     loc_FF86D7FC \n" 
      "    MOV     R0, #0xC \n" 
      "    BL      sub_FF871DD4 \n" 
      "    TST     R0, #1 \n" 
      "    LDRNE   R0, [SP] \n" 
      "    MOVNE   R1, #1 \n" 
      "    LDRNE   R2, [R0, #0xC] \n" 
      "    MOVNE   R0, #1 \n" 
      "    BNE     loc_FF86D888 \n" 
"loc_FF86D7FC:\n"
      "    LDR     R0, [SP] \n" 
      //"    BL      loc_FF86DA90 \n" 
      "    BL      loc_FF86DA90_my \n"  // ---->
"loc_FF86D804:\n"
      "    STR     R7, [R4, #0x24] \n" 
      "    B       loc_FF86D974 \n" 
"loc_FF86D80C:\n"
      "    MOV     R0, #1 \n" 
      "    BL      sub_FF86E224 \n" 
      "    B       loc_FF86D974 \n" 
"loc_FF86D818:\n"
      "    BL      sub_FF86DC08 \n" 
      "    B       loc_FF86D804 \n" 
"loc_FF86D820:\n"
      "    BL      sub_FF86DF7C \n" 
      "    B       loc_FF86D804 \n" 
"loc_FF86D828:\n"
      "    BL      sub_FF86DF84 \n" 
      "    B       loc_FF86D974 \n" 
"loc_FF86D830:\n"
      "    BL      sub_FF86E134 \n" 
      "    B       loc_FF86D894 \n" 
"loc_FF86D838:\n"
      "    LDR     R5, [R0, #0xC] \n" 
      "    BL      sub_FF86DF8C \n" 
      "    MOV     R0, R5 \n" 
      "    BL      sub_FF931518 \n" 
      "    TST     R0, #1 \n" 
      "    MOV     R8, R0 \n" 
      "    BNE     loc_FF86D878 \n" 
      "    BL      sub_FF87E1EC \n" 
      "    STR     R0, [R5, #0x18] \n" 
      "    MOV     R0, R5 \n" 
      "    BL      sub_FF932514 \n" 
      "    MOV     R0, R5 \n" 
      "    BL      sub_FF9328C4 \n" 
      "    MOV     R8, R0 \n" 
      "    LDR     R0, [R5, #0x18] \n" 
      "    BL      sub_FF87E424 \n" 
"loc_FF86D878:\n"
      "    BL      sub_FF86DF7C \n" 
      "    MOV     R2, R5 \n" 
      "    MOV     R1, #9 \n" 
      "    MOV     R0, R8 \n" 
"loc_FF86D888:\n"
      "    BL      sub_FF86BA20 \n" 
      "    B       loc_FF86D974 \n" 
"loc_FF86D890:\n"
      "    BL      sub_FF86E19C \n" 
"loc_FF86D894:\n"
      "    BL      sub_FF86B5AC \n" 
      "    B       loc_FF86D974 \n" 
"loc_FF86D89C:\n"
      "    LDR     R0, [R4, #0x54] \n" 
      "    BL      sub_FF86E584 \n" 
      "    B       loc_FF86D974 \n" 
"loc_FF86D8A8:\n"
      "    BL      sub_FF86E834 \n" 
      "    B       loc_FF86D974 \n" 
"loc_FF86D8B0:\n"
      "    BL      sub_FF86E8C8 \n" 
      "    B       loc_FF86D974 \n" 
"loc_FF86D8B8:\n"
      "    BL      sub_FF86DF7C \n" 
      "    B       loc_FF86D974 \n" 
"loc_FF86D8C0:\n"
      "    BL      sub_FF931744 \n" 
      "    B       loc_FF86D974 \n" 
"loc_FF86D8C8:\n"
      "    BL      sub_FF93193C \n" 
      "    B       loc_FF86D974 \n" 
"loc_FF86D8D0:\n"
      "    BL      sub_FF9319D0 \n" 
      "    B       loc_FF86D974 \n" 
"loc_FF86D8D8:\n"
      "    BL      sub_FF931A90 \n" 
      "    B       loc_FF86D974 \n" 
"loc_FF86D8E0:\n"
      "    MOV     R0, #0 \n" 
      "    BL      sub_FF931C88 \n" 
      "    B       loc_FF86D974 \n" 
"loc_FF86D8EC:\n"
      "    BL      sub_FF931DD8 \n" 
      "    B       loc_FF86D974 \n" 
"loc_FF86D8F4:\n"
      "    BL      sub_FF931E68 \n" 
      "    B       loc_FF86D974 \n" 
"loc_FF86D8FC:\n"
      "    BL      sub_FF931F28 \n" 
      "    B       loc_FF86D974 \n" 
"loc_FF86D904:\n"
      "    BL      sub_FF86E378 \n" 
      "    B       loc_FF86D974 \n" 
"loc_FF86D90C:\n"
      "    BL      sub_FF86E40C \n" 
      "    BL      sub_FF836E20 \n" 
      "    B       loc_FF86D974 \n" 
"loc_FF86D918:\n"
      "    BL      sub_FF931B5C \n" 
      "    B       loc_FF86D974 \n" 
"loc_FF86D920:\n"
      "    BL      sub_FF931BA0 \n" 
      "    B       loc_FF86D974 \n" 
"loc_FF86D928:\n"
      "    BL      sub_FF870624 \n" 
      "    B       loc_FF86D974 \n" 
"loc_FF86D930:\n"
      "    BL      sub_FF8706A4 \n" 
      "    B       loc_FF86D974 \n" 
"loc_FF86D938:\n"
      "    BL      sub_FF870700 \n" 
      "    BL      sub_FF8706C0 \n" 
      "    B       loc_FF86D974 \n" 
"loc_FF86D944:\n"
      "    LDRH    R0, [R4, #0x94] \n" 
      "    CMP     R0, #4 \n" 
      "    LDRNEH  R0, [R4] \n" 
      "    SUBNE   R12, R0, #0x8200 \n" 
      "    SUBNES  R12, R12, #0x2A \n" 
      "    BNE     loc_FF86D974 \n" 
      "    BL      sub_FF8706A4 \n" 
      "    BL      sub_FF870A44 \n" 
      "    B       loc_FF86D974 \n" 
"loc_FF86D968:\n"
      "    LDR     R1, =0x719 \n" 
      "    LDR     R0, =0xFF86D258 \n" 
      "    BL      sub_FF81F5E8 \n" 
"loc_FF86D974:\n"
      "    LDR     R0, [SP] \n" 
      "    LDR     R1, [R0, #4] \n" 
      "    LDR     R0, [R6] \n" 
      "    BL      sub_FF838CDC \n" 
      "    LDR     R5, [SP] \n" 
      "    LDR     R0, [R5, #8] \n" 
      "    CMP     R0, #0 \n" 
      "    LDREQ   R1, =0x132 \n" 
      "    LDREQ   R0, =0xFF86D258 \n" 
      "    BLEQ    sub_FF81F5E8 \n" 
      "    STR     R7, [R5, #8] \n" 
      "    B       loc_FF86D6B4 \n"
    );
}

void __attribute__((naked,noinline)) exp_drv_task(){ // ff8aa748
 asm volatile(
      "    STMFD   SP!, {R4-R8,LR} \n" 
      "    SUB     SP, SP, #0x20 \n" 
      "    LDR     R8, =0xBB8 \n" 
      "    LDR     R7, =0x3B4C \n" 
      "    LDR     R5, =0x3ED88 \n" 
      "    MOV     R0, #0 \n" 
      "    ADD     R6, SP, #0x10 \n" 
      "    STR     R0, [SP, #0xC] \n" 
"loc_FF8AA768:\n"
      "    LDR     R0, [R7, #0x20] \n" 
      "    MOV     R2, #0 \n" 
      "    ADD     R1, SP, #0x1C \n" 
      "    BL      sub_FF838F6C \n" 
      "    LDR     R0, [SP, #0xC] \n" 
      "    CMP     R0, #1 \n" 
      "    BNE     loc_FF8AA7B4 \n" 
      "    LDR     R0, [SP, #0x1C] \n" 
      "    LDR     R0, [R0] \n" 
      "    CMP     R0, #0x13 \n" 
      "    CMPNE   R0, #0x14 \n" 
      "    CMPNE   R0, #0x15 \n" 
      "    CMPNE   R0, #0x16 \n" 
      "    BEQ     loc_FF8AA918 \n" 
      "    CMP     R0, #0x28 \n" 
      "    BEQ     loc_FF8AA8A0 \n" 
      "    ADD     R1, SP, #0xC \n" 
      "    MOV     R0, #0 \n" 
      "    BL      sub_FF8AA6F8 \n" 
"loc_FF8AA7B4:\n"
      "    LDR     R0, [SP, #0x1C] \n" 
      "    LDR     R1, [R0] \n" 
      "    CMP     R1, #0x2E \n" 
      "    BNE     loc_FF8AA7E4 \n" 
      "    LDR     R0, [SP, #0x1C] \n" 
      "    BL      sub_FF8ABA48 \n" 
      "    LDR     R0, [R7, #0x1C] \n" 
      "    MOV     R1, #1 \n" 
      "    BL      sub_FF838CDC \n" 
      "    BL      sub_FF81F3A0 \n" 
      "    ADD     SP, SP, #0x20 \n" 
      "    LDMFD   SP!, {R4-R8,PC} \n" 
"loc_FF8AA7E4:\n"
      "    CMP     R1, #0x2D \n" 
      "    BNE     loc_FF8AA800 \n" 
      "    LDR     R2, [R0, #0x8C]! \n" 
      "    LDR     R1, [R0, #4] \n" 
      "    MOV     R0, R1 \n" 
      "    BLX     R2 \n" 
      "    B       loc_FF8AAD40 \n" 
"loc_FF8AA800:\n"
      "    CMP     R1, #0x26 \n" 
      "    BNE     loc_FF8AA850 \n" 
      "    LDR     R0, [R7, #0x1C] \n" 
      "    MOV     R1, #0x80 \n" 
      "    BL      sub_FF838D10 \n" 
      "    LDR     R0, =0xFF8A6ECC \n" 
      "    MOV     R1, #0x80 \n" 
      "    BL      sub_FF92699C \n" 
      "    LDR     R0, [R7, #0x1C] \n" 
      "    MOV     R2, R8 \n" 
      "    MOV     R1, #0x80 \n" 
      "    BL      sub_FF838C1C \n" 
      "    TST     R0, #1 \n" 
      "    LDRNE   R1, =0xE83 \n" 
      "    BNE     loc_FF8AA90C \n" 
"loc_FF8AA83C:\n"
      "    LDR     R1, [SP, #0x1C] \n" 
      "    LDR     R0, [R1, #0x90] \n" 
      "    LDR     R1, [R1, #0x8C] \n" 
      "    BLX     R1 \n" 
      "    B       loc_FF8AAD40 \n" 
"loc_FF8AA850:\n"
      "    CMP     R1, #0x27 \n" 
      "    BNE     loc_FF8AA898 \n" 
      "    ADD     R1, SP, #0xC \n" 
      "    BL      sub_FF8AA6F8 \n" 
      "    LDR     R0, [R7, #0x1C] \n" 
      "    MOV     R1, #0x100 \n" 
      "    BL      sub_FF838D10 \n" 
      "    LDR     R0, =0xFF8A6EDC \n" 
      "    MOV     R1, #0x100 \n" 
      "    BL      sub_FF926C24 \n" 
      "    LDR     R0, [R7, #0x1C] \n" 
      "    MOV     R2, R8 \n" 
      "    MOV     R1, #0x100 \n" 
      "    BL      sub_FF838C1C \n" 
      "    TST     R0, #1 \n" 
      "    BEQ     loc_FF8AA83C \n" 
      "    LDR     R1, =0xE8D \n" 
      "    B       loc_FF8AA90C \n" 
"loc_FF8AA898:\n"
      "    CMP     R1, #0x28 \n" 
      "    BNE     loc_FF8AA8B0 \n" 
"loc_FF8AA8A0:\n"
      "    LDR     R0, [SP, #0x1C] \n" 
      "    ADD     R1, SP, #0xC \n" 
      "    BL      sub_FF8AA6F8 \n" 
      "    B       loc_FF8AA83C \n" 
"loc_FF8AA8B0:\n"
      "    CMP     R1, #0x2B \n" 
      "    BNE     loc_FF8AA8C8 \n" 
      "    BL      sub_FF89A2C4 \n" 
      "    BL      sub_FF89AEEC \n" 
      "    BL      sub_FF89AA3C \n" 
      "    B       loc_FF8AA83C \n" 
"loc_FF8AA8C8:\n"
      "    CMP     R1, #0x2C \n" 
      "    BNE     loc_FF8AA918 \n" 
      "    LDR     R0, [R7, #0x1C] \n" 
      "    MOV     R1, #4 \n" 
      "    BL      sub_FF838D10 \n" 
      "    LDR     R1, =0xFF8A6EFC \n" 
      "    LDR     R0, =0xFFFFF400 \n" 
      "    MOV     R2, #4 \n" 
      "    BL      sub_FF899D40 \n" 
      "    BL      sub_FF899FC8 \n" 
      "    LDR     R0, [R7, #0x1C] \n" 
      "    MOV     R2, R8 \n" 
      "    MOV     R1, #4 \n" 
      "    BL      sub_FF838B38 \n" 
      "    TST     R0, #1 \n" 
      "    BEQ     loc_FF8AA83C \n" 
      "    LDR     R1, =0xEB5 \n" 
"loc_FF8AA90C:\n"
      "    LDR     R0, =0xFF8A7540 \n" 
      "    BL      sub_FF81F5E8 \n" 
      "    B       loc_FF8AA83C \n" 
"loc_FF8AA918:\n"
      "    LDR     R0, [SP, #0x1C] \n" 
      "    MOV     R4, #1 \n" 
      "    LDR     R1, [R0] \n" 
      "    CMP     R1, #0x11 \n" 
      "    CMPNE   R1, #0x12 \n" 
      "    BNE     loc_FF8AA988 \n" 
      "    LDR     R1, [R0, #0x7C] \n" 
      "    ADD     R1, R1, R1, LSL #1 \n" 
      "    ADD     R1, R0, R1, LSL #2 \n" 
      "    SUB     R1, R1, #8 \n" 
      "    LDMIA   R1, {R2-R4} \n" 
      "    STMIA   R6, {R2-R4} \n" 
      "    BL      sub_FF8A9080 \n" 
      "    LDR     R0, [SP, #0x1C] \n" 
      "    LDR     R1, [R0, #0x7C] \n" 
      "    LDR     R3, [R0, #0x8C] \n" 
      "    LDR     R2, [R0, #0x90] \n" 
      "    ADD     R0, R0, #4 \n" 
      "    BLX     R3 \n" 
      "    LDR     R0, [SP, #0x1C] \n" 
      "    BL      sub_FF8ABE14 \n" 
      "    LDR     R0, [SP, #0x1C] \n" 
      "    LDR     R1, [R0, #0x7C] \n" 
      "    LDR     R3, [R0, #0x94] \n" 
      "    LDR     R2, [R0, #0x98] \n" 
      "    ADD     R0, R0, #4 \n" 
      "    BLX     R3 \n" 
      "    B       loc_FF8AAC80 \n" 
"loc_FF8AA988:\n"
      "    CMP     R1, #0x13 \n" 
      "    CMPNE   R1, #0x14 \n" 
      "    CMPNE   R1, #0x15 \n" 
      "    CMPNE   R1, #0x16 \n" 
      "    BNE     loc_FF8AAA40 \n" 
      "    ADD     R3, SP, #0xC \n" 
      "    MOV     R2, SP \n" 
      "    ADD     R1, SP, #0x10 \n" 
      "    BL      sub_FF8A9360 \n" 
      "    CMP     R0, #1 \n" 
      "    MOV     R4, R0 \n" 
      "    CMPNE   R4, #5 \n" 
      "    BNE     loc_FF8AA9DC \n" 
      "    LDR     R0, [SP, #0x1C] \n" 
      "    MOV     R2, R4 \n" 
      "    LDR     R1, [R0, #0x7C]! \n" 
      "    LDR     R12, [R0, #0x10]! \n" 
      "    LDR     R3, [R0, #4] \n" 
      "    MOV     R0, SP \n" 
      "    BLX     R12 \n" 
      "    B       loc_FF8AAA14 \n" 
"loc_FF8AA9DC:\n"
      "    LDR     R0, [SP, #0x1C] \n" 
      "    CMP     R4, #2 \n" 
      "    LDR     R3, [R0, #0x90] \n" 
      "    CMPNE   R4, #6 \n" 
      "    BNE     loc_FF8AAA28 \n" 
      "    LDR     R12, [R0, #0x8C] \n" 
      "    MOV     R0, SP \n" 
      "    MOV     R2, R4 \n" 
      "    MOV     R1, #1 \n" 
      "    BLX     R12 \n" 
      "    LDR     R0, [SP, #0x1C] \n" 
      "    MOV     R2, SP \n" 
      "    ADD     R1, SP, #0x10 \n" 
      "    BL      sub_FF8AA400 \n" 
"loc_FF8AAA14:\n"
      "    LDR     R0, [SP, #0x1C] \n" 
      "    LDR     R2, [SP, #0xC] \n" 
      "    MOV     R1, R4 \n" 
      "    BL      sub_FF8AA698 \n" 
      "    B       loc_FF8AAC80 \n" 
"loc_FF8AAA28:\n"
      "    LDR     R1, [R0, #0x7C] \n" 
      "    LDR     R12, [R0, #0x8C] \n" 
      "    ADD     R0, R0, #4 \n" 
      "    MOV     R2, R4 \n" 
      "    BLX     R12 \n" 
      "    B       loc_FF8AAC80 \n" 
"loc_FF8AAA40:\n"
      "    CMP     R1, #0x22 \n" 
      "    CMPNE   R1, #0x23 \n" 
      "    BNE     loc_FF8AAA8C \n" 
      "    LDR     R1, [R0, #0x7C] \n" 
      "    ADD     R1, R1, R1, LSL #1 \n" 
      "    ADD     R1, R0, R1, LSL #2 \n" 
      "    SUB     R1, R1, #8 \n" 
      "    LDMIA   R1, {R2-R4} \n" 
      "    STMIA   R6, {R2-R4} \n" 
      "    BL      sub_FF8A85D0 \n" 
      "    LDR     R0, [SP, #0x1C] \n" 
      "    LDR     R1, [R0, #0x7C] \n" 
      "    LDR     R3, [R0, #0x8C] \n" 
      "    LDR     R2, [R0, #0x90] \n" 
      "    ADD     R0, R0, #4 \n" 
      "    BLX     R3 \n" 
      "    LDR     R0, [SP, #0x1C] \n" 
      "    BL      sub_FF8A88C4 \n" 
      "    B       loc_FF8AAC80 \n" 
"loc_FF8AAA8C:\n"
      "    ADD     R1, R0, #4 \n" 
      "    LDMIA   R1, {R2,R3,R12} \n" 
      "    STMIA   R6, {R2,R3,R12} \n" 
      "    LDR     R1, [R0] \n" 
      "    CMP     R1, #0x25 \n" 
      "    ADDLS   PC, PC, R1, LSL #2 \n" 
      "    B       loc_FF8AAC60 \n" 
      "    B       loc_FF8AAB40 \n" 
      "    B       loc_FF8AAB40 \n" 
      "    B       loc_FF8AAB48 \n" 
      "    B       loc_FF8AAB50 \n" 
      "    B       loc_FF8AAB50 \n" 
      "    B       loc_FF8AAB50 \n" 
      "    B       loc_FF8AAB40 \n" 
      "    B       loc_FF8AAB48 \n" 
      "    B       loc_FF8AAB50 \n" 
      "    B       loc_FF8AAB50 \n" 
      "    B       loc_FF8AAB68 \n" 
      "    B       loc_FF8AAB68 \n" 
      "    B       loc_FF8AAC54 \n" 
      "    B       loc_FF8AAC5C \n" 
      "    B       loc_FF8AAC5C \n" 
      "    B       loc_FF8AAC5C \n" 
      "    B       loc_FF8AAC5C \n" 
      "    B       loc_FF8AAC60 \n" 
      "    B       loc_FF8AAC60 \n" 
      "    B       loc_FF8AAC60 \n" 
      "    B       loc_FF8AAC60 \n" 
      "    B       loc_FF8AAC60 \n" 
      "    B       loc_FF8AAC60 \n" 
      "    B       loc_FF8AAB58 \n" 
      "    B       loc_FF8AAB60 \n" 
      "    B       loc_FF8AAB60 \n" 
      "    B       loc_FF8AAB74 \n" 
      "    B       loc_FF8AAB74 \n" 
      "    B       loc_FF8AAB7C \n" 
      "    B       loc_FF8AABAC \n" 
      "    B       loc_FF8AABDC \n" 
      "    B       loc_FF8AAC0C \n" 
      "    B       loc_FF8AAC3C \n" 
      "    B       loc_FF8AAC3C \n" 
      "    B       loc_FF8AAC60 \n" 
      "    B       loc_FF8AAC60 \n" 
      "    B       loc_FF8AAC44 \n" 
      "    B       loc_FF8AAC4C \n" 
"loc_FF8AAB40:\n"
      "    BL      sub_FF8A73E4 \n" 
      "    B       loc_FF8AAC60 \n" 
"loc_FF8AAB48:\n"
      "    BL      sub_FF8A7660 \n" 
      "    B       loc_FF8AAC60 \n" 
"loc_FF8AAB50:\n"
      "    BL      sub_FF8A7868 \n" 
      "    B       loc_FF8AAC60 \n" 
"loc_FF8AAB58:\n"
      "    BL      sub_FF8A7AE0 \n" 
      "    B       loc_FF8AAC60 \n" 
"loc_FF8AAB60:\n"
      "    BL      sub_FF8A7CD8 \n" 
      "    B       loc_FF8AAC60 \n"  
"loc_FF8AAB68:\n"
      //"    BL      sub_FF8A7F94 \n" 
      "    BL      sub_FF8A7F94_my \n"  //----------------------->
      "    MOV     R4, #0 \n" 
      "    B       loc_FF8AAC60 \n" 
"loc_FF8AAB74:\n"
      "    BL      sub_FF8A80D4 \n" 
      "    B       loc_FF8AAC60 \n" 
"loc_FF8AAB7C:\n"
      "    LDRH    R1, [R0, #4] \n" 
      "    STRH    R1, [SP, #0x10] \n" 
      "    LDRH    R1, [R5, #2] \n" 
      "    STRH    R1, [SP, #0x12] \n" 
      "    LDRH    R1, [R5, #4] \n" 
      "    STRH    R1, [SP, #0x14] \n" 
      "    LDRH    R1, [R5, #6] \n" 
      "    STRH    R1, [SP, #0x16] \n" 
      "    LDRH    R1, [R0, #0xC] \n" 
      "    STRH    R1, [SP, #0x18] \n" 
      "    BL      sub_FF8ABABC \n" 
      "    B       loc_FF8AAC60 \n" 
"loc_FF8AABAC:\n"
      "    LDRH    R1, [R0, #4] \n" 
      "    STRH    R1, [SP, #0x10] \n" 
      "    LDRH    R1, [R5, #2] \n" 
      "    STRH    R1, [SP, #0x12] \n" 
      "    LDRH    R1, [R5, #4] \n" 
      "    STRH    R1, [SP, #0x14] \n" 
      "    LDRH    R1, [R5, #6] \n" 
      "    STRH    R1, [SP, #0x16] \n" 
      "    LDRH    R1, [R5, #8] \n" 
      "    STRH    R1, [SP, #0x18] \n" 
      "    BL      sub_FF8ABC2C \n" 
      "    B       loc_FF8AAC60 \n" 
"loc_FF8AABDC:\n"
      "    LDRH    R1, [R5] \n" 
      "    STRH    R1, [SP, #0x10] \n" 
      "    LDRH    R1, [R0, #6] \n" 
      "    STRH    R1, [SP, #0x12] \n" 
      "    LDRH    R1, [R5, #4] \n" 
      "    STRH    R1, [SP, #0x14] \n" 
      "    LDRH    R1, [R5, #6] \n" 
      "    STRH    R1, [SP, #0x16] \n" 
      "    LDRH    R1, [R5, #8] \n" 
      "    STRH    R1, [SP, #0x18] \n" 
      "    BL      sub_FF8ABCD8 \n" 
      "    B       loc_FF8AAC60 \n" 
"loc_FF8AAC0C:\n"
      "    LDRH    R1, [R5] \n" 
      "    STRH    R1, [SP, #0x10] \n" 
      "    LDRH    R1, [R5, #2] \n" 
      "    STRH    R1, [SP, #0x12] \n" 
      "    LDRH    R1, [R5, #4] \n" 
      "    STRH    R1, [SP, #0x14] \n" 
      "    LDRH    R1, [R5, #6] \n" 
      "    STRH    R1, [SP, #0x16] \n" 
      "    LDRH    R1, [R0, #0xC] \n" 
      "    STRH    R1, [SP, #0x18] \n" 
      "    BL      sub_FF8ABD78 \n" 
      "    B       loc_FF8AAC60 \n" 
"loc_FF8AAC3C:\n"
      "    BL      sub_FF8A8428 \n" 
      "    B       loc_FF8AAC60 \n" 
"loc_FF8AAC44:\n"
      "    BL      sub_FF8A89C8 \n" 
      "    B       loc_FF8AAC60 \n" 
"loc_FF8AAC4C:\n"
      "    BL      sub_FF8A8C04 \n" 
      "    B       loc_FF8AAC60 \n" 
"loc_FF8AAC54:\n"
      "    BL      sub_FF8A8D80 \n" 
      "    B       loc_FF8AAC60 \n" 
"loc_FF8AAC5C:\n"
      "    BL      sub_FF8A8F1C \n" 
"loc_FF8AAC60:\n"
      "    LDR     R0, [SP, #0x1C] \n" 
      "    LDR     R1, [R0, #0x7C] \n" 
      "    LDR     R3, [R0, #0x8C] \n" 
      "    LDR     R2, [R0, #0x90] \n" 
      "    ADD     R0, R0, #4 \n" 
      "    BLX     R3 \n" 
      "    CMP     R4, #1 \n" 
      "    BNE     loc_FF8AACC8 \n" 
"loc_FF8AAC80:\n"
      "    LDR     R0, [SP, #0x1C] \n" 
      "    MOV     R2, #0xC \n" 
      "    LDR     R1, [R0, #0x7C] \n" 
      "    ADD     R1, R1, R1, LSL #1 \n" 
      "    ADD     R0, R0, R1, LSL #2 \n" 
      "    SUB     R4, R0, #8 \n" 
      "    LDR     R0, =0x3ED88 \n" 
      "    ADD     R1, SP, #0x10 \n" 
      "    BL      sub_FFAD56BC \n" 
      "    LDR     R0, =0x3ED94 \n" 
      "    MOV     R2, #0xC \n" 
      "    ADD     R1, SP, #0x10 \n" 
      "    BL      sub_FFAD56BC \n" 
      "    LDR     R0, =0x3EDA0 \n" 
      "    MOV     R2, #0xC \n" 
      "    MOV     R1, R4 \n" 
      "    BL      sub_FFAD56BC \n" 
      "    B       loc_FF8AAD40 \n" 
"loc_FF8AACC8:\n"
      "    LDR     R0, [SP, #0x1C] \n" 
      "    LDR     R0, [R0] \n" 
      "    CMP     R0, #0xB \n" 
      "    BNE     loc_FF8AAD10 \n" 
      "    MOV     R3, #0 \n" 
      "    STR     R3, [SP] \n" 
      "    MOV     R3, #1 \n" 
      "    MOV     R2, #1 \n" 
      "    MOV     R1, #1 \n" 
      "    MOV     R0, #0 \n" 
      "    BL      sub_FF8A71EC \n" 
      "    MOV     R3, #0 \n" 
      "    STR     R3, [SP] \n" 
      "    MOV     R3, #1 \n" 
      "    MOV     R2, #1 \n" 
      "    MOV     R1, #1 \n" 
      "    MOV     R0, #0 \n" 
      "    B       loc_FF8AAD3C \n" 
"loc_FF8AAD10:\n"
      "    MOV     R3, #1 \n" 
      "    MOV     R2, #1 \n" 
      "    MOV     R1, #1 \n" 
      "    MOV     R0, #1 \n" 
      "    STR     R3, [SP] \n" 
      "    BL      sub_FF8A71EC \n" 
      "    MOV     R3, #1 \n" 
      "    MOV     R2, #1 \n" 
      "    MOV     R1, #1 \n" 
      "    MOV     R0, #1 \n" 
      "    STR     R3, [SP] \n" 
"loc_FF8AAD3C:\n"
      "    BL      sub_FF8A732C \n" 
"loc_FF8AAD40:\n"
      "    LDR     R0, [SP, #0x1C] \n" 
      "    BL      sub_FF8ABA48 \n" 
      "    B       loc_FF8AA768 \n" 
  );
}

void __attribute__((naked,noinline)) sub_FF8A7F94_my(){
 asm volatile(
      "    STMFD   SP!, {R4-R8,LR} \n" 
      "    LDR     R7, =0x3B4C \n" 
      "    MOV     R4, R0 \n" 
      "    LDR     R0, [R7, #0x1C] \n" 
      "    MOV     R1, #0x3E \n" 
      "    BL      sub_FF838D10 \n" 
      "    LDRSH   R0, [R4, #4] \n" 
      "    MOV     R2, #0 \n" 
      "    MOV     R1, #0 \n" 
      "    BL      sub_FF8A6F50 \n" 
      "    MOV     R6, R0 \n" 
      "    LDRSH   R0, [R4, #6] \n" 
      "    BL      sub_FF8A7060 \n" 
      "    LDRSH   R0, [R4, #8] \n" 
      "    BL      sub_FF8A70B8 \n" 
      "    LDRSH   R0, [R4, #0xA] \n" 
      "    BL      sub_FF8A7110 \n" 
      "    LDRSH   R0, [R4, #0xC] \n" 
      "    MOV     R1, #0 \n" 
      "    BL      sub_FF8A7168 \n" 
      "    MOV     R5, R0 \n" 
      "    LDR     R0, [R4] \n" 
      "    LDR     R8, =0x3EDA0 \n" 
      "    CMP     R0, #0xB \n" 
      "    MOVEQ   R6, #0 \n" 
      "    MOVEQ   R5, #0 \n" 
      "    BEQ     loc_FF8A8028 \n" 
      "    CMP     R6, #1 \n" 
      "    BNE     loc_FF8A8028 \n" 
      "    LDRSH   R0, [R4, #4] \n" 
      "    LDR     R1, =0xFF8A6EBC \n" 
      "    MOV     R2, #2 \n" 
      "    BL      sub_FF926AF0 \n" 
      "    STRH    R0, [R4, #4] \n" 
      "    MOV     R0, #0 \n" 
      "    STR     R0, [R7, #0x28] \n" 
      "    B       loc_FF8A8030 \n" 
"loc_FF8A8028:\n"
      "    LDRH    R0, [R8] \n" 
      "    STRH    R0, [R4, #4] \n" 
"loc_FF8A8030:\n"
      "    CMP     R5, #1 \n" 
      "    LDRNEH  R0, [R8, #8] \n" 
      "    BNE     loc_FF8A804C \n" 
      "    LDRSH   R0, [R4, #0xC] \n" 
      "    LDR     R1, =0xFF8A6F40 \n" 
      "    MOV     R2, #0x20 \n" 
      "    BL      sub_FF8ABA78 \n" 
"loc_FF8A804C:\n"
      "    STRH    R0, [R4, #0xC] \n" 
      "    LDRSH   R0, [R4, #6] \n"
     // "    BL      sub_FF89A034 \n" 
      "    BL      sub_FF89A034_my \n" // ------->
      "    LDRSH   R0, [R4, #8] \n" 
      "    MOV     R1, #1 \n" 
      "    BL      sub_FF89A784 \n" 
      "    MOV     R1, #0 \n" 
      "    ADD     R0, R4, #8 \n" 
      "    BL      sub_FF89A80C \n" 
      "    LDRSH   R0, [R4, #0xE] \n" 
      "    BL      sub_FF8A2248 \n" 
      "    LDR     R4, =0xBB8 \n" 
      "    CMP     R6, #1 \n" 
      "    BNE     loc_FF8A80A4 \n" 
      "    LDR     R0, [R7, #0x1C] \n" 
      "    MOV     R2, R4 \n" 
      "    MOV     R1, #2 \n" 
      "    BL      sub_FF838C1C \n" 
      "    TST     R0, #1 \n" 
      "    LDRNE   R1, =0x5A6 \n" 
      "    LDRNE   R0, =0xFF8A7540 \n" 
      "    BLNE    sub_FF81F5E8 \n" 
"loc_FF8A80A4:\n"
      "    CMP     R5, #1 \n" 
      "    LDMNEFD SP!, {R4-R8,PC} \n" 
      "    LDR     R0, [R7, #0x1C] \n" 
      "    MOV     R2, R4 \n" 
      "    MOV     R1, #0x20 \n" 
      "    BL      sub_FF838C1C \n" 
      "    TST     R0, #1 \n" 
      "    LDRNE   R1, =0x5AB \n" 
      "    LDRNE   R0, =0xFF8A7540 \n" 
      "    LDMNEFD SP!, {R4-R8,LR} \n" 
      "    BNE     sub_FF81F5E8 \n" 
      "    LDMFD   SP!, {R4-R8,PC} \n" 

  );
}

void __attribute__((naked,noinline)) sub_FF89A034_my(){
 asm volatile(
      "    STMFD   SP!, {R4-R6,LR} \n" 
      "    LDR     R5, =0x3840 \n" 
      "    MOV     R4, R0 \n" 
      "    LDR     R0, [R5, #4] \n" 
      "    CMP     R0, #1 \n" 
      "    LDRNE   R1, =0x146 \n" 
      "    LDRNE   R0, =0xFF899E38 \n" 
      "    BLNE    sub_FF81F5E8 \n" 
      "    CMN     R4, #0xC00 \n" 
      "    LDREQSH R4, [R5, #2] \n" 
      "    CMN     R4, #0xC00 \n" 
      "    MOVEQ   R1, #0x14C \n" 
      "    LDREQ   R0, =0xFF899E38 \n" 
      "    STRH    R4, [R5, #2] \n" 
      "    BLEQ    sub_FF81F5E8 \n" 
      "    MOV     R0, R4 \n" 

      //"    BL      sub_FF9B577C \n" 
		 "BL      apex2us\n"  // +
      "    MOV     R4, R0 \n" 
      "    BL      sub_FF8CCE90 \n" 
      "    MOV     R0, R4 \n" 
      "    BL      sub_FF8D1884 \n" 
      "    TST     R0, #1 \n" 
      "    LDRNE   R1, =0x151 \n" 
      "    LDMNEFD SP!, {R4-R6,LR} \n" 
      "    LDRNE   R0, =0xFF899E38 \n" 
      "    BNE     sub_FF81F5E8 \n" 
      "    LDMFD   SP!, {R4-R6,PC} \n" 


  );
}

