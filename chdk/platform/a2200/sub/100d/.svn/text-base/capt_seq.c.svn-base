/*
 * capt_seq.c - auto-generated by CHDK code_gen.
 */
#include "lolevel.h"
#include "platform.h"
#include "core.h"

#define USE_STUBS_NRFLAG 1          // see stubs_entry.S
#define NR_AUTO (0)                 // have to explictly reset value back to 0 to enable auto
#define PAUSE_FOR_FILE_COUNTER 200  // Enable delay in capt_seq_hook_raw_here to ensure file counter is updated

#include "../../../generic/capt_seq.c"

/*************************************************************/
//** capt_seq_task @ 0xFF8788F0 - 0xFF878B84, length=166
void __attribute__((naked,noinline)) capt_seq_task() {
asm volatile (
"    STMFD   SP!, {R3-R9,LR} \n"
"    LDR     R5, =0x39E7C \n"
"    LDR     R7, =0x2B20 \n"
"    MOV     R6, #0 \n"

"loc_FF878900:\n"
"    LDR     R0, [R7, #4] \n"
"    MOV     R2, #0 \n"
"    MOV     R1, SP \n"
"    BL      sub_FF839B6C /*_ReceiveMessageQueue*/ \n"
"    TST     R0, #1 \n"
"    BEQ     loc_FF87892C \n"
"    LDR     R1, =0x476 \n"
"    LDR     R0, =0xFF878490 \n"
"    BL      _DebugAssert \n"
"    BL      _ExitTask \n"
"    LDMFD   SP!, {R3-R9,PC} \n"

"loc_FF87892C:\n"
"    LDR     R0, [SP] \n"
"    LDR     R1, [R0] \n"
"    CMP     R1, #0x20 \n"
"    ADDCC   PC, PC, R1, LSL#2 \n"
"    B       loc_FF878B4C \n"
"    B       loc_FF8789C0 \n"
"    B       loc_FF8789D8 \n"
"    B       loc_FF878A04 \n"
"    B       loc_FF878A18 \n"
"    B       loc_FF878A10 \n"
"    B       loc_FF878A24 \n"
"    B       loc_FF878A2C \n"
"    B       loc_FF878A34 \n"
"    B       loc_FF878A50 \n"
"    B       loc_FF878A78 \n"
"    B       loc_FF878A5C \n"
"    B       loc_FF878A68 \n"
"    B       loc_FF878A70 \n"
"    B       loc_FF878A80 \n"
"    B       loc_FF878A88 \n"
"    B       loc_FF878A90 \n"
"    B       loc_FF878A98 \n"
"    B       loc_FF878AA0 \n"
"    B       loc_FF878AAC \n"
"    B       loc_FF878AB4 \n"
"    B       loc_FF878ABC \n"
"    B       loc_FF878AC4 \n"
"    B       loc_FF878ACC \n"
"    B       loc_FF878AD8 \n"
"    B       loc_FF878AE0 \n"
"    B       loc_FF878AE8 \n"
"    B       loc_FF878AF0 \n"
"    B       loc_FF878AF8 \n"
"    B       loc_FF878B00 \n"
"    B       loc_FF878B08 \n"
"    B       loc_FF878B14 \n"
"    B       loc_FF878B58 \n"

"loc_FF8789C0:\n"
"    BL      shooting_expo_iso_override\n"      // added
"    BL      sub_FF8790BC \n"
"    BL      shooting_expo_param_override\n"    // added
"    BL      sub_FF876588 \n"
"    MOV     R0, #0\n"                          // added
"    STR     R0, [R5,#0x28]\n"                  // added, fixes overrides behavior at short shutter press (from S95)
//"  LDR     R0, [R5, #0x28] \n"  // above patch makes these three lines redundant
//"  CMP     R0, #0 \n"
//"  BLNE    _sub_FF968FB0 \n"
"    B       loc_FF878B58 \n"

"loc_FF8789D8:\n"
"    LDR     R8, [R0, #0xC] \n"
"    MOV     R0, R8 \n"
"    BL      sub_FF968ED8_my \n"  // --> Patched. Old value = 0xFF968ED8.
"    BL      capt_seq_hook_raw_here\n"
"    MOV     R4, R0 \n"
"    MOV     R2, R8 \n"
"    MOV     R1, #1 \n"
"    BL      sub_FF876B60 \n"
"    TST     R4, #1 \n"
"    MOVEQ   R0, R8 \n"
"    BLEQ    sub_FF968A04 \n"
"    B       loc_FF878B58 \n"

"loc_FF878A04:\n"
"    MOV     R0, #1 \n"
"    BL      sub_FF87935C \n"
"    B       loc_FF878B58 \n"

"loc_FF878A10:\n"
"    BL      sub_FF878D58 \n"
"    B       loc_FF878A1C \n"

"loc_FF878A18:\n"
"    BL      sub_FF87909C \n"

"loc_FF878A1C:\n"
"    STR     R6, [R5, #0x28] \n"
"    B       loc_FF878B58 \n"

"loc_FF878A24:\n"
"    BL      sub_FF8790A4 \n"
"    B       loc_FF878B58 \n"

"loc_FF878A2C:\n"
"    BL      sub_FF879270 \n"
"    B       loc_FF878A54 \n"

"loc_FF878A34:\n"
"    LDR     R4, [R0, #0xC] \n"
"    MOV     R0, R4 \n"
"    BL      sub_FF969004 \n"
"    MOV     R2, R4 \n"
"    MOV     R1, #9 \n"
"    BL      sub_FF876B60 \n"
"    B       loc_FF878B58 \n"

"loc_FF878A50:\n"
"    BL      sub_FF8792D4 \n"

"loc_FF878A54:\n"
"    BL      sub_FF876588 \n"
"    B       loc_FF878B58 \n"

"loc_FF878A5C:\n"
"    LDR     R0, [R5, #0x58] \n"
"    BL      sub_FF8797A0 \n"
"    B       loc_FF878B58 \n"

"loc_FF878A68:\n"
"    BL      sub_FF879AEC \n"
"    B       loc_FF878B58 \n"

"loc_FF878A70:\n"
"    BL      sub_FF879B50 \n"
"    B       loc_FF878B58 \n"

"loc_FF878A78:\n"
"    BL      sub_FF87909C \n"
"    B       loc_FF878B58 \n"

"loc_FF878A80:\n"
"    BL      sub_FF967E0C \n"
"    B       loc_FF878B58 \n"

"loc_FF878A88:\n"
"    BL      sub_FF968018 \n"
"    B       loc_FF878B58 \n"

"loc_FF878A90:\n"
"    BL      sub_FF9680BC \n"
"    B       loc_FF878B58 \n"

"loc_FF878A98:\n"
"    BL      sub_FF96818C \n"
"    B       loc_FF878B58 \n"

"loc_FF878AA0:\n"
"    MOV     R0, #0 \n"
"    BL      sub_FF968394 \n"
"    B       loc_FF878B58 \n"

"loc_FF878AAC:\n"
"    BL      sub_FF96850C \n"
"    B       loc_FF878B58 \n"

"loc_FF878AB4:\n"
"    BL      sub_FF9685B0 \n"
"    B       loc_FF878B58 \n"

"loc_FF878ABC:\n"
"    BL      sub_FF968690 \n"
"    B       loc_FF878B58 \n"

"loc_FF878AC4:\n"
"    BL      sub_FF8794C8 \n"
"    B       loc_FF878B58 \n"

"loc_FF878ACC:\n"
"    BL      sub_FF8794F4 \n"
"    BL      sub_FF837B24 \n"
"    B       loc_FF878B58 \n"

"loc_FF878AD8:\n"
"    BL      sub_FF968250 \n"
"    B       loc_FF878B58 \n"

"loc_FF878AE0:\n"
"    BL      sub_FF968290 \n"
"    B       loc_FF878B58 \n"

"loc_FF878AE8:\n"
"    BL      sub_FF87BDF0 \n"
"    B       loc_FF878B58 \n"

"loc_FF878AF0:\n"
"    BL      sub_FF87BE60 \n"
"    B       loc_FF878B58 \n"

"loc_FF878AF8:\n"
"    BL      sub_FF9687C8 \n"
"    B       loc_FF878B58 \n"

"loc_FF878B00:\n"
"    BL      sub_FF96882C \n"
"    B       loc_FF878B58 \n"

"loc_FF878B08:\n"
"    BL      sub_FF87BEBC \n"
"    BL      sub_FF87BE7C \n"
"    B       loc_FF878B58 \n"

"loc_FF878B14:\n"
"    MOV     R0, #1 \n"
"    BL      sub_FF96977C \n"
"    MOV     R0, #1 \n"
"    BL      sub_FF9698A4 \n"
"    LDRH    R0, [R5, #0x98] \n"
"    CMP     R0, #4 \n"
"    LDRNEH  R0, [R5] \n"
"    SUBNE   R1, R0, #0x4200 \n"
"    SUBNES  R1, R1, #0x2A \n"
"    BNE     loc_FF878B58 \n"
"    BL      sub_FF87BE60 \n"
"    BL      sub_FF87C460 \n"
"    BL      sub_FF87C2E0 \n"
"    B       loc_FF878B58 \n"

"loc_FF878B4C:\n"
"    LDR     R1, =0x5D7 \n"
"    LDR     R0, =0xFF878490 \n"
"    BL      _DebugAssert \n"

"loc_FF878B58:\n"
"    LDR     R0, [SP] \n"
"    LDR     R1, [R0, #4] \n"
"    LDR     R0, [R7] \n"
"    BL      sub_FF8828F8 /*_SetEventFlag*/ \n"
"    LDR     R4, [SP] \n"
"    LDR     R0, [R4, #8] \n"
"    CMP     R0, #0 \n"
"    LDREQ   R0, =0xFF878490 \n"
"    MOVEQ   R1, #0x118 \n"
"    BLEQ    _DebugAssert \n"
"    STR     R6, [R4, #8] \n"
"    B       loc_FF878900 \n"
);
}

/*************************************************************/
//** sub_FF968ED8_my @ 0xFF968ED8 - 0xFF968FAC, length=54
void __attribute__((naked,noinline)) sub_FF968ED8_my() {
asm volatile (
"    STMFD   SP!, {R3-R7,LR} \n"
"    LDR     R6, =0x39E7C \n"
"    MOV     R5, R0 \n"
"    LDR     R0, [R6, #0x28] \n"
"    MOV     R4, #0 \n"
"    CMP     R0, #0 \n"
"    BNE     loc_FF968F08 \n"
"    MOV     R0, #0xC \n"
"    BL      sub_FF87D974 \n"
"    TST     R0, #1 \n"
"    MOVNE   R0, #1 \n"
"    BNE     loc_FF968FAC \n"

"loc_FF968F08:\n"
"    BL      sub_FF8790AC \n"
"    LDR     R0, [R6, #0x28] \n"
"    CMP     R0, #0 \n"
"    BNE     loc_FF968F94 \n"
"    MOV     R0, R5 \n"
"    BL      sub_FF968918 \n"
"    TST     R0, #1 \n"
"    BNE     loc_FF968FAC \n"
"    MOV     R0, R5 \n"
"    BL      sub_FF968BC4 \n"
"    BL      sub_FF969558 \n"
"    BL      wait_until_remote_button_is_released\n"    // added
"    BL      capt_seq_hook_set_nr\n"                    // added
"    LDRH    R1, [R6] \n"
"    SUB     R0, R1, #0x8200 \n"
"    SUBS    R0, R0, #0x2D \n"
"    BNE     loc_FF968F84 \n"
"    MOV     R4, #1 \n"
"    MOV     R2, #2 \n"
"    MOV     R1, SP \n"
"    ADD     R0, R2, #0x15C \n"
"    STR     R4, [SP] \n"
"    BL      _GetPropertyCase \n"
"    TST     R0, #1 \n"
"    MOVNE   R1, #0xBC \n"
"    LDRNE   R0, =0xFF96905C \n"
"    BLNE    _DebugAssert \n"
"    LDRH    R0, [SP] \n"
"    CMP     R0, #1 \n"
"    STRHI   R4, [R5, #0xD4] \n"
"    BHI     loc_FF968FA4 \n"
"    MOV     R0, #0 \n"
"    STR     R0, [R5, #0xD4] \n"

"loc_FF968F84:\n"
"    MOV     R0, R5 \n"
"    BL      sub_FFAAE870 \n"
"    MOV     R4, R0 \n"
"    B       loc_FF968FA8 \n"

"loc_FF968F94:\n"
"    LDR     R0, =0x69A4 \n"
"    LDR     R0, [R0] \n"
"    CMP     R0, #0 \n"
"    BEQ     loc_FF968FA8 \n"

"loc_FF968FA4:\n"
"    MOV     R4, #0x1D \n"

"loc_FF968FA8:\n"
"    MOV     R0, R4 \n"

"loc_FF968FAC:\n"
"    LDMFD   SP!, {R3-R7,PC} \n"
);
}

/*************************************************************/
//** exp_drv_task @ 0xFF8BBE80 - 0xFF8BC54C, length=436
void __attribute__((naked,noinline)) exp_drv_task() {
asm volatile (
"    STMFD   SP!, {R4-R9,LR} \n"
"    SUB     SP, SP, #0x24 \n"
"    LDR     R6, =0x3E38 \n"
"    LDR     R7, =0xBB8 \n"
"    LDR     R4, =0x55374 \n"
"    MOV     R0, #0 \n"
"    ADD     R5, SP, #0x14 \n"
"    STR     R0, [SP, #0x10] \n"

"loc_FF8BBEA0:\n"
"    LDR     R0, [R6, #0x20] \n"
"    MOV     R2, #0 \n"
"    ADD     R1, SP, #0x20 \n"
"    BL      sub_FF839B6C /*_ReceiveMessageQueue*/ \n"
"    LDR     R0, [SP, #0x10] \n"
"    CMP     R0, #1 \n"
"    BNE     loc_FF8BBEEC \n"
"    LDR     R0, [SP, #0x20] \n"
"    LDR     R0, [R0] \n"
"    CMP     R0, #0x14 \n"
"    CMPNE   R0, #0x15 \n"
"    CMPNE   R0, #0x16 \n"
"    CMPNE   R0, #0x17 \n"
"    BEQ     loc_FF8BC04C \n"
"    CMP     R0, #0x29 \n"
"    BEQ     loc_FF8BBFD4 \n"
"    ADD     R1, SP, #0x10 \n"
"    MOV     R0, #0 \n"
"    BL      sub_FF8BBE30 \n"

"loc_FF8BBEEC:\n"
"    LDR     R0, [SP, #0x20] \n"
"    LDR     R1, [R0] \n"
"    CMP     R1, #0x2F \n"
"    BNE     loc_FF8BBF18 \n"
"    BL      sub_FF8BD324 \n"
"    LDR     R0, [R6, #0x1C] \n"
"    MOV     R1, #1 \n"
"    BL      sub_FF8828F8 /*_SetEventFlag*/ \n"
"    BL      _ExitTask \n"
"    ADD     SP, SP, #0x24 \n"
"    LDMFD   SP!, {R4-R9,PC} \n"

"loc_FF8BBF18:\n"
"    CMP     R1, #0x2E \n"
"    BNE     loc_FF8BBF34 \n"
"    LDR     R2, [R0, #0x8C]! \n"
"    LDR     R1, [R0, #4] \n"
"    MOV     R0, R1 \n"
"    BLX     R2 \n"
"    B       loc_FF8BC544 \n"

"loc_FF8BBF34:\n"
"    CMP     R1, #0x27 \n"
"    BNE     loc_FF8BBF84 \n"
"    LDR     R0, [R6, #0x1C] \n"
"    MOV     R1, #0x80 \n"
"    BL      sub_FF88292C /*_ClearEventFlag*/ \n"
"    LDR     R0, =0xFF8B7A04 \n"
"    MOV     R1, #0x80 \n"
"    BL      sub_FF95ED54 \n"
"    LDR     R0, [R6, #0x1C] \n"
"    MOV     R2, R7 \n"
"    MOV     R1, #0x80 \n"
"    BL      sub_FF882838 /*_WaitForAllEventFlag*/ \n"
"    TST     R0, #1 \n"
"    LDRNE   R1, =0x1733 \n"
"    BNE     loc_FF8BC040 \n"

"loc_FF8BBF70:\n"
"    LDR     R1, [SP, #0x20] \n"
"    LDR     R0, [R1, #0x90] \n"
"    LDR     R1, [R1, #0x8C] \n"
"    BLX     R1 \n"
"    B       loc_FF8BC544 \n"

"loc_FF8BBF84:\n"
"    CMP     R1, #0x28 \n"
"    BNE     loc_FF8BBFCC \n"
"    ADD     R1, SP, #0x10 \n"
"    BL      sub_FF8BBE30 \n"
"    LDR     R0, [R6, #0x1C] \n"
"    MOV     R1, #0x100 \n"
"    BL      sub_FF88292C /*_ClearEventFlag*/ \n"
"    LDR     R0, =0xFF8B7A14 \n"
"    MOV     R1, #0x100 \n"
"    BL      sub_FF95EFE4 \n"
"    LDR     R0, [R6, #0x1C] \n"
"    MOV     R2, R7 \n"
"    MOV     R1, #0x100 \n"
"    BL      sub_FF882838 /*_WaitForAllEventFlag*/ \n"
"    TST     R0, #1 \n"
"    BEQ     loc_FF8BBF70 \n"
"    LDR     R1, =0x173D \n"
"    B       loc_FF8BC040 \n"

"loc_FF8BBFCC:\n"
"    CMP     R1, #0x29 \n"
"    BNE     loc_FF8BBFE4 \n"

"loc_FF8BBFD4:\n"
"    LDR     R0, [SP, #0x20] \n"
"    ADD     R1, SP, #0x10 \n"
"    BL      sub_FF8BBE30 \n"
"    B       loc_FF8BBF70 \n"

"loc_FF8BBFE4:\n"
"    CMP     R1, #0x2C \n"
"    BNE     loc_FF8BBFFC \n"
"    BL      sub_FF8A9E34 \n"
"    BL      sub_FF8AAAB0 \n"
"    BL      sub_FF8AA628 \n"
"    B       loc_FF8BBF70 \n"

"loc_FF8BBFFC:\n"
"    CMP     R1, #0x2D \n"
"    BNE     loc_FF8BC04C \n"
"    LDR     R0, [R6, #0x1C] \n"
"    MOV     R1, #4 \n"
"    BL      sub_FF88292C /*_ClearEventFlag*/ \n"
"    LDR     R1, =0xFF8B7A34 \n"
"    LDR     R0, =0xFFFFF400 \n"
"    MOV     R2, #4 \n"
"    BL      sub_FF8A98A8 \n"
"    BL      sub_FF8A9B38 \n"
"    LDR     R0, [R6, #0x1C] \n"
"    MOV     R2, R7 \n"
"    MOV     R1, #4 \n"
"    BL      sub_FF882754 /*_WaitForAnyEventFlag*/ \n"
"    TST     R0, #1 \n"
"    BEQ     loc_FF8BBF70 \n"
"    LDR     R1, =0x1765 \n"

"loc_FF8BC040:\n"
"    LDR     R0, =0xFF8B8128 \n"
"    BL      _DebugAssert \n"
"    B       loc_FF8BBF70 \n"

"loc_FF8BC04C:\n"
"    LDR     R0, [SP, #0x20] \n"
"    MOV     R8, #1 \n"
"    LDR     R1, [R0] \n"
"    CMP     R1, #0x12 \n"
"    CMPNE   R1, #0x13 \n"
"    BNE     loc_FF8BC11C \n"
"    LDR     R1, [R0, #0x7C] \n"
"    ADD     R1, R1, R1, LSL#1 \n"
"    ADD     R1, R0, R1, LSL#2 \n"
"    SUB     R1, R1, #8 \n"
"    LDMIA   R1, {R2,R3,R9} \n"
"    STMIA   R5, {R2,R3,R9} \n"
"    BL      sub_FF8BA49C \n"
"    LDR     R0, [SP, #0x20] \n"
"    LDR     R1, [R0, #0x7C] \n"
"    LDR     R3, [R0, #0x8C] \n"
"    LDR     R2, [R0, #0x90] \n"
"    ADD     R0, R0, #4 \n"
"    BLX     R3 \n"
"    LDR     R0, [SP, #0x20] \n"
"    BL      sub_FF8BD6C0 \n"
"    LDR     R0, [SP, #0x20] \n"
"    LDR     R1, [R0, #0x7C] \n"
"    LDR     R2, [R0, #0x98] \n"
"    LDR     R3, [R0, #0x94] \n"
"    B       loc_FF8BC430 \n"

"loc_FF8BC11C:\n"
"    CMP     R1, #0x14 \n"
"    CMPNE   R1, #0x15 \n"
"    CMPNE   R1, #0x16 \n"
"    CMPNE   R1, #0x17 \n"
"    BNE     loc_FF8BC1D4 \n"
"    ADD     R3, SP, #0x10 \n"
"    ADD     R2, SP, #4 \n"
"    ADD     R1, SP, #0x14 \n"
"    BL      sub_FF8BA704 \n"
"    CMP     R0, #1 \n"
"    MOV     R9, R0 \n"
"    CMPNE   R9, #5 \n"
"    BNE     loc_FF8BC170 \n"
"    LDR     R0, [SP, #0x20] \n"
"    MOV     R2, R9 \n"
"    LDR     R1, [R0, #0x7C]! \n"
"    LDR     R12, [R0, #0x10]! \n"
"    LDR     R3, [R0, #4] \n"
"    ADD     R0, SP, #4 \n"
"    BLX     R12 \n"
"    B       loc_FF8BC1A8 \n"

"loc_FF8BC170:\n"
"    LDR     R0, [SP, #0x20] \n"
"    CMP     R9, #2 \n"
"    LDR     R3, [R0, #0x90] \n"
"    CMPNE   R9, #6 \n"
"    BNE     loc_FF8BC1BC \n"
"    LDR     R12, [R0, #0x8C] \n"
"    MOV     R2, R9 \n"
"    MOV     R1, #1 \n"
"    ADD     R0, SP, #4 \n"
"    BLX     R12 \n"
"    LDR     R0, [SP, #0x20] \n"
"    ADD     R2, SP, #4 \n"
"    ADD     R1, SP, #0x14 \n"
"    BL      sub_FF8BBB7C \n"

"loc_FF8BC1A8:\n"
"    LDR     R0, [SP, #0x20] \n"
"    LDR     R2, [SP, #0x10] \n"
"    MOV     R1, R9 \n"
"    BL      sub_FF8BBDD0 \n"
"    B       loc_FF8BC438 \n"

"loc_FF8BC1BC:\n"
"    LDR     R1, [R0, #0x7C] \n"
"    LDR     R12, [R0, #0x8C] \n"
"    MOV     R2, R9 \n"
"    ADD     R0, R0, #4 \n"
"    BLX     R12 \n"
"    B       loc_FF8BC438 \n"

"loc_FF8BC1D4:\n"
"    CMP     R1, #0x23 \n"
"    CMPNE   R1, #0x24 \n"
"    BNE     loc_FF8BC220 \n"
"    LDR     R1, [R0, #0x7C] \n"
"    ADD     R1, R1, R1, LSL#1 \n"
"    ADD     R1, R0, R1, LSL#2 \n"
"    SUB     R1, R1, #8 \n"
"    LDMIA   R1, {R2,R3,R9} \n"
"    STMIA   R5, {R2,R3,R9} \n"
"    BL      sub_FF8B9514 \n"
"    LDR     R0, [SP, #0x20] \n"
"    LDR     R1, [R0, #0x7C] \n"
"    LDR     R3, [R0, #0x8C] \n"
"    LDR     R2, [R0, #0x90] \n"
"    ADD     R0, R0, #4 \n"
"    BLX     R3 \n"
"    LDR     R0, [SP, #0x20] \n"
"    BL      sub_FF8B9950 \n"
"    B       loc_FF8BC438 \n"

"loc_FF8BC220:\n"
"    ADD     R1, R0, #4 \n"
"    LDMIA   R1, {R2,R3,R9} \n"
"    STMIA   R5, {R2,R3,R9} \n"
"    LDR     R1, [R0] \n"
"    CMP     R1, #0x27 \n"
"    ADDCC   PC, PC, R1, LSL#2 \n"
"    B       loc_FF8BC420 \n"
"    B       loc_FF8BC2D8 \n"
"    B       loc_FF8BC2D8 \n"
"    B       loc_FF8BC2E0 \n"
"    B       loc_FF8BC2E8 \n"
"    B       loc_FF8BC2E8 \n"
"    B       loc_FF8BC2E8 \n"
"    B       loc_FF8BC2D8 \n"
"    B       loc_FF8BC2E0 \n"
"    B       loc_FF8BC2E8 \n"
"    B       loc_FF8BC2E8 \n"
"    B       loc_FF8BC300 \n"
"    B       loc_FF8BC300 \n"
"    B       loc_FF8BC40C \n"
"    B       loc_FF8BC414 \n"
"    B       loc_FF8BC414 \n"
"    B       loc_FF8BC414 \n"
"    B       loc_FF8BC414 \n"
"    B       loc_FF8BC41C \n"
"    B       loc_FF8BC420 \n"
"    B       loc_FF8BC420 \n"
"    B       loc_FF8BC420 \n"
"    B       loc_FF8BC420 \n"
"    B       loc_FF8BC420 \n"
"    B       loc_FF8BC420 \n"
"    B       loc_FF8BC2F0 \n"
"    B       loc_FF8BC2F8 \n"
"    B       loc_FF8BC2F8 \n"
"    B       loc_FF8BC30C \n"
"    B       loc_FF8BC30C \n"
"    B       loc_FF8BC314 \n"
"    B       loc_FF8BC34C \n"
"    B       loc_FF8BC384 \n"
"    B       loc_FF8BC3BC \n"
"    B       loc_FF8BC3F4 \n"
"    B       loc_FF8BC3F4 \n"
"    B       loc_FF8BC420 \n"
"    B       loc_FF8BC420 \n"
"    B       loc_FF8BC3FC \n"
"    B       loc_FF8BC404 \n"

"loc_FF8BC2D8:\n"
"    BL      sub_FF8B7FAC \n"
"    B       loc_FF8BC420 \n"

"loc_FF8BC2E0:\n"
"    BL      sub_FF8B8250 \n"
"    B       loc_FF8BC420 \n"

"loc_FF8BC2E8:\n"
"    BL      sub_FF8B8478 \n"
"    B       loc_FF8BC420 \n"

"loc_FF8BC2F0:\n"
"    BL      sub_FF8B8750 \n"
"    B       loc_FF8BC420 \n"

"loc_FF8BC2F8:\n"
"    BL      sub_FF8B8968 \n"
"    B       loc_FF8BC420 \n"

"loc_FF8BC300:\n"
"    BL      sub_FF8B8CE8_my \n"  // --> Patched. Old value = 0xFF8B8CE8.
"    MOV     R8, #0 \n"
"    B       loc_FF8BC420 \n"

"loc_FF8BC30C:\n"
"    BL      sub_FF8B8E30 \n"
"    B       loc_FF8BC420 \n"

"loc_FF8BC314:\n"
"    LDRH    R1, [R0, #4] \n"
"    STRH    R1, [SP, #0x14] \n"
"    LDRH    R1, [R4, #2] \n"
"    STRH    R1, [SP, #0x16] \n"
"    LDRH    R1, [R4, #4] \n"
"    STRH    R1, [SP, #0x18] \n"
"    LDRH    R1, [R4, #6] \n"
"    STRH    R1, [SP, #0x1A] \n"
"    LDRH    R1, [R0, #0xC] \n"
"    STRH    R1, [SP, #0x1C] \n"
"    LDRH    R1, [R4, #0xA] \n"
"    STRH    R1, [SP, #0x1E] \n"
"    BL      sub_FF8BD3B8 \n"
"    B       loc_FF8BC420 \n"

"loc_FF8BC34C:\n"
"    LDRH    R1, [R0, #4] \n"
"    STRH    R1, [SP, #0x14] \n"
"    LDRH    R1, [R4, #2] \n"
"    STRH    R1, [SP, #0x16] \n"
"    LDRH    R1, [R4, #4] \n"
"    STRH    R1, [SP, #0x18] \n"
"    LDRH    R1, [R4, #6] \n"
"    STRH    R1, [SP, #0x1A] \n"
"    LDRH    R1, [R4, #8] \n"
"    STRH    R1, [SP, #0x1C] \n"
"    LDRH    R1, [R4, #0xA] \n"
"    STRH    R1, [SP, #0x1E] \n"
"    BL      sub_FF8BD4C0 \n"
"    B       loc_FF8BC420 \n"

"loc_FF8BC384:\n"
"    LDRH    R1, [R4] \n"
"    STRH    R1, [SP, #0x14] \n"
"    LDRH    R1, [R0, #6] \n"
"    STRH    R1, [SP, #0x16] \n"
"    LDRH    R1, [R4, #4] \n"
"    STRH    R1, [SP, #0x18] \n"
"    LDRH    R1, [R4, #6] \n"
"    STRH    R1, [SP, #0x1A] \n"
"    LDRH    R1, [R4, #8] \n"
"    STRH    R1, [SP, #0x1C] \n"
"    LDRH    R1, [R4, #0xA] \n"
"    STRH    R1, [SP, #0x1E] \n"
"    BL      sub_FF8BD574 \n"
"    B       loc_FF8BC420 \n"

"loc_FF8BC3BC:\n"
"    LDRH    R1, [R4] \n"
"    STRH    R1, [SP, #0x14] \n"
"    LDRH    R1, [R4, #2] \n"
"    STRH    R1, [SP, #0x16] \n"
"    LDRH    R1, [R4, #4] \n"
"    STRH    R1, [SP, #0x18] \n"
"    LDRH    R1, [R4, #6] \n"
"    STRH    R1, [SP, #0x1A] \n"
"    LDRH    R1, [R0, #0xC] \n"
"    STRH    R1, [SP, #0x1C] \n"
"    LDRH    R1, [R4, #0xA] \n"
"    STRH    R1, [SP, #0x1E] \n"
"    BL      sub_FF8BD61C \n"
"    B       loc_FF8BC420 \n"

"loc_FF8BC3F4:\n"
"    BL      sub_FF8B9308 \n"
"    B       loc_FF8BC420 \n"

"loc_FF8BC3FC:\n"
"    BL      sub_FF8B9A54 \n"
"    B       loc_FF8BC420 \n"

"loc_FF8BC404:\n"
"    BL      sub_FF8B9CFC \n"
"    B       loc_FF8BC420 \n"

"loc_FF8BC40C:\n"
"    BL      sub_FF8B9EDC \n"
"    B       loc_FF8BC420 \n"

"loc_FF8BC414:\n"
"    BL      sub_FF8BA124 \n"
"    B       loc_FF8BC420 \n"

"loc_FF8BC41C:\n"
"    BL      sub_FF8BA294 \n"

"loc_FF8BC420:\n"
"    LDR     R0, [SP, #0x20] \n"
"    LDR     R1, [R0, #0x7C] \n"
"    LDR     R2, [R0, #0x90] \n"
"    LDR     R3, [R0, #0x8C] \n"

"loc_FF8BC430:\n"
"    ADD     R0, R0, #4 \n"
"    BLX     R3 \n"

"loc_FF8BC438:\n"
"    LDR     R1, [SP, #0x20] \n"
"    LDR     R0, [R1] \n"
"    CMP     R0, #0x10 \n"
"    BEQ     loc_FF8BC470 \n"
"    BGT     loc_FF8BC460 \n"
"    CMP     R0, #1 \n"
"    CMPNE   R0, #4 \n"
"    CMPNE   R0, #0xE \n"
"    BNE     loc_FF8BC480 \n"
"    B       loc_FF8BC470 \n"

"loc_FF8BC460:\n"
"    CMP     R0, #0x13 \n"
"    CMPNE   R0, #0x17 \n"
"    CMPNE   R0, #0x1A \n"
"    BNE     loc_FF8BC480 \n"

"loc_FF8BC470:\n"
"    LDRH    R0, [R4] \n"
"    STRH    R0, [SP, #0x14] \n"
"    LDRH    R0, [R4, #8] \n"
"    STRH    R0, [SP, #0x1C] \n"

"loc_FF8BC480:\n"
"    CMP     R8, #1 \n"
"    BNE     loc_FF8BC4CC \n"
"    LDR     R0, [R1, #0x7C] \n"
"    MOV     R2, #0xC \n"
"    ADD     R0, R0, R0, LSL#1 \n"
"    ADD     R0, R1, R0, LSL#2 \n"
"    SUB     R8, R0, #8 \n"
"    LDR     R0, =0x55374 \n"
"    ADD     R1, SP, #0x14 \n"
"    BL      sub_FFB50DCC \n"
"    LDR     R0, =0x55380 \n"
"    MOV     R2, #0xC \n"
"    ADD     R1, SP, #0x14 \n"
"    BL      sub_FFB50DCC \n"
"    LDR     R0, =0x5538C \n"
"    MOV     R2, #0xC \n"
"    MOV     R1, R8 \n"
"    BL      sub_FFB50DCC \n"
"    B       loc_FF8BC544 \n"

"loc_FF8BC4CC:\n"
"    LDR     R0, [R1] \n"
"    MOV     R3, #1 \n"
"    CMP     R0, #0xB \n"
"    BNE     loc_FF8BC510 \n"
"    MOV     R2, #0 \n"
"    STRD    R2, [SP] \n"
"    MOV     R2, R3 \n"
"    MOV     R1, R3 \n"
"    MOV     R0, #0 \n"
"    BL      sub_FF8B7D8C \n"
"    MOV     R3, #1 \n"
"    MOV     R2, #0 \n"
"    STRD    R2, [SP] \n"
"    MOV     R2, R3 \n"
"    MOV     R1, R3 \n"
"    MOV     R0, #0 \n"
"    B       loc_FF8BC540 \n"

"loc_FF8BC510:\n"
"    MOV     R2, #1 \n"
"    STRD    R2, [SP] \n"
"    MOV     R3, R2 \n"
"    MOV     R1, R2 \n"
"    MOV     R0, R2 \n"
"    BL      sub_FF8B7D8C \n"
"    MOV     R3, #1 \n"
"    MOV     R2, R3 \n"
"    MOV     R1, R3 \n"
"    MOV     R0, R3 \n"
"    STR     R3, [SP] \n"
"    STR     R3, [SP, #4] \n"

"loc_FF8BC540:\n"
"    BL      sub_FF8B7EF8 \n"

"loc_FF8BC544:\n"
"    LDR     R0, [SP, #0x20] \n"
"    BL      sub_FF8BD324 \n"
"    B       loc_FF8BBEA0 \n"
);
}

/*************************************************************/
//** sub_FF8B8CE8_my @ 0xFF8B8CE8 - 0xFF8B8DB0, length=51
void __attribute__((naked,noinline)) sub_FF8B8CE8_my() {
asm volatile (
"    STMFD   SP!, {R4-R8,LR} \n"
"    LDR     R7, =0x3E38 \n"
"    MOV     R4, R0 \n"
"    LDR     R0, [R7, #0x1C] \n"
"    MOV     R1, #0x3E \n"
"    BL      sub_FF88292C /*_ClearEventFlag*/ \n"
"    MOV     R2, #0 \n"
"    LDRSH   R0, [R4, #4] \n"
"    MOV     R1, R2 \n"
"    BL      sub_FF8B7A94 \n"
"    MOV     R5, R0 \n"
"    LDRSH   R0, [R4, #6] \n"
"    BL      sub_FF8B7BE4 \n"
"    LDRSH   R0, [R4, #8] \n"
"    BL      sub_FF8B7C3C \n"
"    LDRSH   R0, [R4, #0xA] \n"
"    BL      sub_FF8B7C94 \n"
"    LDRSH   R0, [R4, #0xC] \n"
"    MOV     R1, #0 \n"
"    BL      sub_FF8B7CEC \n"
"    MOV     R6, R0 \n"
"    LDRSH   R0, [R4, #0xE] \n"
"    BL      sub_FF8BD354 \n"
"    LDR     R0, [R4] \n"
"    LDR     R8, =0x5538C \n"
"    CMP     R0, #0xB \n"
"    MOVEQ   R5, #0 \n"
"    MOVEQ   R6, R5 \n"
"    BEQ     loc_FF8B8D84 \n"
"    CMP     R5, #1 \n"
"    BNE     loc_FF8B8D84 \n"
"    LDRSH   R0, [R4, #4] \n"
"    LDR     R1, =0xFF8B79F4 \n"
"    MOV     R2, #2 \n"
"    BL      sub_FF95EEA8 \n"
"    STRH    R0, [R4, #4] \n"
"    MOV     R0, #0 \n"
"    STR     R0, [R7, #0x28] \n"
"    B       loc_FF8B8D8C \n"

"loc_FF8B8D84:\n"
"    LDRH    R0, [R8] \n"
"    STRH    R0, [R4, #4] \n"

"loc_FF8B8D8C:\n"
"    CMP     R6, #1 \n"
"    LDRNEH  R0, [R8, #8] \n"
"    BNE     loc_FF8B8DA8 \n"
"    LDRSH   R0, [R4, #0xC] \n"
"    LDR     R1, =0xFF8B7A78 \n"
"    MOV     R2, #0x20 \n"
"    BL      sub_FF8BD374 \n"

"loc_FF8B8DA8:\n"
"    STRH    R0, [R4, #0xC] \n"
"    LDRSH   R0, [R4, #6] \n"
"    BL      sub_FF8A9BA4_my \n"  // --> Patched. Old value = 0xFF8A9BA4.
"    LDR     PC, =0xFF8B8DB4 \n"  // Continue in firmware
);
}

/*************************************************************/
//** sub_FF8A9BA4_my @ 0xFF8A9BA4 - 0xFF8A9BE4, length=17
void __attribute__((naked,noinline)) sub_FF8A9BA4_my() {
asm volatile (
"    STMFD   SP!, {R4-R6,LR} \n"
"    LDR     R5, =0x3AFC \n"
"    MOV     R4, R0 \n"
"    LDR     R0, [R5, #4] \n"
"    CMP     R0, #1 \n"
"    LDRNE   R1, =0x146 \n"
"    LDRNE   R0, =0xFF8A99DC \n"
"    BLNE    _DebugAssert \n"
"    CMN     R4, #0xC00 \n"
"    LDREQSH R4, [R5, #2] \n"
"    CMN     R4, #0xC00 \n"
"    MOVEQ   R1, #0x14C \n"
"    LDREQ   R0, =0xFF8A99DC \n"
"    STRH    R4, [R5, #2] \n"
"    BLEQ    _DebugAssert \n"
"    MOV     R0, R4 \n"
"    BL      apex2us \n"  // --> Patched. Old value = _apex2us.
"    LDR     PC, =0xFF8A9BE8 \n"  // Continue in firmware
);
}
