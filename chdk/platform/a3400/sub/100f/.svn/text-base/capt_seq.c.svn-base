#include "lolevel.h"
#include "platform.h"
#include "core.h"
#include "conf.h"
#include "stdlib.h"

static long *nrflag = (long*)(0x8b64+0x00);  // Found @ ff9f7100 & ff9f7148
#define NR_AUTO (0)                          // have to explictly reset value back to 0 to enable auto

#define PAUSE_FOR_FILE_COUNTER 150           // Enable delay in capt_seq_hook_raw_here to ensure file counter is updated
#include "../../../generic/capt_seq.c"

//** capt_seq_task  @ 0xFF872424 

void __attribute__((naked,noinline)) capt_seq_task(  ) { 
asm volatile (
      "STMFD   SP!, {R3-R9,LR} \n"
      "LDR     R4, =0x376AC \n"
      "LDR     R7, =0x2BA8 \n"
      "MOV     R6, #0 \n"
"loc_FF872434:\n"
      "LDR     R0, [R7, #4] \n"
      "MOV     R2, #0 \n"
      "MOV     R1, SP \n"
      "BL      sub_003F7218 \n" // RAM
      "TST     R0, #1 \n"
      "BEQ     loc_FF872460 \n"
      "LDR     R1, =0x493 \n"
      "LDR     R0, =0xFF871F90 \n" // "SsShootTask.c"
      "BL      _DebugAssert \n"
      "BL      _ExitTask \n"
      "LDMFD   SP!, {R3-R9,PC} \n"
"loc_FF872460:\n"
      "LDR     R0, [SP] \n"
      "LDR     R1, [R0] \n"
      "CMP     R1, #0x20 \n"
      "ADDCC   PC, PC, R1, LSL #2 \n"
      "B       loc_FF8726BC \n"
      "B       loc_FF8724F4 \n"
      "B       loc_FF87250C \n"
      "B       loc_FF872570 \n"
      "B       loc_FF872584 \n"
      "B       loc_FF87257C \n"
      "B       loc_FF872590 \n"
      "B       loc_FF872598 \n"
      "B       loc_FF8725A0 \n"
      "B       loc_FF8725BC \n"
      "B       loc_FF8725E8 \n"
      "B       loc_FF8725C8 \n"
      "B       loc_FF8725D4 \n"
      "B       loc_FF8725DC \n"
      "B       loc_FF8725F0 \n"
      "B       loc_FF8725F8 \n"
      "B       loc_FF872600 \n"
      "B       loc_FF872608 \n"
      "B       loc_FF872610 \n"
      "B       loc_FF87261C \n"
      "B       loc_FF872624 \n"
      "B       loc_FF87262C \n"
      "B       loc_FF872634 \n"
      "B       loc_FF87263C \n"
      "B       loc_FF872648 \n"
      "B       loc_FF872650 \n"
      "B       loc_FF872658 \n"
      "B       loc_FF872660 \n"
      "B       loc_FF872668 \n"
      "B       loc_FF872674 \n"
      "B       loc_FF87267C \n"
      "B       loc_FF872688 \n"
      "B       loc_FF8726C8 \n"
"loc_FF8724F4:\n"
      "BL		shooting_expo_iso_override\n"       // added
      "BL      sub_FF872C3C \n"
      "BL      shooting_expo_param_override\n"      // added
      "BL      sub_FF870230 \n"
//      "LDR     R0, [R4, #0x28] \n"
//      "CMP     R0, #0 \n"
//      "BLNE    sub_FF968D48 \n" // above 3 lines removed - redundant with added lines below
      "MOV     R0, #0\n"          // patch added
      "STR     R0, [R4,#0x28]\n"  //fixes overrides  behavior at short shutter press
      "B       loc_FF8726C8 \n"
"loc_FF87250C:\n"
      "LDR     R5, [R0, #0x10] \n"
      "LDR     R0, [R4, #0x28] \n"
      "CMP     R0, #0 \n"
      "BNE     loc_FF872548 \n"
      "BL      sub_FF873B4C \n"
      "MOV     R1, R5 \n"
      "BL      sub_FF873BA4 \n"
      "LDR     R0, =0x10F \n"
      "MOV     R2, #4 \n"
      "ADD     R1, R5, #0x24 \n"
      "BL      _SetPropertyCase \n"
      "MOV     R2, #4 \n"
      "ADD     R1, R5, #0x28 \n"
      "MOV     R0, #0x2C \n"
      "BL      _SetPropertyCase \n"
"loc_FF872548:\n"
      "MOV     R0, R5 \n"
//      "BL      sub_FF968CAC \n" //original
      "BL      sub_FF968CAC_my \n" //patched
      "BL      capt_seq_hook_raw_here \n" // patch
      "MOV     R8, R0 \n"
      "MOV     R2, R5 \n"
      "MOV     R1, #1 \n"
      "BL      sub_FF8706E0 \n"
      "TST     R8, #1 \n"
      "MOVEQ   R0, R5 \n"
      "BLEQ    sub_FF968628 \n"
      "B       loc_FF8726C8 \n"
"loc_FF872570:\n"
      "MOV     R0, #1 \n"
      "BL      sub_FF872F0C \n"
      "B       loc_FF8726C8 \n"
"loc_FF87257C:\n"
      "BL      sub_FF872890 \n"
      "B       loc_FF872588 \n"
"loc_FF872584:\n"
      "BL      sub_FF872C1C \n"
"loc_FF872588:\n"
      "STR     R6, [R4, #0x28] \n"
      "B       loc_FF8726C8 \n"
"loc_FF872590:\n"
      "BL      sub_FF872C24 \n"
      "B       loc_FF8726C8 \n"
"loc_FF872598:\n"
      "BL      sub_FF872DF4 \n"
      "B       loc_FF8725C0 \n"
"loc_FF8725A0:\n"
      "LDR     R5, [R0, #0x10] \n"
      "MOV     R0, R5 \n"
      "BL      sub_FF968DE0 \n"
      "MOV     R2, R5 \n"
      "MOV     R1, #9 \n"
      "BL      sub_FF8706E0 \n"
      "B       loc_FF8726C8 \n"
"loc_FF8725BC:\n"
      "BL      sub_FF872E74 \n"
"loc_FF8725C0:\n"
      "BL      sub_FF870230 \n"
      "B       loc_FF8726C8 \n"
"loc_FF8725C8:\n"
      "LDR     R0, [R4, #0x58] \n"
      "BL      sub_FF8732FC \n"
      "B       loc_FF8726C8 \n"
"loc_FF8725D4:\n"
      "BL      sub_FF8736BC \n"
      "B       loc_FF8726C8 \n"
"loc_FF8725DC:\n"
      "MOV     R0, #0 \n"
      "BL      sub_FF873720 \n"
      "B       loc_FF8726C8 \n"
"loc_FF8725E8:\n"
      "BL      sub_FF872C1C \n"
      "B       loc_FF8726C8 \n"
"loc_FF8725F0:\n"
      "BL      sub_FF9679CC \n"
      "B       loc_FF8726C8 \n"
"loc_FF8725F8:\n"
      "BL      sub_FF967C2C \n"
      "B       loc_FF8726C8 \n"
"loc_FF872600:\n"
      "BL      sub_FF967CE4 \n"
      "B       loc_FF8726C8 \n"
"loc_FF872608:\n"
      "BL      sub_FF967DB8 \n"
      "B       loc_FF8726C8 \n"
"loc_FF872610:\n"
      "MOV     R0, #0 \n"
      "BL      sub_FF968018 \n"
      "B       loc_FF8726C8 \n"
"loc_FF87261C:\n"
      "BL      sub_FF968188 \n"
      "B       loc_FF8726C8 \n"
"loc_FF872624:\n"
      "BL      sub_FF96821C \n"
      "B       loc_FF8726C8 \n"
"loc_FF87262C:\n"
      "BL      sub_FF9682D8 \n"
      "B       loc_FF8726C8 \n"
"loc_FF872634:\n"
      "BL      sub_FF873080 \n"
      "B       loc_FF8726C8 \n"
"loc_FF87263C:\n"
      "BL      sub_FF873104 \n"
      "BL      sub_FF8322CC \n"
      "B       loc_FF8726C8 \n"
"loc_FF872648:\n"
      "BL      sub_FF967E88 \n"
      "B       loc_FF8726C8 \n"
"loc_FF872650:\n"
      "BL      sub_FF967EC8 \n"
      "B       loc_FF8726C8 \n"
"loc_FF872658:\n"
      "BL      sub_FF875028 \n"
      "B       loc_FF8726C8 \n"
"loc_FF872660:\n"
      "BL      sub_FF87509C \n"
      "B       loc_FF8726C8 \n"
"loc_FF872668:\n"
      "LDR     R0, [R0, #0xC] \n"
      "BL      sub_FF968400 \n"
      "B       loc_FF8726C8 \n"
"loc_FF872674:\n"
      "BL      sub_FF968470 \n"
      "B       loc_FF8726C8 \n"
"loc_FF87267C:\n"
      "BL      sub_FF875104 \n"
      "BL      sub_FF8750BC \n"
      "B       loc_FF8726C8 \n"
"loc_FF872688:\n"
      "MOV     R0, #1 \n"
      "BL      sub_FF9694E0 \n"
      "MOV     R0, #1 \n"
      "BL      sub_FF969608 \n"
      "LDRH    R0, [R4, #0x9C] \n"
      "CMP     R0, #4 \n"
      "LDRNEH  R0, [R4] \n"
      "SUBNE   R1, R0, #0x8200 \n"
      "SUBNES  R1, R1, #0x2E \n"
      "BNE     loc_FF8726C8 \n"
      "BL      sub_FF87509C \n"
      "BL      sub_FF875560 \n"
      "B       loc_FF8726C8 \n"
"loc_FF8726BC:\n"
      "LDR     R1, =0x5F4 \n"
      "LDR     R0, =0xFF871F90 \n" // "SsShootTask.c"
      "BL      _DebugAssert \n"
"loc_FF8726C8:\n"
      "LDR     R0, [SP] \n"
      "LDR     R1, [R0, #4] \n"
      "LDR     R0, [R7] \n"
      "BL      sub_003FAC6C \n"
      "LDR     R5, [SP] \n"
      "LDR     R0, [R5, #8] \n"
      "CMP     R0, #0 \n"
      "LDREQ   R1, =0x117 \n"
      "LDREQ   R0, =0xFF871F90 \n" // "SsShootTask.c"
      "BLEQ    _DebugAssert \n"
      "STR     R6, [R5, #8] \n"
      "B       loc_FF872434 \n"
	);
}

//** sub_FF968CAC_my  @ 0xFF968CAC 
//CHECK THIS!!!
void __attribute__((naked,noinline)) sub_FF968CAC_my() {
asm volatile (
      "STMFD   SP!, {R4-R6,LR} \n"
      "LDR     R5, =0x376AC \n"
      "MOV     R6, R0 \n"
      "LDR     R0, [R5, #0x28] \n"
      "MOV     R4, #0 \n"
      "CMP     R0, #0 \n"
      "BNE     loc_FF968CDC \n"
      "MOV     R0, #0xC \n"
      "BL      sub_FF876C00 \n"
      "TST     R0, #1 \n"
      "MOVNE   R0, #1 \n"
      "LDMNEFD SP!, {R4-R6,PC} \n"
"loc_FF968CDC:\n"
      "BL      sub_FF872C2C \n"
      "LDR     R0, [R5, #0x28] \n"
      "CMP     R0, #0 \n"
      "BNE     loc_FF968D2C \n"
      "MOV     R0, R6 \n"
      "BL      sub_FF968568 \n"
      "TST     R0, #1 \n"
      "LDMNEFD SP!, {R4-R6,PC} \n"
      "MOV     R0, R6 \n"
      "BL      sub_FF9688FC \n"
      "BL      sub_FF9692C0 \n"

//This was not tested:
//begin patch
      "BL      wait_until_remote_button_is_released\n"  
      "BL      capt_seq_hook_set_nr\n"      
//end patch            
      "MOV     R0, #2 \n"
      "BL      sub_FF878360 \n"
      "LDR     R0, [R5, #0x8C] \n"
      "TST     R0, #0x10 \n"
      "BNE     loc_FF968D3C \n"
      "MOV     R0, R6 \n"
      "BL      sub_FFA87454 \n"  //original
//      "BL      sub_FFA87454_my \n" //This function calls "SsStandardCaptureSeq.c"
      "MOV     R4, R0 \n"
      "B       loc_FF968D40 \n"
"loc_FF968D2C:\n"
      "LDR     R0, =0x694C \n"
      "LDR     R0, [R0] \n"
      "CMP     R0, #0 \n"
      "BEQ     loc_FF968D40 \n"
"loc_FF968D3C:\n"
      "MOV     R4, #0x1D \n"
"loc_FF968D40:\n"
      "MOV     R0, R4 \n"
      "LDMFD   SP!, {R4-R6,PC} \n"
	);
}

//** sub_FFA87454_my  @ 0xFFA87454
/*
void __attribute__((naked,noinline)) sub_FFA87454_my() {
asm volatile (
      "STMFD   SP!, {R3-R9,LR} \n"
      "MOV     R4, R0 \n"
      "LDR     R1, =0xB60C \n"
      "MOV     R2, #4 \n"
      "MOV     R0, #0x130 \n"
      "BL      _GetPropertyCase \n"
      "TST     R0, #1 \n"
      "MOVNE   R1, #0x230 \n"
      "LDRNE   R0, =0xFFA87680 \n" // "SsStandardCaptureSeq.c"
      "BLNE    _DebugAssert \n"
      "LDR     R6, =0xB604 \n"
      "LDR     R0, [R6, #8] \n"
      "AND     R0, R0, #0xFF00 \n"
      "CMP     R0, #0x600 \n"
      "LDRNE   R0, =0xFF968640 \n"
      "LDREQ   R0, =0xFFA871CC \n"
      "MOVNE   R1, R4 \n"
      "MOVEQ   R1, #0 \n"
      "BL      sub_FF8A6514 \n"
      "MOV     R0, R4 \n"
      "BL      sub_FF9685F8 \n"
      "MOV     R0, R4 \n"
      "BL      sub_FF9689CC \n"
      "MOV     R8, R0 \n"
      "LDR     R1, =0xB608 \n"
      "MOV     R2, #4 \n"
      "MOV     R0, #0x8A \n"
      "BL      _GetPropertyCase \n"
      "TST     R0, #1 \n"
      "LDRNE   R1, =0x23D \n"
      "LDRNE   R0, =0xFFA87680 \n" // "SsStandardCaptureSeq.c"
      "BLNE    _DebugAssert \n"
      "BL      sub_FF874DA0 \n"
      "BL      sub_FF968BD4 \n"
      "CMP     R8, #0xA \n"
      "MOV     R7, #0 \n"
      "MOV     R5, #1 \n"
      "ADDCC   PC, PC, R8, LSL #2 \n"
      "B       loc_FFA875B4 \n"
      "B       loc_FFA875B4 \n"
      "B       loc_FFA87518 \n"
      "B       loc_FFA87528 \n"
      "B       loc_FFA87544 \n"
      "B       loc_FFA87554 \n"
      "B       loc_FFA87580 \n"
      "B       loc_FFA875B4 \n"
      "B       loc_FFA875B4 \n"
      "B       loc_FFA875B4 \n"
      "B       loc_FFA87598 \n"
"loc_FFA87518:\n"
      "MOV     R0, #1 \n"
      "BL      sub_FF8A6530 \n"
      "STRH    R7, [R4, #0x10] \n"
      "B       loc_FFA875A8 \n"
"loc_FFA87528:\n"
      "MOV     R0, #1 \n"
      "BL      sub_FF8A6530 \n"
      "MOV     R0, R4 \n"
      "STRH    R5, [R4, #0x10] \n"
      "BL      sub_FFA872DC \n"
"loc_FFA8753C:\n"
      "MOV     R5, R0 \n"
      "B       loc_FFA875C4 \n"
"loc_FFA87544:\n"
      "MOV     R0, #1 \n"
      "BL      sub_FF8A6530 \n"
      "MOV     R0, #1 \n"
      "B       loc_FFA87560 \n"
"loc_FFA87554:\n"
      "MOV     R0, #1 \n"
      "BL      sub_FF8A6530 \n"
      "MOV     R0, #2 \n"
"loc_FFA87560:\n"
      "BL      sub_FF8A6694 \n"
      "MOV     R0, R4 \n"
      "STRH    R5, [R4, #0x10] \n"
      "BL      sub_FFA872DC \n"
      "MOV     R5, R0 \n"
      "MOV     R0, #0 \n"
      "BL      sub_FF8A6694 \n"
      "B       loc_FFA875C4 \n"
"loc_FFA87580:\n"
      "MOV     R0, #1 \n"
      "BL      sub_FF8A6530 \n"
      "MOV     R0, R4 \n"
      "STRH    R7, [R4, #0x10] \n"
      "BL      sub_FFA873A4 \n"
      "B       loc_FFA8753C \n"
"loc_FFA87598:\n"
      "MOV     R0, #0 \n"
      "BL      sub_FF8A6530 \n"
      "MOV     R0, #4 \n"
      "STRH    R0, [R4, #0x10] \n"
"loc_FFA875A8:\n"
      "MOV     R0, R4 \n"
      "BL      sub_FFA8725C \n"
      "B       loc_FFA8753C \n"
"loc_FFA875B4:\n"
      "LDR     R1, =0x286 \n"
      "LDR     R0, =0xFFA87680 \n" // "SsStandardCaptureSeq.c"
      "BL      _DebugAssert \n"
      "MOV     R5, #0x1D \n"
"loc_FFA875C4:\n"
      "BL      sub_FF968C24 \n"
      "TST     R5, #1 \n"
      "MOVNE   R0, R5 \n"
      "BNE     loc_FFA8765C \n"
      "MOV     R0, R4 \n"
      "BL      sub_FF968AF8 \n"
      "MOV     R0, R4 \n"
      "BL      sub_FF968A94 \n"
      "LDR     R0, [R6] \n"
      "CMP     R0, #0 \n"
      "BNE     loc_FFA87604 \n"
      "LDRH    R0, [R4, #0x10] \n"
      "CMP     R0, #1 \n"
      "CMPNE   R0, #3 \n"
      "CMPNE   R0, #5 \n"
      "BEQ     loc_FFA87658 \n"
"loc_FFA87604:\n"
      "BL      sub_FF9697C8 \n"
      "LDR     R5, =0x2A3 \n"
      "LDR     R2, =0x3A98 \n"
      "LDR     R3, =0xFFA87680 \n" // "SsStandardCaptureSeq.c"
      "MOV     R1, #0xC \n"
      "STR     R5, [SP] \n"
      "BL      sub_FF876E68 \n"
      "CMP     R0, #0 \n"
      "MOVNE   R1, R5 \n"
      "LDRNE   R0, =0xFFA87680 \n" // "SsStandardCaptureSeq.c"
      "BLNE    _DebugAssert \n"
      "LDR     R0, =0x376AC \n"
      "LDR     R1, [R0, #0x8C] \n"
      "TST     R1, #2 \n"
      "BNE     loc_FFA87658 \n"
      "LDRH    R0, [R0, #0x9A] \n"
      "CMP     R0, #3 \n"
      "LDRNE   R0, [R4, #8] \n"
      "CMPNE   R0, #1 \n"
      "MOVLS   R0, R4 \n"
      "BLLS    sub_FF9686C8 \n"
"loc_FFA87658:\n"
      "MOV     R0, #0 \n"
"loc_FFA8765C:\n"
      "LDMFD   SP!, {R3-R9,PC} \n"
	);
}
*/

//** exp_drv_task  @ 0xFF8B1A4C 

void __attribute__((naked,noinline)) exp_drv_task() {
asm volatile (
      "STMFD   SP!, {R4-R9,LR} \n"
      "SUB     SP, SP, #0x2C \n"
      "LDR     R6, =0x3E3C \n"
      "LDR     R7, =0xBB8 \n"
      "LDR     R4, =0x5465C \n"
      "MOV     R0, #0 \n"
      "ADD     R5, SP, #0x1C \n"
      "STR     R0, [SP, #0xC] \n"
"loc_FF8B1A6C:\n"
      "LDR     R0, [R6, #0x20] \n"
      "MOV     R2, #0 \n"
      "ADD     R1, SP, #0x28 \n"
      "BL      sub_003F7218 \n"
      "LDR     R0, [SP, #0xC] \n"
      "CMP     R0, #1 \n"
      "BNE     loc_FF8B1AB8 \n"
      "LDR     R0, [SP, #0x28] \n"
      "LDR     R0, [R0] \n"
      "CMP     R0, #0x14 \n"
      "CMPNE   R0, #0x15 \n"
      "CMPNE   R0, #0x16 \n"
      "CMPNE   R0, #0x17 \n"
      "BEQ     loc_FF8B1C18 \n"
      "CMP     R0, #0x2A \n"
      "BEQ     loc_FF8B1BA0 \n"
      "ADD     R1, SP, #0xC \n"
      "MOV     R0, #0 \n"
      "BL      sub_FF8B19FC \n"
"loc_FF8B1AB8:\n"
      "LDR     R0, [SP, #0x28] \n"
      "LDR     R1, [R0] \n"
      "CMP     R1, #0x30 \n"
      "BNE     loc_FF8B1AE4 \n"
      "BL      sub_FF8B2E2C \n"
      "LDR     R0, [R6, #0x1C] \n"
      "MOV     R1, #1 \n"
      "BL      sub_003FAC6C \n"
      "BL      _ExitTask \n"
      "ADD     SP, SP, #0x2C \n"
      "LDMFD   SP!, {R4-R9,PC} \n"
"loc_FF8B1AE4:\n"
      "CMP     R1, #0x2F \n"
      "BNE     loc_FF8B1B00 \n"
      "LDR     R2, [R0, #0x8C]! \n"
      "LDR     R1, [R0, #4] \n"
      "MOV     R0, R1 \n"
      "BLX     R2 \n"
      "B       loc_FF8B20D4 \n"
"loc_FF8B1B00:\n"
      "CMP     R1, #0x28 \n"
      "BNE     loc_FF8B1B50 \n"
      "LDR     R0, [R6, #0x1C] \n"
      "MOV     R1, #0x80 \n"
      "BL      sub_003FACA0 \n"
      "LDR     R0, =0xFF8AD360 \n"
      "MOV     R1, #0x80 \n"
      "BL      sub_FF959A4C \n"
      "LDR     R0, [R6, #0x1C] \n"
      "MOV     R2, R7 \n"
      "MOV     R1, #0x80 \n"
      "BL      sub_003FABAC \n"
      "TST     R0, #1 \n"
      "LDRNE   R1, =0x157A \n"
      "BNE     loc_FF8B1C0C \n"
"loc_FF8B1B3C:\n"
      "LDR     R1, [SP, #0x28] \n"
      "LDR     R0, [R1, #0x90] \n"
      "LDR     R1, [R1, #0x8C] \n"
      "BLX     R1 \n"
      "B       loc_FF8B20D4 \n"
"loc_FF8B1B50:\n"
      "CMP     R1, #0x29 \n"
      "BNE     loc_FF8B1B98 \n"
      "ADD     R1, SP, #0xC \n"
      "BL      sub_FF8B19FC \n"
      "LDR     R0, [R6, #0x1C] \n"
      "MOV     R1, #0x100 \n"
      "BL      sub_003FACA0 \n"
      "LDR     R0, =0xFF8AD370 \n"
      "MOV     R1, #0x100 \n"
      "BL      sub_FF959BEC \n"
      "LDR     R0, [R6, #0x1C] \n"
      "MOV     R2, R7 \n"
      "MOV     R1, #0x100 \n"
      "BL      sub_003FABAC \n"
      "TST     R0, #1 \n"
      "BEQ     loc_FF8B1B3C \n"
      "LDR     R1, =0x1584 \n"
      "B       loc_FF8B1C0C \n"
"loc_FF8B1B98:\n"
      "CMP     R1, #0x2A \n"
      "BNE     loc_FF8B1BB0 \n"
"loc_FF8B1BA0:\n"
      "LDR     R0, [SP, #0x28] \n"
      "ADD     R1, SP, #0xC \n"
      "BL      sub_FF8B19FC \n"
      "B       loc_FF8B1B3C \n"
"loc_FF8B1BB0:\n"
      "CMP     R1, #0x2D \n"
      "BNE     loc_FF8B1BC8 \n"
      "BL      sub_FF89E640 \n"
      "BL      sub_FF89F328 \n"
      "BL      sub_FF89EE90 \n"
      "B       loc_FF8B1B3C \n"
"loc_FF8B1BC8:\n"
      "CMP     R1, #0x2E \n"
      "BNE     loc_FF8B1C18 \n"
      "LDR     R0, [R6, #0x1C] \n"
      "MOV     R1, #4 \n"
      "BL      sub_003FACA0 \n"
      "LDR     R1, =0xFF8AD390 \n"
      "LDR     R0, =0xFFFFF400 \n"
      "MOV     R2, #4 \n"
      "BL      sub_FF89E090 \n"
      "BL      sub_FF89E320 \n"
      "LDR     R0, [R6, #0x1C] \n"
      "MOV     R2, R7 \n"
      "MOV     R1, #4 \n"
      "BL      sub_003FAAC8 \n"
      "TST     R0, #1 \n"
      "BEQ     loc_FF8B1B3C \n"
      "LDR     R1, =0x15AC \n"
"loc_FF8B1C0C:\n"
      "LDR     R0, =0xFF8ADA84 \n"
      "BL      _DebugAssert \n"
      "B       loc_FF8B1B3C \n"
"loc_FF8B1C18:\n"
      "LDR     R0, [SP, #0x28] \n"
      "MOV     R8, #1 \n"
      "LDR     R1, [R0] \n"
      "CMP     R1, #0x12 \n"
      "CMPNE   R1, #0x13 \n"
      "BNE     loc_FF8B1C80 \n"
      "LDR     R1, [R0, #0x7C] \n"
      "ADD     R1, R1, R1, LSL #1 \n"
      "ADD     R1, R0, R1, LSL #2 \n"
      "SUB     R1, R1, #8 \n"
      "LDMIA   R1, {R2,R3,R9} \n"
      "STMIA   R5, {R2,R3,R9} \n"
      "BL      sub_FF8AFF9C \n"
      "LDR     R0, [SP, #0x28] \n"
      "LDR     R1, [R0, #0x7C] \n"
      "LDR     R3, [R0, #0x8C] \n"
      "LDR     R2, [R0, #0x90] \n"
      "ADD     R0, R0, #4 \n"
      "BLX     R3 \n"
      "LDR     R0, [SP, #0x28] \n"
      "BL      sub_FF8B3230 \n"
      "LDR     R0, [SP, #0x28] \n"
      "LDR     R1, [R0, #0x7C] \n"
      "LDR     R2, [R0, #0x98] \n"
      "LDR     R3, [R0, #0x94] \n"
      "B       loc_FF8B1F98 \n"
"loc_FF8B1C80:\n"
      "CMP     R1, #0x14 \n"
      "CMPNE   R1, #0x15 \n"
      "CMPNE   R1, #0x16 \n"
      "CMPNE   R1, #0x17 \n"
      "BNE     loc_FF8B1D38 \n"
      "ADD     R3, SP, #0xC \n"
      "MOV     R2, SP \n"
      "ADD     R1, SP, #0x1C \n"
      "BL      sub_FF8B01FC \n"
      "CMP     R0, #1 \n"
      "MOV     R9, R0 \n"
      "CMPNE   R9, #5 \n"
      "BNE     loc_FF8B1CD4 \n"
      "LDR     R0, [SP, #0x28] \n"
      "MOV     R2, R9 \n"
      "LDR     R1, [R0, #0x7C]! \n"
      "LDR     R12, [R0, #0x10]! \n"
      "LDR     R3, [R0, #4] \n"
      "MOV     R0, SP \n"
      "BLX     R12 \n"
      "B       loc_FF8B1D0C \n"
"loc_FF8B1CD4:\n"
      "LDR     R0, [SP, #0x28] \n"
      "CMP     R9, #2 \n"
      "LDR     R3, [R0, #0x90] \n"
      "CMPNE   R9, #6 \n"
      "BNE     loc_FF8B1D20 \n"
      "LDR     R12, [R0, #0x8C] \n"
      "MOV     R2, R9 \n"
      "MOV     R1, #1 \n"
      "MOV     R0, SP \n"
      "BLX     R12 \n"
      "LDR     R0, [SP, #0x28] \n"
      "MOV     R2, SP \n"
      "ADD     R1, SP, #0x1C \n"
      "BL      sub_FF8B16EC \n"
"loc_FF8B1D0C:\n"
      "LDR     R0, [SP, #0x28] \n"
      "LDR     R2, [SP, #0xC] \n"
      "MOV     R1, R9 \n"
      "BL      sub_FF8B193C \n"
      "B       loc_FF8B1FA0 \n"
"loc_FF8B1D20:\n"
      "LDR     R1, [R0, #0x7C] \n"
      "LDR     R12, [R0, #0x8C] \n"
      "MOV     R2, R9 \n"
      "ADD     R0, R0, #4 \n"
      "BLX     R12 \n"
      "B       loc_FF8B1FA0 \n"
"loc_FF8B1D38:\n"
      "CMP     R1, #0x24 \n"
      "CMPNE   R1, #0x25 \n"
      "BNE     loc_FF8B1D84 \n"
      "LDR     R1, [R0, #0x7C] \n"
      "ADD     R1, R1, R1, LSL #1 \n"
      "ADD     R1, R0, R1, LSL #2 \n"
      "SUB     R1, R1, #8 \n"
      "LDMIA   R1, {R2,R3,R9} \n"
      "STMIA   R5, {R2,R3,R9} \n"
      "BL      sub_FF8AEF88 \n"
      "LDR     R0, [SP, #0x28] \n"
      "LDR     R1, [R0, #0x7C] \n"
      "LDR     R3, [R0, #0x8C] \n"
      "LDR     R2, [R0, #0x90] \n"
      "ADD     R0, R0, #4 \n"
      "BLX     R3 \n"
      "LDR     R0, [SP, #0x28] \n"
      "BL      sub_FF8AF3C8 \n"
      "B       loc_FF8B1FA0 \n"
"loc_FF8B1D84:\n"
      "ADD     R1, R0, #4 \n"
      "LDMIA   R1, {R2,R3,R9} \n"
      "STMIA   R5, {R2,R3,R9} \n"
      "LDR     R1, [R0] \n"
      "CMP     R1, #0x28 \n"
      "ADDCC   PC, PC, R1, LSL #2 \n"
      "B       loc_FF8B1F88 \n"
      "B       loc_FF8B1E40 \n"
      "B       loc_FF8B1E40 \n"
      "B       loc_FF8B1E48 \n"
      "B       loc_FF8B1E50 \n"
      "B       loc_FF8B1E50 \n"
      "B       loc_FF8B1E50 \n"
      "B       loc_FF8B1E40 \n"
      "B       loc_FF8B1E48 \n"
      "B       loc_FF8B1E50 \n"
      "B       loc_FF8B1E50 \n"
      "B       loc_FF8B1E68 \n"
      "B       loc_FF8B1E68 \n"
      "B       loc_FF8B1F74 \n"
      "B       loc_FF8B1F7C \n"
      "B       loc_FF8B1F7C \n"
      "B       loc_FF8B1F7C \n"
      "B       loc_FF8B1F7C \n"
      "B       loc_FF8B1F84 \n"
      "B       loc_FF8B1F88 \n"
      "B       loc_FF8B1F88 \n"
      "B       loc_FF8B1F88 \n"
      "B       loc_FF8B1F88 \n"
      "B       loc_FF8B1F88 \n"
      "B       loc_FF8B1F88 \n"
      "B       loc_FF8B1E58 \n"
      "B       loc_FF8B1E60 \n"
      "B       loc_FF8B1E60 \n"
      "B       loc_FF8B1E60 \n"
      "B       loc_FF8B1E74 \n"
      "B       loc_FF8B1E74 \n"
      "B       loc_FF8B1E7C \n"
      "B       loc_FF8B1EB4 \n"
      "B       loc_FF8B1EEC \n"
      "B       loc_FF8B1F24 \n"
      "B       loc_FF8B1F5C \n"
      "B       loc_FF8B1F5C \n"
      "B       loc_FF8B1F88 \n"
      "B       loc_FF8B1F88 \n"
      "B       loc_FF8B1F64 \n"
      "B       loc_FF8B1F6C \n"
"loc_FF8B1E40:\n"
      "BL      sub_FF8AD908 \n"
      "B       loc_FF8B1F88 \n"
"loc_FF8B1E48:\n"
      "BL      sub_FF8ADBAC \n"
      "B       loc_FF8B1F88 \n"
"loc_FF8B1E50:\n"
      "BL      sub_FF8ADDD4 \n"
      "B       loc_FF8B1F88 \n"
"loc_FF8B1E58:\n"
      "BL      sub_FF8AE0F8 \n"
      "B       loc_FF8B1F88 \n"
"loc_FF8B1E60:\n"
      "BL      sub_FF8AE310 \n"
      "B       loc_FF8B1F88 \n"
"loc_FF8B1E68:\n"
//      "BL      sub_FF8AE6BC \n"  //original
      "BL      sub_FF8AE6BC_my \n" //patched
      "MOV     R8, #0 \n"
      "B       loc_FF8B1F88 \n"
"loc_FF8B1E74:\n"
      "BL      sub_FF8AE7FC \n"
      "B       loc_FF8B1F88 \n"
"loc_FF8B1E7C:\n"
      "LDRH    R1, [R0, #4] \n"
      "STRH    R1, [SP, #0x1C] \n"
      "LDRH    R1, [R4, #2] \n"
      "STRH    R1, [SP, #0x1E] \n"
      "LDRH    R1, [R4, #4] \n"
      "STRH    R1, [SP, #0x20] \n"
      "LDRH    R1, [R4, #6] \n"
      "STRH    R1, [SP, #0x22] \n"
      "LDRH    R1, [R0, #0xC] \n"
      "STRH    R1, [SP, #0x24] \n"
      "LDRH    R1, [R4, #0xA] \n"
      "STRH    R1, [SP, #0x26] \n"
      "BL      sub_FF8B2EC0 \n"
      "B       loc_FF8B1F88 \n"
"loc_FF8B1EB4:\n"
      "LDRH    R1, [R0, #4] \n"
      "STRH    R1, [SP, #0x1C] \n"
      "LDRH    R1, [R4, #2] \n"
      "STRH    R1, [SP, #0x1E] \n"
      "LDRH    R1, [R4, #4] \n"
      "STRH    R1, [SP, #0x20] \n"
      "LDRH    R1, [R4, #6] \n"
      "STRH    R1, [SP, #0x22] \n"
      "LDRH    R1, [R4, #8] \n"
      "STRH    R1, [SP, #0x24] \n"
      "LDRH    R1, [R4, #0xA] \n"
      "STRH    R1, [SP, #0x26] \n"
      "BL      sub_FF8B3030 \n"
      "B       loc_FF8B1F88 \n"
"loc_FF8B1EEC:\n"
      "LDRH    R1, [R4] \n"
      "STRH    R1, [SP, #0x1C] \n"
      "LDRH    R1, [R0, #6] \n"
      "STRH    R1, [SP, #0x1E] \n"
      "LDRH    R1, [R4, #4] \n"
      "STRH    R1, [SP, #0x20] \n"
      "LDRH    R1, [R4, #6] \n"
      "STRH    R1, [SP, #0x22] \n"
      "LDRH    R1, [R4, #8] \n"
      "STRH    R1, [SP, #0x24] \n"
      "LDRH    R1, [R4, #0xA] \n"
      "STRH    R1, [SP, #0x26] \n"
      "BL      sub_FF8B30E4 \n"
      "B       loc_FF8B1F88 \n"
"loc_FF8B1F24:\n"
      "LDRH    R1, [R4] \n"
      "STRH    R1, [SP, #0x1C] \n"
      "LDRH    R1, [R4, #2] \n"
      "STRH    R1, [SP, #0x1E] \n"
      "LDRH    R1, [R4, #4] \n"
      "STRH    R1, [SP, #0x20] \n"
      "LDRH    R1, [R4, #6] \n"
      "STRH    R1, [SP, #0x22] \n"
      "LDRH    R1, [R0, #0xC] \n"
      "STRH    R1, [SP, #0x24] \n"
      "LDRH    R1, [R4, #0xA] \n"
      "STRH    R1, [SP, #0x26] \n"
      "BL      sub_FF8B318C \n"
      "B       loc_FF8B1F88 \n"
"loc_FF8B1F5C:\n"
      "BL      sub_FF8AED3C \n"
      "B       loc_FF8B1F88 \n"
"loc_FF8B1F64:\n"
      "BL      sub_FF8AF4CC \n"
      "B       loc_FF8B1F88 \n"
"loc_FF8B1F6C:\n"
      "BL      sub_FF8AF7B0 \n"
      "B       loc_FF8B1F88 \n"
"loc_FF8B1F74:\n"
      "BL      sub_FF8AFA70 \n"
      "B       loc_FF8B1F88 \n"
"loc_FF8B1F7C:\n"
      "BL      sub_FF8AFC2C \n"
      "B       loc_FF8B1F88 \n"
"loc_FF8B1F84:\n"
      "BL      sub_FF8AFD94 \n"
"loc_FF8B1F88:\n"
      "LDR     R0, [SP, #0x28] \n"
      "LDR     R1, [R0, #0x7C] \n"
      "LDR     R2, [R0, #0x90] \n"
      "LDR     R3, [R0, #0x8C] \n"
"loc_FF8B1F98:\n"
      "ADD     R0, R0, #4 \n"
      "BLX     R3 \n"
"loc_FF8B1FA0:\n"
      "LDR     R0, [SP, #0x28] \n"
      "LDR     R0, [R0] \n"
      "CMP     R0, #0x10 \n"
      "BEQ     loc_FF8B1FD8 \n"
      "BGT     loc_FF8B1FC8 \n"
      "CMP     R0, #1 \n"
      "CMPNE   R0, #4 \n"
      "CMPNE   R0, #0xE \n"
      "BNE     loc_FF8B200C \n"
      "B       loc_FF8B1FD8 \n"
"loc_FF8B1FC8:\n"
      "CMP     R0, #0x13 \n"
      "CMPNE   R0, #0x17 \n"
      "CMPNE   R0, #0x1A \n"
      "BNE     loc_FF8B200C \n"
"loc_FF8B1FD8:\n"
      "LDRSH   R0, [R4] \n"
      "CMN     R0, #0xC00 \n"
      "LDRNESH R1, [R4, #8] \n"
      "CMNNE   R1, #0xC00 \n"
      "STRNEH  R0, [SP, #0x1C] \n"
      "STRNEH  R1, [SP, #0x24] \n"
      "BNE     loc_FF8B200C \n"
      "ADD     R0, SP, #0x10 \n"
      "BL      sub_FF8B343C \n"
      "LDRH    R0, [SP, #0x10] \n"
      "STRH    R0, [SP, #0x1C] \n"
      "LDRH    R0, [SP, #0x18] \n"
      "STRH    R0, [SP, #0x24] \n"
"loc_FF8B200C:\n"
      "LDR     R0, [SP, #0x28] \n"
      "CMP     R8, #1 \n"
      "BNE     loc_FF8B205C \n"
      "LDR     R1, [R0, #0x7C] \n"
      "MOV     R2, #0xC \n"
      "ADD     R1, R1, R1, LSL #1 \n"
      "ADD     R0, R0, R1, LSL #2 \n"
      "SUB     R8, R0, #8 \n"
      "LDR     R0, =0x5465C \n"
      "ADD     R1, SP, #0x1C \n"
      "BL      sub_003FC17C \n"
      "LDR     R0, =0x54668 \n"
      "MOV     R2, #0xC \n"
      "ADD     R1, SP, #0x1C \n"
      "BL      sub_003FC17C \n"
      "LDR     R0, =0x54674 \n"
      "MOV     R2, #0xC \n"
      "MOV     R1, R8 \n"
      "BL      sub_003FC17C \n"
      "B       loc_FF8B20D4 \n"
"loc_FF8B205C:\n"
      "LDR     R0, [R0] \n"
      "MOV     R3, #1 \n"
      "CMP     R0, #0xB \n"
      "BNE     loc_FF8B20A0 \n"
      "MOV     R2, #0 \n"
      "STRD    R2, [SP] \n"
      "MOV     R2, R3 \n"
      "MOV     R1, R3 \n"
      "MOV     R0, #0 \n"
      "BL      sub_FF8AD6E8 \n"
      "MOV     R3, #1 \n"
      "MOV     R2, #0 \n"
      "STRD    R2, [SP] \n"
      "MOV     R2, R3 \n"
      "MOV     R1, R3 \n"
      "MOV     R0, #0 \n"
      "B       loc_FF8B20D0 \n"
"loc_FF8B20A0:\n"
      "MOV     R2, #1 \n"
      "STRD    R2, [SP] \n"
      "MOV     R3, R2 \n"
      "MOV     R1, R2 \n"
      "MOV     R0, R2 \n"
      "BL      sub_FF8AD6E8 \n"
      "MOV     R3, #1 \n"
      "MOV     R2, R3 \n"
      "MOV     R1, R3 \n"
      "MOV     R0, R3 \n"
      "STR     R3, [SP] \n"
      "STR     R3, [SP, #4] \n"
"loc_FF8B20D0:\n"
      "BL      sub_FF8AD854 \n"
"loc_FF8B20D4:\n"
      "LDR     R0, [SP, #0x28] \n"
      "BL      sub_FF8B2E2C \n"
      "B       loc_FF8B1A6C \n"
	);
}

//** sub_FF8AE6BC_my  @ 0xFF8AE6BC 

void __attribute__((naked,noinline)) sub_FF8AE6BC_my() {
asm volatile (
      "STMFD   SP!, {R4-R8,LR} \n"
      "LDR     R7, =0x3E3C \n"
      "MOV     R4, R0 \n"
      "LDR     R0, [R7, #0x1C] \n"
      "MOV     R1, #0x3E \n"
      "BL      sub_003FACA0 \n"
      "MOV     R2, #0 \n"
      "LDRSH   R0, [R4, #4] \n"
      "MOV     R1, R2 \n"
      "BL      sub_FF8AD3F0 \n"
      "MOV     R6, R0 \n"
      "LDRSH   R0, [R4, #6] \n"
      "BL      sub_FF8AD540 \n"
      "LDRSH   R0, [R4, #8] \n"
      "BL      sub_FF8AD598 \n"
      "LDRSH   R0, [R4, #0xA] \n"
      "BL      sub_FF8AD5F0 \n"
      "LDRSH   R0, [R4, #0xC] \n"
      "MOV     R1, #0 \n"
      "BL      sub_FF8AD648 \n"
      "MOV     R5, R0 \n"
      "LDR     R0, [R4] \n"
      "LDR     R8, =0x54674 \n"
      "CMP     R0, #0xB \n"
      "MOVEQ   R6, #0 \n"
      "MOVEQ   R5, R6 \n"
      "BEQ     loc_FF8AE750 \n"
      "CMP     R6, #1 \n"
      "BNE     loc_FF8AE750 \n"
      "LDRSH   R0, [R4, #4] \n"
      "LDR     R1, =0xFF8AD350 \n"
      "MOV     R2, #2 \n"
      "BL      sub_FF959AD0 \n"
      "STRH    R0, [R4, #4] \n"
      "MOV     R0, #0 \n"
      "STR     R0, [R7, #0x28] \n"
      "B       loc_FF8AE758 \n"
"loc_FF8AE750:\n"
      "LDRH    R0, [R8] \n"
      "STRH    R0, [R4, #4] \n"
"loc_FF8AE758:\n"
      "CMP     R5, #1 \n"
      "LDRNEH  R0, [R8, #8] \n"
      "BNE     loc_FF8AE774 \n"
      "LDRSH   R0, [R4, #0xC] \n"
      "LDR     R1, =0xFF8AD3D4 \n"
      "MOV     R2, #0x20 \n"
      "BL      sub_FF8B2E7C \n"
"loc_FF8AE774:\n"
      "STRH    R0, [R4, #0xC] \n"
      "LDRSH   R0, [R4, #6] \n"
//      "BL      sub_FF89E38C \n"  //original
      "BL      sub_FF89E38C_my \n" //patched
      "B       sub_FF8AE780 \n" // continue in firmware
	);
}

//** sub_FF89E38C_my  @ 0xFF89E38C 

void __attribute__((naked,noinline)) sub_FF89E38C_my() {
asm volatile (
      "STMFD   SP!, {R4-R6,LR} \n"
      "LDR     R5, =0x3AC8 \n"
      "MOV     R4, R0 \n"
      "LDR     R0, [R5, #4] \n"
      "CMP     R0, #1 \n"
      "LDRNE   R1, =0x14D \n"
      "LDRNE   R0, =0xFF89E1C4 \n"
      "BLNE    _DebugAssert \n"
      "CMN     R4, #0xC00 \n"
      "LDREQSH R4, [R5, #2] \n"
      "CMN     R4, #0xC00 \n"
      "LDREQ   R1, =0x153 \n"
      "LDREQ   R0, =0xFF89E1C4 \n"
      "STRH    R4, [R5, #2] \n"
      "BLEQ    _DebugAssert \n"
      "MOV     R0, R4 \n"
//      "BL      _apex2us \n" //original apex2us function
      "BL      apex2us \n"    //apex2us wrapper
      "MOV     R4, R0 \n"
      "BL      sub_FF8EC460 \n"
      "MOV     R0, R4 \n"
      "BL      sub_FF8F4C68 \n"
      "TST     R0, #1 \n"
      "LDMEQFD SP!, {R4-R6,PC} \n"
      "LDMFD   SP!, {R4-R6,LR} \n"
      "MOV     R1, #0x158 \n"
      "LDR     R0, =0xFF89E1C4 \n"
      "B       _DebugAssert \n"
	);
}
