// !!! THIS FILE IS GENERATED. DO NOT EDIT. !!!
#include "stubs_asm.h"

// Camera info:
//   Firmware Ver GM1.00F   // Found @ 0xffc0ad28, "GM1.00F" @ 0xffc0ad35
//   Firmware build timestamp: Aug  3 2005 14:17:55
//   Canon PowerShot A410

// Values for makefile.inc
//   PLATFORMID = 12537 (0x30f9) // Found @ 0xfffe0130
//   MAXRAMADDR = 0x00ffffff
//   MEMISOSTART = 0x0009f470

// Stubs below should be checked. Stub not matched 100%, or difference found to current 'stubs_entry_2.S'
//    Name                                     Address      Rule  %  Comp to stubs_entry_2.S
//NHSTUB(EnterToCompensationEVF               ,0xffd25f98) //  1 64%    *** != 0xffd24234
//NHSTUB(ExitFromCompensationEVF              ,0xffd26098) //  1 73%    *** != 0xffd24244
NHSTUB(GetFocusLensSubjectDistance            ,0xffe217a0) //  1 90%
NHSTUB(GetFocusLensSubjectDistanceFromLens    ,0xffe21d40) //  3 52%
NHSTUB(GetSystemTime                          ,0xffc04b4c) //  1 96%
NHSTUB(PutInNdFilter                          ,0xffe2c0dc) //  1 92%
// ALT: NHSTUB(PutInNdFilter, 0xffe2dc68) // 1 25/2
// ALT: NHSTUB(PutInNdFilter, 0xffe2dcb0) // 1 25/2
// ALT: NHSTUB(PutInNdFilter, 0xffe2dc68) // 2 25/2
// ALT: NHSTUB(PutInNdFilter, 0xffe2dcb0) // 2 25/2
NHSTUB(PutOutNdFilter                         ,0xffe2c124) //  1 94%
//NHSTUB(Remove                               ,0xffca914c) //  3 52%
NHSTUB(UnsetZoomForMovie                      ,0xffd6fbf4) //  1 89%
NHSTUB(UpdateMBROnFlash                       ,0xffc59b2c) //  1 96%
//NHSTUB(WriteSDCard                          ,0xffc6964c) //  1 93%    *** != 0xffc69824
// ALT: NHSTUB(WriteSDCard, 0xffc69824) // 1 29/2
NHSTUB(add_ptp_handler                        ,0xffde1470) //  1 96%
NHSTUB(exmem_alloc                            ,0xffc028b8) //  1 92%
// ERROR: free is not found.                               //--- ---    *** != 0xffe75b50
//NHSTUB(kbd_pwr_off                          ,0xffc18eec) //  1 83%    *** != 0x00000000
// ALT: NHSTUB(kbd_pwr_off, 0xffc18f08) // 1 5/1
// ALT: NHSTUB(kbd_pwr_off, 0xffc18b94) // 3 5/1
// ALT: NHSTUB(kbd_pwr_off, 0xffc18bb0) // 3 5/1
// ALT: NHSTUB(kbd_pwr_off, 0xffc18c9c) // 3 5/1
// ALT: NHSTUB(kbd_pwr_off, 0xffc18cb8) // 3 5/1
// ALT: NHSTUB(kbd_pwr_off, 0xffc18d88) // 3 5/1
// ALT: NHSTUB(kbd_pwr_off, 0xffc18da4) // 3 5/1
// ERROR: kbd_pwr_on is not found.                         //--- ---    *** != 0x00000000
NHSTUB(malloc                                 ,0xffe75b44) //  1 53%
NHSTUB(taskIdListGet                          ,0xffe83788) //  1 82%
NHSTUB(localtime                              ,0xffe6d298) //  1 93%
NHSTUB(Mount_FileSystem                       ,0xffc598cc) //  1 90%
NHSTUB(MakeAFScan                             ,0xffd285f8) //  1 89%

// Check of modemap from 'platform/CAMERA/shooting.c':
// Firmware modemap table found @ffd39b10 -> ffd39b10
// Strange mode 0x0001000d in firmware, found in modemap as 13 (MODE_VIDEO_STD)
// Strange mode 0x0001000e in firmware but not in current modemap
// Strange mode 0x0001000f in firmware but not in current modemap

// Values below can be overridden in 'stubs_min.S':
//DEF(levent_table                            ,0xffd32d98) // Found @0xffd32d98,          stubs_min = 0xffd32d98 (0xFFD32D98)
//DEF(FlashParamsTable                        ,0xffd3bc1c) // Found @0xffd3bc1c,          stubs_min = 0xffd3bc1c (0xFFD3BC1C)

// Values below go in 'lib.c':
//int get_flash_params_count(void) { return 0x5e; }                          // Found @0xffd3e370

// Misc stuff
// LED table init @ 0xffc1d7e8
// LED #1: 0xc022008c, offset 0x4
// LED #2: 0xc0220088, offset 0x44
// LED #3: 0xc0220090, offset 0x84
// LED #4: 0xc0220084, offset 0x204
// LED #5: 0xc0220080, offset 0x244

// canon_data_src: 0xffe8a3c0, canon_data_len: 0xf710

// For capt_seq.c
DEF(_nrflag,0x68d0) // Found @ ffd2a404 (0x68d0)
//static long *nrflag = (long*)(0x68d0);       // Found @ ffd2a404

// Stubs below matched 100%.
//    Name                                     Address                Comp to stubs_entry_2.S
NHSTUB(AllocateUncacheableMemory              ,0xffc047c4) //  1
NHSTUB(Close                                  ,0xffc5a618) //120
NHSTUB(CreateTask                             ,0xffc12364) //120
NHSTUB(DebugAssert                            ,0xffc03b58) //1100
NHSTUB(DeleteFile_Fut                         ,0xffc534fc) //  1
NHSTUB(DoAELock                               ,0xffd2426c) //120
NHSTUB(DoAFLock                               ,0xffd24124) //120
NHSTUB(ExecuteEventProcedure                  ,0xffc06a64) //  1
NHSTUB(ExitTask                               ,0xffc12724) //120
NHSTUB(Fclose_Fut                             ,0xffc5363c) //120
NHSTUB(Feof_Fut                               ,0xffc53850) //  1
NHSTUB(Fflush_Fut                             ,0xffc53888) //  1
NHSTUB(Fgets_Fut                              ,0xffc537c0) //  1
NHSTUB(Fopen_Fut                              ,0xffc53600) //120
NHSTUB(Fread_Fut                              ,0xffc53720) //120
NHSTUB(FreeUncacheableMemory                  ,0xffc047f8) //  1
NHSTUB(Fseek_Fut                              ,0xffc53808) //120
NHSTUB(Fwrite_Fut                             ,0xffc53770) //120
NHSTUB(GetBatteryTemperature                  ,0xffc1cdf0) //102
NHSTUB(GetCCDTemperature                      ,0xffc1cddc) //102
NHSTUB(GetCurrentAvValue                      ,0xffe2bf58) //120
NHSTUB(GetDrive_ClusterSize                   ,0xffc59df4) //119
NHSTUB(GetDrive_FreeClusters                  ,0xffc59e6c) //1103
NHSTUB(GetDrive_TotalClusters                 ,0xffc59e30) //119
NHSTUB(GetOpticalTemperature                  ,0xffc1cdc8) //120
NHSTUB(GetParameterData                       ,0xffd3e304) //  1
NHSTUB(GetPropertyCase                        ,0xffc155d8) //  1
NHSTUB(GetZoomLensCurrentPoint                ,0xffe12554) //120
NHSTUB(GetZoomLensCurrentPosition             ,0xffe12568) //102
NHSTUB(GiveSemaphore                          ,0xffc11d68) //120
NHSTUB(IsStrobeChargeCompleted                ,0xffce3b80) //  1
NHSTUB(LEDDrive                               ,0xffc1d348) //120
NHSTUB(LocalTime                              ,0xffc04228) //115
NHSTUB(LockMainPower                          ,0xffd39888) //120
NHSTUB(MakeDirectory_Fut                      ,0xffc53588) //  1
//NHSTUB(MoveFocusLensToDistance              ,0xffe2e2f4) //102            Overridden
NHSTUB(MoveZoomLensWithPoint                  ,0xffe12434) //120
NHSTUB(Open                                   ,0xffc5a5f0) //120
NHSTUB(PT_PlaySound                           ,0xffd31254) //  1
NHSTUB(PostLogicalEventForNotPowerType        ,0xffd3597c) //120
NHSTUB(PostLogicalEventToUI                   ,0xffd35a08) //120
NHSTUB(Read                                   ,0xffc5a6ac) //120
NHSTUB(RefreshPhysicalScreen                  ,0xffd4e9f8) //120
NHSTUB(RenameFile_Fut                         ,0xffc5347c) //  1
NHSTUB(Restart                                ,0xffc13bb0) //  1
NHSTUB(SetAE_ShutterSpeed                     ,0xffe313a8) //102
NHSTUB(SetAutoShutdownTime                    ,0xffd39780) //120
NHSTUB(SetCurrentCaptureModeType              ,0xffd64fa4) //120
NHSTUB(SetFileAttributes                      ,0xffc5a804) //  1
NHSTUB(SetLogicalEventActive                  ,0xffd37938) //1104
NHSTUB(SetParameterData                       ,0xffd3e224) //  1
NHSTUB(SetPropertyCase                        ,0xffc154bc) //  1
//NHSTUB(SetScriptMode                        ,0xffd3799c) //120            == 0xffd3799c
NHSTUB(SleepTask                              ,0xffc121c4) //120
NHSTUB(TakeSemaphore                          ,0xffc11b80) //1101
NHSTUB(TurnOffBackLight                       ,0xffd7a150) //  1
NHSTUB(TurnOnBackLight                        ,0xffd7a124) //  1
NHSTUB(TurnOnDisplay                          ,0xffd08650) //120
NHSTUB(TurnOffDisplay                         ,0xffd08660) //120
NHSTUB(UnlockAE                               ,0xffd2428c) //120
NHSTUB(UnlockAF                               ,0xffd24164) //120
NHSTUB(UnlockMainPower                        ,0xffd3993c) //120
NHSTUB(VbattGet                               ,0xffc1be54) //120
NHSTUB(Write                                  ,0xffc5a6b8) //120
NHSTUB(_log                                   ,0xffe5f084) //121
NHSTUB(_log10                                 ,0xffe5f72c) //121
NHSTUB(_pow                                   ,0xffe5fc1c) //121
NHSTUB(_sqrt                                  ,0xffe63f68) //  1
NHSTUB(apex2us                                ,0xffc94108) //  1
NHSTUB(close                                  ,0xffe72b04) //109
NHSTUB(kbd_p1_f                               ,0xffc17610) //  1
NHSTUB(kbd_p1_f_cont                          ,0xffc1761c) //109
NHSTUB(kbd_p2_f                               ,0xffc179ec) //  1
NHSTUB(kbd_read_keys_r2                       ,0xffc18304) //  1
NHSTUB(lseek                                  ,0xffe72c48) //  1
NHSTUB(memcmp                                 ,0xffe6c678) //120
NHSTUB(memcpy                                 ,0xffe6c6b4) //120
NHSTUB(memset                                 ,0xffe6c72c) //120
NHSTUB(mkdir                                  ,0xffc5a834) //  1
NHSTUB(open                                   ,0xffe73148) //109
NHSTUB(closedir                               ,0xffe6eaa4) //  1
NHSTUB(qsort                                  ,0xffe6bed8) //  1
NHSTUB(rand                                   ,0xffe6befc) //  1
NHSTUB(realloc                                ,0xffe57214) //115
NHSTUB(srand                                  ,0xffe6bf20) //  1
NHSTUB(stat                                   ,0xffe6eb6c) //  1
NHSTUB(strcat                                 ,0xffe6c74c) //  1
NHSTUB(strchr                                 ,0xffe6c778) //  1
NHSTUB(strcmp                                 ,0xffe6c79c) //120
NHSTUB(strcpy                                 ,0xffe6c930) //120
NHSTUB(strftime                               ,0xffe6dfb8) //  1
NHSTUB(strlen                                 ,0xffe6ca94) //120
NHSTUB(strncmp                                ,0xffe6caf8) //  1
NHSTUB(strncpy                                ,0xffe6cb3c) //  1
NHSTUB(strrchr                                ,0xffe6cbc0) //  1
NHSTUB(strtol                                 ,0xffe6c314) //  1
NHSTUB(isdigit                                ,0xffe68a48) //  1
NHSTUB(isspace                                ,0xffe68ac0) //  1
NHSTUB(isalpha                                ,0xffe68a18) //  1
NHSTUB(isupper                                ,0xffe68ad8) //  1
NHSTUB(islower                                ,0xffe68a78) //  1
NHSTUB(ispunct                                ,0xffe68aa8) //  1
NHSTUB(isxdigit                               ,0xffe68af0) //  1
NHSTUB(toupper                                ,0xffe68b18) //  1
NHSTUB(tolower                                ,0xffe68b08) //  1
NHSTUB(taskLock                               ,0xffe83e44) //  1
NHSTUB(taskUnlock                             ,0xffe83eec) //  1
NHSTUB(taskName                               ,0xffe83680) //  1
NHSTUB(errnoOfTaskGet                         ,0xffe6f270) //  1
NHSTUB(readdir                                ,0xffe6ea70) //  1
NHSTUB(strtoul                                ,0xffe6c4bc) //  1
NHSTUB(strpbrk                                ,0xffe6cb84) //  1
NHSTUB(utime                                  ,0xffe6ec00) //  1
NHSTUB(mktime                                 ,0xffe6d460) //  1
NHSTUB(opendir                                ,0xffe6ead8) //  1
NHSTUB(memchr                                 ,0xffe6c644) //  1
NHSTUB(memPartInfoGet                         ,0xffe75f64) //  1
NHSTUB(iosDrvInstall                          ,0xffe73fe8) //  1
NHSTUB(iosDevAdd                              ,0xffe73d24) //  1
NHSTUB(iosDevDelete                           ,0xffe73cfc) //  1
NHSTUB(GetCurrentTargetDistance               ,0xffe2e064) //  1
NHSTUB(taskCreateHookAdd                      ,0xffe791c4) //  1
NHSTUB(taskDeleteHookAdd                      ,0xffe79100) //  1
NHSTUB(Unmount_FileSystem                     ,0xffc599d4) //  1
NHSTUB(taskSuspend                            ,0xffe83890) //  1
NHSTUB(taskResume                             ,0xffe83a64) //  1
NHSTUB(time                                   ,0xffe6dfe4) //  1
NHSTUB(vsprintf                               ,0xffe703c4) //115
NHSTUB(EngDrvRead                             ,0xffc6bad4) //102
