#include "conf.h"

#undef LIFTEDMLIMIT_A420 //movie time limit in hours (1, 2, 3), the limit is one hour when this is undefined
#ifdef LIFTEDMLIMIT_A420
int liftedmlimit_a420 = LIFTEDMLIMIT_A420;
#if (LIFTEDMLIMIT_A420 !=  1) && (LIFTEDMLIMIT_A420 != 2) && (LIFTEDMLIMIT_A420 != 3)
#error movie time limit is incorrect
#endif
#endif

//adapted from A530
int *video_quality = &conf.video_quality;
int *video_mode    = &conf.video_mode;

long def_table1[9]={0x2000,0x38D,0x788,0x5800,0x9C5,0x14B8,0x10000,0x1C6A,0x3C45};
long def_table2[9]={0x1CCD,-0x2E1,-0x579,0x4F33,-0x7EB,-0xF0C,0xE666,-0x170A,-0x2BC6};

long table1[9], table2[9];

void change_video_tables(int a, int b){
 int i;
 for (i=0;i<9;i++) {table1[i]=(def_table1[i]*a)/b; table2[i]=(def_table2[i]*a)/b;}
}

long CompressionRateTable[]={0x60, 0x5D, 0x5A, 0x57, 0x54, 0x51, 0x4D, 0x48, 0x42, 0x3B, 0x32, 0x29, 0x22, 0x1D, 0x17, 0x14, 0x10, 0xE, 0xB, 9, 7, 6, 5, 4, 3, 2, 1};


void __attribute__((naked,noinline)) movie_record_task(){
	asm volatile(
"                 STMFD   SP!, {R4,LR}\n"
"                 SUB     SP, SP, #4\n"
"                 MOV     R4, SP\n"
"                 B       loc_FFD1BD84\n"
" loc_FFD1BCE0:\n"
"                 LDR     R3, =0x72060\n"
"                 LDR     R2, [R3]\n"
"                 CMP     R2, #0\n"
"                 BNE     loc_FFD1BD70\n"
"                 SUB     R3, R12, #2\n"
"                 CMP     R3, #9\n"
"                 LDRLS   PC, [PC,R3,LSL#2]\n"
"                 B       loc_FFD1BD70\n"
"                 .long loc_FFD1BD30\n"
"                 .long loc_FFD1BD48\n"
"                 .long loc_FFD1BD50\n"
"                 .long loc_FFD1BD58\n"
"                 .long loc_FFD1BD38\n"
"                 .long loc_FFD1BD60\n"
"                 .long loc_FFD1BD40\n"
"                 .long loc_FFD1BD70\n"
"                 .long loc_FFD1BD68\n"
"                 .long loc_FFD1BD28\n"
" loc_FFD1BD28:\n"
"                 BL      sub_FFD1BE20\n"
"                 B       loc_FFD1BD6C\n"
" loc_FFD1BD30:\n"
"                 BL      unlock_optical_zoom\n"
"                 BL      sub_FFD1BFD4_my\n" //to movie time limit mod
"                 B       loc_FFD1BD6C\n"
" loc_FFD1BD38:\n"
"                 BL      sub_FFD1C3E4_my\n"
"                 B       loc_FFD1BD6C\n"
" loc_FFD1BD40:\n"
"                 BL      sub_FFD1C8C4\n"
"                 B       loc_FFD1BD6C\n"
" loc_FFD1BD48:\n"
"                 BL      sub_FFD1C6E0\n"
"                 B       loc_FFD1BD6C\n"
" loc_FFD1BD50:\n"
"                 BL      sub_FFD1CA30\n"
"                 B       loc_FFD1BD6C\n"
" loc_FFD1BD58:\n"
"                 BL      sub_FFD1CBF4\n"
"                 B       loc_FFD1BD6C\n"
" loc_FFD1BD60:\n"
"                 BL      sub_FFD1C94C\n"
"                 B       loc_FFD1BD6C\n"
" loc_FFD1BD68:\n"
"                 BL      sub_FFD1C730\n"
" loc_FFD1BD6C:\n"
"                 LDR     R1, [SP]\n"
" loc_FFD1BD70:\n"
"                 LDR     R3, =0x71F94\n"
"                 MOV     R2, #0\n"
"                 STR     R2, [R1]\n"
"                 LDR     R0, [R3]\n"
"                 BL      sub_FFC104DC\n"
" loc_FFD1BD84:\n"
"                 LDR     R3, =0x71F90\n"
"                 MOV     R1, R4\n"
"                 LDR     R0, [R3]\n"
"                 MOV     R2, #0\n"
"                 BL      sub_FFC100C4\n"
"                 LDR     R0, [SP]\n"
"                 LDR     R12, [R0]\n"
"                 CMP     R12, #0xC\n"
"                 MOV     R1, R0\n"
"                 BNE     loc_FFD1BCE0\n"
"                 LDR     R3, =0x71F8C\n"
"                 LDR     R0, [R3]\n"
"                 BL      sub_FFC10E58\n"
"                 BL      sub_FFC11620\n"
"                 ADD     SP, SP, #4\n"
"                 LDMFD   SP!, {R4,PC}\n"
	);
}

void __attribute__((naked,noinline)) sub_FFD1C3E4_my(){
	asm volatile(
"                 STMFD   SP!, {R4-R11,LR}\n"
"                 LDR     R5, =0x7207C\n"
"                 SUB     SP, SP, #0x34\n"
"                 LDR     R3, [R5]\n"
"                 CMP     R3, #3\n"
"                 MOV     R4, R0\n"
"                 MOVEQ   R3, #4\n"
"                 STREQ   R3, [R5]\n"
"                 LDR     R3, =0x7212C\n"
"                 MOV     LR, PC\n"
"                 LDR     PC, [R3]\n"
"                 LDR     R2, [R5]\n"
"                 CMP     R2, #4\n"
"                 BNE     loc_FFD1C5FC\n"
"                 ADD     R0, SP, #0x58-0x28\n"
"                 ADD     R1, SP, #0x58-0x2C\n"
"                 ADD     R2, SP, #0x58-0x30\n"
"                 ADD     R3, SP, #0x58-0x34\n"
"                 BL      sub_FFD1DB90_my\n"
"                 CMP     R0, #0\n"
"                 BNE     loc_FFD1C460\n"
"                 LDR     R3, =0x72068\n"
"                 LDR     R2, [R3]\n"
"                 CMP     R2, #1\n"
"                 BNE     loc_FFD1C474\n"
"                 LDR     R2, =0x720C0\n"
"                 LDR     R1, =0x72094\n"
"                 LDR     R12, [R2]\n"
"                 LDR     R3, [R1]\n"
"                 CMP     R12, R3\n"
"                 BCC     loc_FFD1C474\n"
" loc_FFD1C460:\n"
"                 BL      sub_FFD1C658\n"
"                 BL      sub_FFD1C858\n"
"                 MOV     R3, #5\n"
"                 STR     R3, [R5]\n"
"                 B       loc_FFD1C5FC\n"
" loc_FFD1C474:\n"
"                 LDR     R12, =0x720C8\n"
"                 LDR     R11, =0x720D4\n"
"                 LDMIB   R4, {R0-R2}\n"
"                 LDR     R10, [R12]\n"
"                 LDR     R7, [R11]\n"
"                 LDR     R4, [SP,#0x58-0x2C]\n"
"                 LDR     R5, [SP,#0x58-0x30]\n"
"                 LDR     R6, [SP,#0x58-0x34]\n"
"                 LDR     R8, =0x7206C\n"
"                 LDR     R3, [SP,#0x58-0x28]\n"
"                 ADD     R12, SP, #0x58-0x38\n"
"                 ADD     LR, SP, #0x58-0x3C\n"
"                 MOV     R9, #1\n"
"                 STMEA   SP, {R4-R6,R12}\n"
"                 STR     R10, [SP,#0x58-0x48]\n"
"                 STR     R7, [SP,#0x58-0x44]\n"
"                 STR     LR, [SP,#0x58-0x40]\n"
"                 STR     R9, [R8]\n"
"                 BL      sub_FFC80EE4\n" //encode video frame!
"                 LDR     R3, =0x71F84\n"
"                 MOV     R1, #0x3E8\n"
"                 LDR     R0, [R3]\n"
"                 BL      sub_FFC10C70\n"
"                 CMP     R0, #9\n"
"                 BNE     loc_FFD1C4E8\n"
"                 BL      sub_FFD1E3A0\n"
"                 LDR     R3, =0x7207C\n"
"                 LDR     R0, =0xffd1c3cc\n" //jpegtimeout
"                 B       loc_FFD1C500\n"
" loc_FFD1C4E8:\n"
"                 LDR     R6, [SP,#0x58-0x3C]\n"
"                 CMP     R6, #0\n"
"                 BEQ     loc_FFD1C50C\n"
"                 BL      sub_FFD1E3A0\n"
"                 LDR     R3, =0x7207C\n"
"                 LDR     R0, =0xffd1c3d8\n" //jpegiceerror
" loc_FFD1C500:\n"
"                 STR     R9, [R3]\n"
"                 BL      sub_FFD306E8\n"
"                 B       loc_FFD1C5FC\n"
" loc_FFD1C50C:\n"
"                 BL      sub_FFC81050\n"
"                 LDR     R7, =0x720C0\n"
"                 LDR     R0, [SP,#0x58-0x28]\n"
"                 LDR     R1, [SP,#0x58-0x38]\n"
"                 BL      sub_FFD1E0C4\n"
"                 LDR     R3, [R7]\n"
"                 LDR     R2, =0x720A8\n"
"                 ADD     R3, R3, #1\n"
"                 LDR     R1, [R2]\n"
"                 MOV     R0, R3\n"
"                 STR     R3, [R7]\n"
"                 BL      sub_FFE96D9C\n"
"                 CMP     R0, #0\n"
"                 BNE     loc_FFD1C580\n"
"                 LDR     R4, =0x72140\n"
"                 LDR     R3, [R4]\n"
"                 LDR     R2, =0x7208C\n"
"                 LDR     R5, =0x72138\n"
"                 AND     R3, R3, #1\n"
"                 LDR     R0, [R5,R3,LSL#2]\n"
"                 LDR     R1, [R2]\n"
"                 BL      sub_FFD1DAD8\n"
"                 LDR     R0, [R4]\n"
"                 AND     R0, R0, #1\n"
"                 ADD     R0, R5, R0,LSL#2\n"
"                 BL      sub_FFD1DA84\n"
"                 LDR     R3, [R4]\n"
"                 ADD     R3, R3, #1\n"
"                 STR     R3, [R4]\n"
" loc_FFD1C580:\n"
"                 LDR     R0, [SP,#0x58-0x38]\n"
"                 MOV     R1, R11\n"
"                 MOV     R2, R6\n"
"                 BL      sub_FFD1CF50_my\n"
"                 LDR     R3, =0x720E0\n"
"                 LDR     R1, [R7]\n"
"                 LDR     R2, [R3]\n"
"                 LDR     R12, =0x720DC\n"
"                 MUL     R0, R2, R1\n"
"                 LDR     R1, [R12]\n"
"                 BL      sub_FFE9670C\n"
"                 LDR     R7, =0x720D8\n"
"                 LDR     R3, [R7]\n"
"                 MOV     R4, R0\n"
"                 CMP     R3, R4\n"
"                 BNE     loc_FFD1C5D4\n"
"                 LDR     R5, =0x72070\n"
"                 LDR     R3, [R5]\n"
"                 CMP     R3, #1\n"
"                 BNE     loc_FFD1C5F0\n"
"                 B       loc_FFD1C5D8\n"
" loc_FFD1C5D4:\n"
"                 LDR     R5, =0x72070\n"
" loc_FFD1C5D8:\n"
"                 LDR     R3, =0x72110\n"
"                 MOV     R0, R4\n"
"                 MOV     LR, PC\n"
"                 LDR     PC, [R3]\n"
"                 STR     R6, [R5]\n"
"                 STR     R4, [R7]\n"
" loc_FFD1C5F0:\n"
"                 LDR     R2, =0x7206C\n"
"                 MOV     R3, #0\n"
"                 STR     R3, [R2]\n"
" loc_FFD1C5FC:\n"
"                 ADD     SP, SP, #0x34\n"
"                 LDMFD   SP!, {R4-R11,PC}\n"
	);
}

void __attribute__((naked,noinline)) sub_FFD1DB90_my(){
	asm volatile(
"                 STMFD   SP!, {R4-R11,LR}\n"
"                 LDR     R5, =0x723E4\n"
"                 SUB     SP, SP, #0x14\n"
"                 LDR     LR, [R5]\n"
"                 LDR     R12, =0x723FC\n" //frame num limit
"                 ADD     LR, LR, #1\n"
"                 LDR     R4, [R12]\n"
"                 STR     LR, [R5]\n"
"                 LDR     R12, =0x7247C\n"
"                 STR     R0, [SP,#0x38-0x28]\n"
"                 STR     R1, [SP,#0x38-0x2C]\n"
"                 STR     R2, [SP,#0x38-0x30]\n"
"                 STR     R3, [SP,#0x38-0x34]\n"
"                 CMP     LR, R4\n"
"                 LDR     R11, [R12]\n"
"                 MOVHI   R0, #0x80000001\n"
"                 BHI     loc_FFD1E078\n"
"                 LDR     R3, =0x72460\n"
"                 MOV     R0, LR\n"
"                 LDR     R1, [R3]\n"
"                 BL      sub_FFE96D9C\n"
"                 CMP     R0, #1\n"
"                 BNE     loc_FFD1DDB0\n"
"                 LDR     R0, =0x72484\n"
"                 LDR     R1, =0x723D0\n"
"                 LDR     R3, [R0]\n"
"                 LDR     R2, [R1]\n"
"                 CMP     R3, R2\n"
"                 LDREQ   R3, =0x72480\n"
"                 LDREQ   R5, [R3]\n"
"                 MOVNE   R5, R2\n"
"                 LDR     R3, =0x723E4\n"
"                 LDR     R2, =0x72460\n"
"                 LDR     R0, [R3]\n"
"                 LDR     R1, [R2]\n"
"                 BL      sub_FFE9670C\n"
"                 LDR     R3, =0x723D8\n"
"                 ADD     R0, R0, #1\n"
"                 AND     R0, R0, #1\n"
"                 STR     R5, [R3,R0,LSL#2]\n"
"                 LDR     R3, =0x723CC\n"
"                 LDR     R2, [R3]\n"
"                 CMP     R5, R2\n"
"                 BHI     loc_FFD1DC60\n"
"                 LDR     R4, =0x7241C\n"
"                 LDR     R3, [R4]\n"
"                 ADD     R3, R5, R3\n"
"                 ADD     R3, R3, #8\n"
"                 CMP     R2, R3\n"
"                 BCS     loc_FFD1DC64\n"
" loc_FFD1DC58:\n"
"                 MOV     R0, #0x80000003\n"
"                 B       loc_FFD1E078\n"
" loc_FFD1DC60:\n"
"                 LDR     R4, =0x7241C\n"
" loc_FFD1DC64:\n"
"                 LDR     R3, [R4]\n"
"                 LDR     R2, =0x72484\n"
"                 ADD     R1, R5, R3\n"
"                 LDR     R3, [R2]\n"
"                 ADD     R2, R1, #8\n"
"                 CMP     R2, R3\n"
"                 BLS     loc_FFD1DCB0\n"
"                 LDR     R2, =0x72480\n"
"                 LDR     R0, =0x723CC\n"
"                 RSB     R3, R3, R1\n"
"                 LDR     R1, [R2]\n"
"                 ADD     R3, R3, #8\n"
"                 LDR     R2, [R0]\n"
"                 ADD     R1, R1, R3\n"
"                 CMP     R2, R1\n"
"                 BCC     loc_FFD1DC58\n"
"                 LDR     R3, =0x723D0\n"
"                 STR     R1, [R3]\n"
"                 B       loc_FFD1DCB8\n"
" loc_FFD1DCB0:\n"
"                 LDR     R3, =0x723D0\n"
"                 STR     R2, [R3]\n"
" loc_FFD1DCB8:\n"
"                 LDR     R3, [R4]\n"
"                 LDR     R12, =0x72430\n"
"                 ADD     R3, R3, #0x18\n"
"                 LDR     R2, [R12,#4]\n"
"                 MOV     R0, R3\n"
"                 MOV     R1, #0\n"
"                 CMP     R1, R2\n"
"                 BHI     loc_FFD1DEFC\n"
"                 BNE     loc_FFD1DCE8\n"
"                 LDR     R3, [R12]\n"
"                 CMP     R0, R3\n"
"                 BHI     loc_FFD1DEFC\n"
" loc_FFD1DCE8:\n"
"                 LDR     R4, [R4]\n"
"                 LDR     LR, =0x72438\n"
"                 STR     R4, [SP,#0x38-0x38]\n"
"                 LDR     R12, =0x72430\n"
"                 LDR     R3, =0x723E4\n"
"                 LDMIA   LR, {R7,R8}\n"
"                 LDMIA   R12, {R5,R6}\n"
"                 LDR     R10, [R3]\n"
"                 LDR     R2, =0x72460\n"
"                 MOV     R3, R4\n"
"                 MOV     R4, #0\n"
"                 ADDS    R7, R7, R3\n"
"                 ADC     R8, R8, R4\n"
"                 LDR     R9, [R2]\n"
"                 SUBS    R5, R5, R3\n"
"                 SBC     R6, R6, R4\n"
"                 MOV     R2, #0xFFFFFFFF\n"
"                 MOV     R1, #0xFFFFFFE8\n"
"                 ADDS    R5, R5, R1\n"
"                 MOV     R4, #0\n"
"                 MOV     R3, #0x18\n"
"                 ADC     R6, R6, R2\n"
"                 ADDS    R7, R7, R3\n"
"                 ADC     R8, R8, R4\n"
"                 STMIA   R12, {R5,R6}\n"
"                 SUB     R0, R10, #1\n"
"                 MOV     R1, R9\n"
"                 STMIA   LR, {R7,R8}\n"
"                 BL      sub_FFE9670C\n"
"                 CMP     R10, #1\n"
"                 MLA     R0, R9, R0, R0\n"
"                 BEQ     loc_FFD1DDB0\n"
"                 SUB     R3, R0, #1\n"
"                 MOV     R3, R3,LSL#4\n"
"                 ADD     R4, R11, #0x10\n"
"                 ADD     R5, R11, #0x14\n"
"                 LDR     R1, [R5,R3]\n"
"                 LDR     R2, [R4,R3]\n"
"                 LDR     LR, =0x62773130\n"
"                 ADD     R2, R2, R1\n"
"                 MOV     R3, R0,LSL#4\n"
"                 ADD     R2, R2, #8\n"
"                 MOV     R0, #0\n"
"                 ADD     R12, R11, #0xC\n"
"                 ADD     R1, R11, #8\n"
"                 STR     LR, [R1,R3]\n"
"                 STR     R0, [R12,R3]\n"
"                 STR     R2, [R4,R3]\n"
"                 LDR     R0, [SP,#0x38-0x38]\n"
"                 STR     R0, [R5,R3]\n"
" loc_FFD1DDB0:\n"
"                 LDR     R2, =0x723D0\n"
"                 LDR     R3, =0x72484\n"
"                 LDR     R1, [R2]\n"
"                 LDR     R0, [R3]\n"
"                 ADD     R3, R1, #9\n"
"                 CMP     R3, R0\n"
"                 BLS     loc_FFD1DDEC\n"
"                 LDR     R2, =0x72480\n"
"                 LDR     R3, [R2]\n"
"                 ADD     R3, R3, R1\n"
"                 RSB     R3, R0, R3\n"
"                 LDR     R0, [SP,#0x38-0x28]\n"
"                 ADD     R3, R3, #8\n"
"                 STR     R3, [R0]\n"
"                 B       loc_FFD1DDF8\n"
" loc_FFD1DDEC:\n"
"                 ADD     R3, R1, #8\n"
"                 LDR     R1, [SP,#0x38-0x28]\n"
"                 STR     R3, [R1]\n"
" loc_FFD1DDF8:\n"
"                 LDR     R2, [SP,#0x38-0x28]\n"
"                 LDR     R1, =0x7242C\n"
"                 LDR     R3, =0x72484\n"
"                 LDR     R12, [R2]\n"
"                 LDR     R2, [R1]\n"
"                 LDR     R0, [R3]\n"
"                 ADD     R3, R12, R2\n"
"                 CMP     R3, R0\n"
"                 BLS     loc_FFD1DE4C\n"
"                 LDR     R2, [SP,#0x38-0x2C]\n"
"                 RSB     R0, R12, R0\n"
"                 STR     R0, [R2]\n"
"                 LDR     R2, =0x72480\n"
"                 LDR     R3, [R1]\n"
"                 LDR     R1, [R2]\n"
"                 RSB     R3, R0, R3\n"
"                 LDR     R0, [SP,#0x38-0x30]\n"
"                 STR     R1, [R0]\n"
"                 LDR     R1, [SP,#0x38-0x34]\n"
"                 STR     R3, [R1]\n"
"                 B       loc_FFD1DE68\n"
" loc_FFD1DE4C:\n"
"                 LDR     R0, [SP,#0x38-0x2C]\n"
"                 STR     R2, [R0]\n"
"                 LDR     R1, [SP,#0x38-0x34]\n"
"                 MOV     R3, #0\n"
"                 STR     R3, [R1]\n"
"                 LDR     R2, [SP,#0x38-0x30]\n"
"                 STR     R3, [R2]\n"
" loc_FFD1DE68:\n"
"                 LDR     R0, =0x723D0\n"
"                 LDR     R1, =0x723CC\n"
"                 LDR     R3, [R0]\n"
"                 LDR     R2, [R1]\n"
"                 CMP     R3, R2\n"
"                 BHI     loc_FFD1DE94\n"
"                 LDR     R0, [SP,#0x38-0x2C]\n"
"                 LDR     R3, [R0]\n"
"                 ADD     R3, R12, R3\n"
"                 CMP     R2, R3\n"
"                 BCC     loc_FFD1DC58\n"
" loc_FFD1DE94:\n"
"                 LDR     R1, [SP,#0x38-0x30]\n"
"                 LDR     R2, [R1]\n"
"                 CMP     R2, #0\n"
"                 BEQ     loc_FFD1DEC8\n"
"                 LDR     R3, =0x723CC\n"
"                 LDR     R1, [R3]\n"
"                 CMP     R2, R1\n"
"                 BHI     loc_FFD1DEC8\n"
"                 LDR     R0, [SP,#0x38-0x34]\n"
"                 LDR     R3, [R0]\n"
"                 ADD     R3, R2, R3\n"
"                 CMP     R1, R3\n"
"                 BCC     loc_FFD1DC58\n"
" loc_FFD1DEC8:\n"
"                 LDR     R3, =0x7242C\n"
"                 LDR     R0, =0x72430\n"
"                 LDR     R2, [R3]\n"
"                 LDR     R3, [R0,#4]\n"
"                 ADD     R2, R2, #0x18\n"
"                 MOV     R1, R2\n"
"                 MOV     R2, #0\n"
"                 CMP     R2, R3\n"
"                 BHI     loc_FFD1DEFC\n"
"                 BNE     loc_FFD1DF04\n"
"                 LDR     R3, [R0]\n"
"                 CMP     R1, R3\n"
"                 BLS     loc_FFD1DF04\n"
" loc_FFD1DEFC:\n"
"                 MOV     R0, #0x80000005\n"
"                 B       loc_FFD1E078\n"
" loc_FFD1DF04:\n"
"                 LDR     R1, =0x72414\n"
"                 LDR     R0, =0x72460\n"
"                 LDR     R3, [R1]\n"
"                 LDR     R2, [R0]\n"
"                 ADD     R3, R3, R2,LSL#4\n"
"                 ADD     R3, R3, R3,LSL#2\n"
"                 LDR     R12, =0x72430\n"
"                 MOV     R3, R3,LSL#1\n"
"                 ADD     R3, R3, #0xA0\n"
"                 LDR     R2, [R12,#4]\n"
"                 MOV     R0, R3\n"
"                 MOV     R1, #0\n"
"                 CMP     R1, R2\n"
"                 BHI     loc_FFD1DF4C\n"
"                 BNE     loc_FFD1DF70\n"
"                 LDR     R3, [R12]\n"
"                 CMP     R0, R3\n"
"                 BLS     loc_FFD1DF70\n"
" loc_FFD1DF4C:\n"
"                 LDR     R4, =0x72448\n"
"                 LDR     R1, [R4]\n"
"                 CMP     R1, #0\n"
"                 BNE     loc_FFD1DF70\n"
"                 MOV     R0, #0x3140\n" //3148
"                 ADD     R0, R0, #0x8\n"
"                 BL      sub_FFD34A8C\n"
"                 MOV     R3, #1\n"
"                 STR     R3, [R4]\n"
" loc_FFD1DF70:\n"
"                 LDR     R1, =0x72414\n"
"                 LDR     R0, =0x72460\n"
"                 LDR     R2, [R1]\n"
"                 LDR     R3, [R0]\n"
"                 LDR     R0, =0x72438\n"
"                 ADD     R2, R2, R3,LSL#4\n"
"                 MOV     R3, #0xFFFFFF60\n"
"                 ADD     R2, R2, R2,LSL#2\n"
"                 ADD     R3, R3, #0x40000000\n"
"                 SUB     R3, R3, R2,LSL#1\n"
"                 LDR     R1, [R0,#4]\n"
"                 MOV     R4, R3\n"
"                 MOV     R5, #0\n"
"                 CMP     R1, R5\n"
"                 BHI     loc_FFD1DFBC\n"
"                 BNE     loc_FFD1DFE0\n"
"                 LDR     R3, [R0]\n"
"                 CMP     R3, R4\n"
"                 BLS     loc_FFD1DFE0\n"
" loc_FFD1DFBC:\n"
"                 LDR     R4, =0x72448\n"
"                 LDR     R1, [R4]\n"
"                 CMP     R1, #0\n"
"                 BNE     loc_FFD1DFE0\n"
"                 MOV     R0, #0x3140\n" //3148
"                 ADD     R0, R0, #0x8\n"
"                 BL      sub_FFD34A8C\n"
"                 MOV     R3, #1\n"
"                 STR     R3, [R4]\n"
" loc_FFD1DFE0:\n"
"                 LDR     R3, =0x72460\n"
"                 LDR     R0, =0x723FC\n"
"                 LDR     R2, [R3]\n"
"                 LDR     R12, =0x723E4\n"
"                 LDR     R1, [R0]\n"
"                 ADD     R3, R2, R2,LSL#2\n"
"                 ADD     R2, R2, R3,LSL#1\n"
"                 LDR     R0, [R12]\n"
"                 RSB     R1, R2, R1\n"
"                 CMP     R0, R1\n"
"                 BLS     loc_FFD1E030\n"
"                 LDR     R4, =0x72448\n"
"                 LDR     R1, [R4]\n"
"                 CMP     R1, #0\n"
"                 BNE     loc_FFD1E030\n"
"                 MOV     R0, #0x3140\n" //3148
"                 ADD     R0, R0, #0x8\n"
"                 BL      sub_FFD34A8C\n"
"                 MOV     R3, #1\n"
"                 STR     R3, [R4]\n"
" loc_FFD1E030:\n"
"                 LDR     R3, =0x72438\n"
"                 LDR     R12, =0x7242C\n"
"                 LDMIA   R3, {R1,R2}\n"
"                 LDR     R0, [R12]\n"
"                 MOV     R4, #0\n"
"                 MOV     R3, #0x18\n"
"                 ADDS    R1, R1, R0\n"
"                 ADC     R2, R2, #0\n"
"                 ADDS    R1, R1, R3\n"
"                 ADC     R2, R2, R4\n"
"                 CMP     R2, #0\n"
"                 BHI     loc_FFD1E06C\n"
"                 BNE     loc_FFD1E074\n"
"                 CMP     R1, #0x40000000\n"
"                 B       loc_FFD1E074\n" //previously BLS
" loc_FFD1E06C:\n"
"                 MOV     R0, #0x80000007\n"
"                 B       loc_FFD1E078\n"
" loc_FFD1E074:\n"
"                 MOV     R0, #0\n"
" loc_FFD1E078:\n"
"                 ADD     SP, SP, #0x14\n"
"                 LDMFD   SP!, {R4-R11,PC}\n"
	);
}

void __attribute__((naked,noinline)) sub_FFD1CF50_my(){
	asm volatile(
"                 CMP     R2, #1\n"
"                 STMFD   SP!, {R4-R7,LR}\n"
"                 MOV     R7, R0\n"
"                 MOV     R6, R1\n"
"                 MOVEQ   R3, #0x79\n"
"                 STREQ   R3, [R6]\n"
"                 LDMEQFD SP!, {R4-R7,PC}\n"
"                 LDR     R12, =0x72144\n"
"                 LDR     R0, [R12]\n"
"                 LDR     R3, =0x7214C\n"
"                 CMP     R0, #0\n"
"                 LDR     R1, [R3]\n"
"                 BEQ     loc_FFD1CF98\n"
"                 LDR     R2, =0x72150\n"
"                 LDR     R3, [R2]\n"
"                 CMP     R3, #1\n"
"                 BNE     loc_FFD1CFAC\n"
"                 B       loc_FFD1CF9C\n"
" loc_FFD1CF98:\n"
"                 LDR     R2, =0x72150\n"
" loc_FFD1CF9C:\n"
"                 MOV     R3, #0\n"
"                 STR     R3, [R2]\n"
"                 STR     R7, [R12]\n"
"                 B       loc_FFD1D064\n"
" loc_FFD1CFAC:\n"
"                 LDR     R2, =0x72148\n"
"                 LDR     R3, [R2]\n"
"                 LDR     R5, =table1\n"
"                 ADD     R3, R3, R3,LSL#1\n"
"                 MOV     LR, R3,LSL#2\n"
"                 LDR     R2, [R5,LR]\n"
"                 LDR     R4, =table2\n"
"                 RSB     R12, R2, R0\n"
"                 LDR     R3, [R4,LR]\n"
"                 CMP     R12, #0\n"
"                 RSB     R0, R3, R0\n"
"                 BLE     loc_FFD1D010\n"
"                 ADD     R3, R5, #4\n"
"                 LDR     R2, [R3,LR]\n"
"                 CMP     R2, R12\n"
"                 ADDGE   R1, R1, #1\n"
"                 BGE     loc_FFD1D004\n"
"                 ADD     R3, R5, #8\n"
"                 LDR     R2, [R3,LR]\n"
"                 CMP     R2, R12\n"
"                 ADDGE   R1, R1, #2\n"
"                 ADDLT   R1, R1, #3\n"
" loc_FFD1D004:\n"
"                 CMP     R1, #0x1a\n" //0xe
"                 MOVGE   R1, #0x1a\n" //0xe
"                 B       loc_FFD1D048\n"
" loc_FFD1D010:\n"
"                 CMP     R0, #0\n"
"                 BGE     loc_FFD1D048\n"
"                 ADD     R3, R4, #4\n"
"                 LDR     R2, [R3,LR]\n"
"                 CMP     R2, R0\n"
"                 SUBLE   R1, R1, #1\n"
"                 BLE     loc_FFD1D040\n"
"                 ADD     R3, R4, #8\n"
"                 LDR     R2, [R3,LR]\n"
"                 CMP     R2, R0\n"
"                 SUBLE   R1, R1, #2\n"
"                 SUBGT   R1, R1, #3\n"
" loc_FFD1D040:\n"
"                 CMP     R1, #0\n"
"                 MOVLT   R1, #0\n"
" loc_FFD1D048:\n"
"                 LDR     R0, =0x7214C\n"
"                 LDR     R3, [R0]\n"
"                 CMP     R1, R3\n"
"                 LDRNE   R2, =0x72150\n"
"                 MOVNE   R3, #1\n"
"                 STRNE   R1, [R0]\n"
"                 STRNE   R3, [R2]\n"
" loc_FFD1D064:\n"
"                 LDR     R3, =0x7214C\n"
"                 LDR     R1, =video_mode\n" //0x5DE4
"                 LDR     R0, [R3]\n"
"                 LDR     R2, =CompressionRateTable\n" //0xFFD1CD84
"                 LDR     R12, [R1]\n"
"                 LDR     R12, [R12]\n" //+
"                 LDR     LR, [R2,R0,LSL#2]\n"
"                 LDR     R3, =0x72144\n"
"                 CMP     R12, #1\n"
"                 STR     R7, [R3]\n"
"                 STR     LR, [R6]\n"
//"                 MOVEQ   R3, #0xB\n" //-
"                 LDREQ   R3, =video_quality\n" //+
"                 LDREQ   R3, [R3]\n" //+
"                 LDREQ   R3, [R3]\n" //+
"                 STREQ   R3, [R6]\n"
"                 LDMFD   SP!, {R4-R7,PC}\n"
	);
}

//experimental stuff follows

void __attribute__((naked,noinline)) sub_FFD1BFD4_my(){
	asm volatile(
"                 STMFD   SP!, {R4-R11,LR}\n"
"                 LDR     R3, =0x720A8\n"
"                 SUB     SP, SP, #0x34\n"
"                 LDR     R12, [R3]\n"
"                 LDR     R2, =0x72068\n"
"                 LDR     R1, =0x7206C\n"
"                 LDR     R0, =0x72094\n"
"                 MOV     R11, #0\n"
"                 STR     R11, [R2]\n"
"                 STR     R12, [R0]\n"
"                 STR     R11, [R1]\n"
"                 SUB     R3, R12, #0xA\n"
"                 CMP     R3, #0x32\n"
"                 LDRLS   PC, [PC,R3,LSL#2]\n"
"                 B       loc_FFD1C0F4\n"
"                 .long loc_FFD1C0DC, loc_FFD1C0F4, loc_FFD1C0F4, loc_FFD1C0F4\n"
"                 .long loc_FFD1C0F4, loc_FFD1C0DC, loc_FFD1C0F4, loc_FFD1C0F4\n"
"                 .long loc_FFD1C0F4, loc_FFD1C0F4, loc_FFD1C0E4, loc_FFD1C0F4\n"
"                 .long loc_FFD1C0F4, loc_FFD1C0F4, loc_FFD1C0F4, loc_FFD1C0F4\n"
"                 .long loc_FFD1C0F4, loc_FFD1C0F4, loc_FFD1C0F4, loc_FFD1C0F4\n"
"                 .long loc_FFD1C0E4, loc_FFD1C0F4, loc_FFD1C0F4, loc_FFD1C0F4\n"
"                 .long loc_FFD1C0F4, loc_FFD1C0F4, loc_FFD1C0F4, loc_FFD1C0F4\n"
"                 .long loc_FFD1C0F4, loc_FFD1C0F4, loc_FFD1C0F4, loc_FFD1C0F4\n"
"                 .long loc_FFD1C0F4, loc_FFD1C0F4, loc_FFD1C0F4, loc_FFD1C0F4\n"
"                 .long loc_FFD1C0F4, loc_FFD1C0F4, loc_FFD1C0F4, loc_FFD1C0F4\n"
"                 .long loc_FFD1C0F4, loc_FFD1C0F4, loc_FFD1C0F4, loc_FFD1C0F4\n"
"                 .long loc_FFD1C0F4, loc_FFD1C0F4, loc_FFD1C0F4, loc_FFD1C0F4\n"
"                 .long loc_FFD1C0F4, loc_FFD1C0F4, loc_FFD1C0EC\n"
" loc_FFD1C0DC:\n"
"                 MOV     R11, #2\n"
"                 B       loc_FFD1C104\n"
" loc_FFD1C0E4:\n"
"                 MOV     R11, #4\n"
"                 B       loc_FFD1C104\n"
" loc_FFD1C0EC:\n"
"                 MOV     R11, #8\n"
"                 B       loc_FFD1C104\n"
" loc_FFD1C0F4:\n"
"                 MOV     R1, #0x3AC\n"
"                 LDR     R0, =0xFFD1B5A8\n"
"                 ADD     R1, R1, #1\n"
"                 BL      sub_FFC03AEC\n"
" loc_FFD1C104:\n"
"                 LDR     R4, =0x72130\n"
"                 MOV     R1, #0\n"
"                 MOV     R2, R4\n"
"                 MOV     R0, #8\n"
"                 BL      sub_FFC0281C\n"
"                 LDR     R5, =0x72088\n"
"                 LDR     R1, =0x72090\n"
"                 LDR     R3, [R5]\n"
"                 LDR     R2, [R1]\n"
"                 MUL     R12, R3, R2\n"
"                 LDR     R2, =0x720A4\n"
"                 LDR     R2, [R2]\n"
"                 LDR     R1, [R4,#4]\n"
"                 LDR     R5, =0x720A8\n"
"                 STR     R2, [SP,#0x58-0x2C]\n"
"                 LDR     LR, =0x72080\n"
"                 LDR     R7, =0x720A0\n" //movie picture width in pixels
"                 LDR     R3, =0x72074\n"
"                 LDR     R2, [R7]\n"
"                 LDR     R6, [R5]\n"
"                 LDR     R9, [LR]\n"
"                 LDR     R5, =0x72084\n"
"                 LDR     LR, [R3]\n"
"                 LDR     R7, =0x72088\n"
"                 LDR     R3, =0x72090\n"
"                 LDR     R0, [R4]\n"
"                 LDR     R4, [R5]\n"
"                 LDRH    R5, [R7]\n"
"                 LDRH    R7, [R3]\n"
"                 LDR     R3, =0x7208C\n"
"                 MOV     R12, R12,LSL#13\n"
"                 LDR     R8, [R3]\n"
"                 LDR     R10, =0xFFD1C704\n" //sub
"                 STR     R4, [SP,#0x58-0x50]\n"
"                 LDR     R4, =0x72098\n"
"                 LDR     R3, [SP,#0x58-0x2C]\n"
"                 MOV     R12, R12,LSR#16\n"
"                 STR     R12, [SP,#0x58-0x48]\n"
"                 STR     R5, [SP,#0x58-0x44]\n"
"                 STR     R7, [SP,#0x58-0x40]\n"
"                 STR     R4, [SP,#0x58-0x30]\n"
"                 STMEA   SP, {R6,LR}\n"
"                 STR     R9, [SP,#0x58-0x4C]\n"
"                 STR     R11, [SP,#0x58-0x3C]\n"
"                 STR     R8, [SP,#0x58-0x38]\n"
"                 STR     R10, [SP,#0x58-0x34]\n"
"                 LDR     R4, =0x720E4\n"
"                 BL      sub_FFD1D24C_my\n" //!!!
"                 LDR     R12, =0x720E8\n"
"                 LDR     R3, =0x72108\n"
"                 LDR     R0, [R4]\n"
"                 LDMIA   R3, {R1,R2}\n"
"                 LDR     R3, [R12]\n"
"                 BL      sub_FFD1D550\n"
"                 LDR     R7, =0x72074\n"
"                 LDR     R5, =0x720A0\n" //movie picture width in pixels
"                 LDR     R12, [R7]\n"
"                 LDR     R0, [R5]\n"
"                 LDR     R2, =0x720D4\n"
"                 MOV     R3, #0\n"
"                 LDR     R1, =0x720C8\n"
"                 STR     R12, [SP]\n"
"                 BL      sub_FFD1CE60\n"
"                 LDR     R2, =0x7209C\n"
"                 LDR     R1, =0x720EC\n"
"                 LDR     R3, [R2]\n"
"                 LDR     R0, [R1]\n"
"                 LDR     R2, =0xFFD1B568\n"
"                 ADD     R3, R3, R3,LSL#1\n"
"                 ADD     R3, R3, R0\n"
"                 LDR     R0, [R2,R3,LSL#2]\n"
"                 MOV     R1, #1\n"
"                 BL      sub_FFC80EA0\n"
"                 LDR     R0, =0xFFD1C3B4\n" //sub
"                 MOV     R1, #0\n"
"                 BL      sub_FFC810C8\n"
"                 MOV     R0, #0\n"
"                 BL      sub_FFC1D0C8\n"
"                 TST     R0, #1\n"
"                 BEQ     loc_FFD1C250\n"
"                 LDR     R0, =0xFFD1B5A8\n"
"                 MOV     R1, #0x3E0\n"
"                 BL      sub_FFC03AEC\n"
" loc_FFD1C250:\n"
"                 LDR     R3, =0x5DE0\n"
"                 MOV     R7, #1\n"
"                 LDR     R0, =0xFFD1C8AC\n" //sub
"                 MOV     R1, #0\n"
"                 STR     R7, [R3]\n"
"                 BL      sub_FFC1D0D8\n"
"                 LDR     R3, =0x71F84\n"
"                 MOV     R1, #0x1E\n"
"                 LDR     R0, [R3]\n"
"                 BL      sub_FFC10C70\n"
"                 CMP     R0, #9\n"
"                 BNE     loc_FFD1C290\n"
"                 MOV     R1, #0x3E4\n"
"                 LDR     R0, =0xFFD1B5A8\n"
"                 ADD     R1, R1, R7\n"
"                 BL      sub_FFC03AEC\n"
" loc_FFD1C290:\n"
"                 LDR     R3, =0x72088\n"
"                 LDR     R1, =0x72090\n"
"                 LDR     R4, =0x72084\n"
"                 LDR     R2, [R1]\n"
"                 LDR     R0, [R4]\n"
"                 LDR     R1, [R3]\n"
"                 BL      nullsub\n"
"                 ADD     R5, SP, #0x30\n"
"                 MOV     R0, R5\n"
"                 BL      sub_FFD1DA84\n"
"                 LDR     R3, =0x7208C\n"
"                 LDR     R0, [SP,#0x30]\n"
"                 LDR     R1, [R3]\n"
"                 BL      nullsub\n"
"                 LDR     R4, =0x72140\n"
"                 LDR     R3, [SP,#0x30]\n"
"                 LDR     R6, =0x72138\n"
"                 MOV     R0, R5\n"
"                 STR     R3, [R6]\n"
"                 STR     R7, [R4]\n"
"                 BL      sub_FFD1DA84\n"
"                 LDR     R5, =0x7208C\n"
"                 LDR     R0, [SP,#0x30]\n"
"                 LDR     R1, [R5]\n"
"                 BL      nullsub\n"
"                 LDR     R3, [R4]\n"
"                 LDR     R0, [SP,#0x30]\n"
"                 LDR     R5, =0x7212C\n"
"                 LDR     R12, =0xFFD1C80C\n" //loc
"                 LDR     LR, =0x7207C\n"
"                 ADD     R2, R3, #1\n"
"                 MOV     R1, #2\n"
"                 AND     R3, R3, #1\n"
"                 STR     R0, [R6,R3,LSL#2]\n"
"                 STR     R2, [R4]\n"
"                 STR     R12, [R5]\n"
"                 STR     R1, [LR]\n"
"                 ADD     SP, SP, #0x34\n"
"                 LDMFD   SP!, {R4-R11,PC}\n"
" nullsub:        MOV PC, LR\n"
	);
}

void __attribute__((naked,noinline)) sub_FFD1D24C_my(){ //ffd20b58 in a430
	asm volatile( //patched to remove 3 minute limit for 320x240 and 640x480 videos (changes based on a430 fw)
"                 STMFD   SP!, {R4-R11,LR}\n"
"                 MOV     R9, R2\n"
"                 LDR     R2, =0x7245C\n"
"                 SUB     SP, SP, #8\n"
"                 LDRSH   R12, [SP,#0x3C]\n"
"                 LDRSH   LR, [SP,#0x2C+0x1C]\n"
"                 LDR     R11, [SP,#0x2C]\n"
"                 LDRSH   R8, [SP,#0x2C+0x14]\n"
"                 LDRSH   R7, [SP,#0x2C+0x18]\n"
"                 STR     R3, [R2]\n"
"                 LDR     R2, [SP,#0x2C+0x8]\n"
"                 LDR     R3, =0x72464\n"
"                 STR     R2, [R3]\n"
"                 LDR     R3, [SP,#0x2C+0xC]\n"
"                 LDR     R4, =0x72468\n"
"                 LDR     R6, =0x72470\n"
"                 STR     R3, [R4]\n"
"                 LDR     R2, =0x72472\n"
"                 LDR     R3, =0x72474\n"
"                 MOV     R12, R12,LSL#16\n"
"                 MOV     LR, LR,LSL#16\n"
"                 LDR     R5, =0x7246C\n"
"                 MOV     R12, R12,LSR#16\n"
"                 MOV     LR, LR,LSR#16\n"
"                 STR     R12, [R5]\n"
"                 STRH    R8, [R6]\n" //R8 is free to use from here
"                 STR     LR, [R3]\n"
"                 STRH    R7, [R2]\n"
"                 LDR     R12, [SP,#0x2C+0x24]\n"
"                 LDR     R10, =0x72498\n"
"                 LDR     R2, =0x72458\n"
"                 LDR     R3, =0x72460\n"
"                 CMP     R9, #0x400\n" //this would mean 1024x768 video :)
"                 STR     R9, [R2]\n"
"                 STR     R12, [R10]\n"
"                 STR     R11, [R3]\n"
"                 MOV     R4, R0\n"
"                 MOV     R6, R1\n"
"                 BNE     loc_FFD1D320\n"
"                 ADD     R2, R11, R11,LSL#1\n"
"                 RSB     R2, R2, R2,LSL#4\n"
"                 LDR     R12, =0x723FC\n"
"                 LDR     R7, =0x7242C\n"
"                 MOV     R0, R2,LSL#2\n"
"                 MOV     R3, #0xb40\n" //dead code, no need to change
"                 MOV     R1, #0x80000\n"
"                 STR     R1, [R7]\n"
"                 ADD     R3, R3, #8\n"
"                 STR     R0, [R12]\n"
"                 MOV     R12, #3\n"
"                 ADD     R2, R3, R2,LSL#6\n"
"                 STR     R12, [SP,#0x2C-0x28]\n"
"                 B       loc_FFD1D3F0\n"
" loc_FFD1D320:\n"
"                 CMP     R9, #0x280\n" //640x480
"                 BNE     loc_FFD1D360\n"
//"                 ADD     R2, R11, R11,LSL#1\n"
//"                 MOV     R3, #0xb40\n"
//"                 RSB     R2, R2, R2,LSL#4\n"
/*
AVI index size calculation:
- every video and audio frame needs an index entry
- there is exactly one audio frame for every second of the recording
- an index entry occupies 16 bytes
- extra overhead: 8 bytes

The indexes occupy RAM during recording, the A420 has 16MB of RAM
3 hours recordings seem to be possible, but (according to my tests):
- with movie time limit set to 3 hours: in 320x240 mode the exclamation mark was constantly displayed (it means too high bitrate originally, which was not the case here)
- with movie time limit set to 2 hours: the warning for "this recording will end soon" (i.e. time display turns red) kicked in around an hour before the actual end
- the camera refuses to recognize movies longer than one hour (they play fine on a computer)
*/
#ifdef LIFTEDMLIMIT_A420
"LDR R7, =liftedmlimit_a420\n"
"LDR R3, =0xE100\n" //size for audio indexes, for 1 hour
"MUL R3, R7, R3\n" //multiplied
"RSB R8, R11, R11, LSL#4\n"
"RSB R2, R8, R8, LSL#4\n" //size for video indexes, for 1 hour
"MUL R2, R7, R2\n" //multiplied
#else
"RSB R8, R11, R11, LSL#4\n"
"MOV R3, #0xE100\n" //1 hour
"RSB R2, R8, R8, LSL#4\n" //1 hour
#endif
"                 ADD     R3, R3, #8\n" //index overhead
"                 LDR     R7, =0x7242C\n"
"                 LDR     R12, =0x723FC\n"
//"                 MOV     R0, R2,LSL#2\n"
"MOV R0, R2, LSL#4\n"
"                 MOV     R1, #0x40000\n"
//"                 ADD     R2, R3, R2,LSL#6\n"
"ADD R2, R3, R2, LSL#8\n"
"                 MOV     R3, #2\n"
"                 STR     R1, [R7]\n"
"                 STR     R0, [R12]\n"
"                 STR     R3, [SP,#0x2C-0x28]\n"
"                 B       loc_FFD1D3F0\n"
" loc_FFD1D360:\n"
"                 CMP     R9, #0x140\n" //320x240
"                 BNE     loc_FFD1D3BC\n"
//"                 ADD     R2, R11, R11,LSL#1\n"
//"                 MOV     R3, #0xb40\n"
//"                 RSB     R2, R2, R2,LSL#4\n"
#ifdef LIFTEDMLIMIT_A420
"LDR R7, =liftedmlimit_a420\n"
"LDR R3, =0xE100\n" //size for audio indexes, for 1 hour
"MUL R3, R7, R3\n" //multiplied
"RSB R8, R11, R11, LSL#4\n"
"RSB R2, R8, R8, LSL#4\n" //size for video indexes, for 1 hour
"MUL R2, R7, R2\n" //multiplied
#else
"RSB R8, R11, R11, LSL#4\n"
"MOV R3, #0xE100\n" //1 hour
"RSB R2, R8, R8, LSL#4\n" //1 hour
#endif
"                 ADD     R3, R3, #8\n"
"                 LDR     R7, =0x7242C\n"
"                 LDR     R12, =0x723FC\n"
//"                 MOV     R0, R2,LSL#2\n"
"MOV R0, R2, LSL#4\n"
"                 MOV     R1, #0x20000\n"
//"                 ADD     R2, R3, R2,LSL#6\n"
"ADD R2, R3, R2, LSL#8\n"
"                 CMP     R11, #0x3C\n"
"                 MOV     R3, #1\n"
"                 STR     R1, [R7]\n"
"                 STR     R0, [R12]\n"
"                 STR     R3, [SP,#0x2C-0x28]\n"
"                 BNE     loc_FFD1D3F0\n"
//"                 RSB     R3, R11, R11,LSL#4\n"
//"                 MOV     R2, R3,LSL#6\n"
//"                 MOV     R3, R3,LSL#2\n"
//"                 STR     R3, [R12]\n"
//"                 ADD     R2, R2, #0x3C8\n"
/*
the following is a 60 sec limit for the hi-speed video (which is not available here)
*/
"MOV  R3, R8,LSL#2\n"
"MOV  R2, #0xE400\n"
"STR  R3, [R12]\n"
"ADD  R2, R2, #0xC8\n"
"                 B       loc_FFD1D3F0\n"
" loc_FFD1D3BC:\n" //160x120
"                 ADD     R2, R11, R11,LSL#1\n"
"                 RSB     R2, R2, R2,LSL#4\n"
"                 LDR     R12, =0x723FC\n"
"                 LDR     R7, =0x7242C\n"
"                 MOV     R0, R2,LSL#2\n"
"                 MOV     R1, #0x10000\n"
"                 STR     R1, [R7]\n"
"                 MOV     R3, #0xb40\n" //resolution too low, 3 minutes are more than enough...
"                 STR     R0, [R12]\n"
"                 MOV     R12, #0\n"
"                 ADD     R3, R3, #8\n"
"                 STR     R12, [SP,#0x2C-0x28]\n"
"                 ADD     R2, R3, R2,LSL#6\n"
" loc_FFD1D3F0:\n"
"                 ADD     LR, R4, #0xF\n"
"                 LDR     R3, [SP,#0x4C]\n"
"                 BIC     LR, LR, #0xF\n"
"                 ADD     LR, LR, #8\n"
"                 ADD     R5, LR, R2\n"
"                 LDR     R1, [R7]\n"
"                 MOV     R2, R3,LSL#1\n"
"                 LDR     R3, [SP,#0x2C+0x28]\n"
"                 ADD     R12, R4, R6\n"
"                 STR     R1, [R3]\n"
"                 LDR     R3, [SP,#0x2C+0x4]\n"
"                 RSB     R12, R5, R12\n"
"                 RSB     R12, R2, R12\n"
"                 SUBS    R3, R3, #0\n"
"                 MOVNE   R3, #1\n"
"                 SUB     R12, R12, #0x10\n"
"                 STR     R3, [SP]\n"
"                 BIC     R12, R12, #0x7F00\n"
"                 LDR     R3, =0x7248C\n"
"                 BIC     R12, R12, #0xFF\n"
"                 STR     R12, [R3]\n"
"                 LDR     R6, =0x7247C\n"
"                 LDR     R3, =0x72484\n"
"                 ADD     R4, R5, R12\n"
"                 STR     LR, [R6]\n"
"                 STR     R4, [R3]\n"
"                 LDR     R12, [SP,#0x4C]\n"
"                 LDR     R11, =0x72480\n"
"                 LDR     R10, =0x72488\n"
"                 LDR     R3, =0x7241C\n"
"                 MOV     R0, R4\n"
"                 MOV     R1, #0x80\n"
"                 STR     R12, [R3]\n"
"                 STR     R5, [R11]\n"
"                 ADD     R2, R2, #0x10\n"
"                 STR     R4, [R10]\n"
"                 BL      sub_FFC7FE44\n"//equivalent sub in a430: FFC831C0, but not called at this place
"                 LDR     R10, [R10]\n"
"                 LDR     R9, [R11]\n"
"                 LDR     LR, =0x62773130\n"
"                 LDR     R12, =0x723D8\n"
"                 LDR     R0, =0x7241C\n"
"                 MOV     R1, #0\n"
" loc_FFD1D49C:\n"
"                 LDR     R3, [R0]\n"
"                 ADD     R3, R3, #8\n"
"                 MUL     R2, R3, R1\n"
"                 STR     LR, [R10,R2]\n"
"                 STR     R9, [R12,R1,LSL#2]\n"
"                 LDR     R3, [R0]\n"
"                 ADD     R1, R1, #1\n"
"                 ADD     R2, R10, R2\n"
"                 CMP     R1, #1\n"
"                 STR     R3, [R2,#4]\n"
"                 BLE     loc_FFD1D49C\n"
"                 LDR     R3, =0x72460\n"
"                 LDR     R1, [SP]\n"
"                 LDR     R2, [R3]\n"
"                 LDR     R0, [SP,#0x2C-0x28]\n"
"                 BL      sub_FFCFBE50\n"
"                 LDR     R3, =0x7241C\n"
"                 LDR     R2, [R3]\n"
"                 LDR     R1, =0x72414\n"
"                 ADD     R0, R0, R2\n"
"                 STR     R0, [R1]\n"
"                 ADD     SP, SP, #8\n"
"                 LDMFD   SP!, {R4-R11,PC}\n"
	);
}

