#include "lolevel.h"
#include "platform.h"
#include "core.h"

static long *nrflag = (long*)0x5E64; //a420 @ffd29118

#include "../../../generic/capt_seq.c"

void __attribute__((naked,noinline)) sub_FFD290DC_my(long p)
{
  asm volatile (
              "STMFD   SP!, {R4-R6,LR}\n"
              "LDR     R3, =0x726D4\n"
              "LDR     R5, =0x5E60\n"
              "SUB     SP, SP, #4\n"
              "LDR     R1, =0xFFFFFFFF\n"
              "STR     R0, [R5]\n"
              "LDR     R0, [R3]\n"
              "BL      sub_FFC0FB48\n"
              "LDR     R3, =0x9C780\n"
              "LDR     R0, [R3,#0x74]\n"
              "BL      sub_FFC87868\n"
              "BL      sub_FFD2905C\n"
             
              "LDR     R3, =0x5E68\n"
              "LDR     R0, [R3]\n"
              "BL      sub_FFC87D14\n"
            "BL      wait_until_remote_button_is_released\n" //+
              "BL      capt_seq_hook_set_nr\n" //+
              "B       sub_FFD29118\n"
  );
} // a420, ok

void __attribute__((naked,noinline)) sub_FFD25ECC_my(long p)
{
  asm volatile (
              "STMFD   SP!, {R4,LR}\n"
              "LDR     R4, [R0,#0xC]\n"
              "BL      sub_FFD2EC88\n"
              "CMP     R0, #0\n"
              "BNE     loc_FFD25EE4\n"
              "BL      sub_FFD2EC94\n"
    "loc_FFD25EE4:\n"
              "MOV     R0, #0xC\n"
              "BL      sub_FFD2ECA8\n"
              "TST     R0, #1\n"
              "MOV     R2, R4\n"
              "MOV     R0, R4\n"
              "BEQ     loc_FFD25F0C\n"
              "MOV     R0, #1\n"
              "MOV     R1, R0\n"
              "LDMFD   SP!, {R4,LR}\n"
              "B       sub_FFD24448\n"
    "loc_FFD25F0C:\n"
              "BL      sub_FFD27F30\n"
              "TST     R0, #1\n"
              "MOV     R2, R4\n"
              "MOV     R1, #1\n"
              "BEQ     loc_FFD25F28\n"
              "LDMFD   SP!, {R4,LR}\n"
              "B       sub_FFD24448\n"
    "loc_FFD25F28:\n"
              "BL      sub_FFC14714\n"
              "LDR     R2, =0x9C6C4\n"
              "ADD     R3, R4, R4,LSL#1\n"
              "STR     R0, [R2,R3,LSL#5]\n"
              "MOV     R0, R4\n"
              "BL      sub_FFD29844\n"
              "BL      sub_FFD28434\n"
              "BL      sub_FFD283D0\n"
              "MOV     R0, R4\n"

              "BL      sub_FFD290DC_my\n"
              "BL      capt_seq_hook_raw_here\n" //+

              "MOV     R2, R4\n"
              "MOV     R1, #1\n"
              "BL      sub_FFD24448\n"
              "LDMFD   SP!, {R4,LR}\n"
              "B       sub_FFD292D0\n"
  );
} // a420, ok

void __attribute__((naked,noinline)) capt_seq_task()    //IDA task_CaptSeqTask
{
  asm volatile (//copy from orig fw @ffd262b0
          "STMFD   SP!, {R4,LR}\n"
          "SUB     SP, SP, #4\n"
          "MOV     R4, SP\n"
          "B       loc_FFD26408\n"
    "loc_FFD262C0:\n"
          "LDR     R2, [SP]\n"
          "LDR     R3, [R2]\n"
          "MOV     R0, R2\n"
          "CMP     R3, #0x14\n"
          "LDRLS   PC, [PC,R3,LSL#2]\n"
          "B       loc_FFD263DC\n"
          ".long loc_FFD2632C\n" //0, still pict mode: half-shoot, ...
          ".long loc_FFD26338\n" //1, shoot
          ".long loc_FFD26340\n"
          ".long loc_FFD26350\n" //3, when idle
          ".long loc_FFD26348\n" //4, after expo
          ".long loc_FFD26358\n"
          ".long loc_FFD26360\n"
          ".long loc_FFD2636C\n"
          ".long loc_FFD26374\n" //movie mode: just before record
          ".long loc_FFD26380\n"
          ".long loc_FFD26388\n"
          ".long loc_FFD26390\n"
          ".long loc_FFD26398\n"
          ".long loc_FFD263A0\n"
          ".long loc_FFD263A8\n"
          ".long loc_FFD263B4\n"
          ".long loc_FFD263BC\n"
          ".long loc_FFD263C4\n" //0x11, 2nd at change of rec. format
          ".long loc_FFD263CC\n"
          ".long loc_FFD263D4\n"
          ".long loc_FFD263F0\n" //0x14, 1st at change of rec. format
    "loc_FFD2632C:\n"
          "BL      sub_FFD27BA0\n"
          "BL      shooting_expo_param_override\n"   // +
          "BL      sub_FFD23FF8\n"
          "B       loc_FFD263EC\n"
    "loc_FFD26338:\n"
          "BL	sub_FFD25ECC_my\n"
          "B	loc_FFD263EC\n"
    "loc_FFD26340:\n"
          "BL	sub_FFD27F20\n"
          "B	loc_FFD263EC\n"
    "loc_FFD26348:\n"
          "BL	sub_FFD26E18\n"
          "B	loc_FFD263EC\n"
    "loc_FFD26350:\n"
          "BL	sub_FFD27234\n"
          "B	loc_FFD263EC\n"
    "loc_FFD26358:\n"
          "BL	sub_FFD27244\n"
          "B	loc_FFD263EC\n"
    "loc_FFD26360:\n"
          "BL	sub_FFD27C6C\n"
          "BL	sub_FFD23FF8\n"
          "B	loc_FFD263EC\n"
    "loc_FFD2636C:\n"
          "BL	sub_FFD25FD4\n"
          "B	loc_FFD263EC\n"
    "loc_FFD26374:\n"
          "BL	sub_FFD27CD4\n"
          "BL	sub_FFD23FF8\n"
          "B	loc_FFD263EC\n"
    "loc_FFD26380:\n"
          "BL	sub_FFD27234\n"
          "B	loc_FFD263EC\n"
    "loc_FFD26388:\n"
          "BL	sub_FFD28474\n"
          "B	loc_FFD263EC\n"
    "loc_FFD26390:\n"
          "BL	sub_FFD28790\n"
          "B	loc_FFD263EC\n"
    "loc_FFD26398:\n"
          "BL	sub_FFD28818\n"
          "B	loc_FFD263EC\n"
    "loc_FFD263A0:\n"
          "BL	sub_FFD288E0\n"
          "B	loc_FFD263EC\n"
    "loc_FFD263A8:\n"
          "MOV	R0, #0\n"
          "BL	sub_FFD28998\n"
          "B	loc_FFD263EC\n"
    "loc_FFD263B4:\n"
          "BL	sub_FFD28AF0\n"
          "B	loc_FFD263EC\n"
    "loc_FFD263BC:\n"
          "BL	sub_FFD28B88\n"
          "B	loc_FFD263EC\n"
    "loc_FFD263C4:\n"
          "BL	sub_FFD28C44\n"
          "B	loc_FFD263EC\n"
    "loc_FFD263CC:\n"
          "BL	sub_FFD28D2C\n"
          "B	loc_FFD263EC\n"
    "loc_FFD263D4:\n"
          "BL	sub_FFD28D80\n"
          "B	loc_FFD263EC\n"
    "loc_FFD263DC:\n"
          "MOV	R1, #0x330\n"
          "LDR	R0, =0xFFD25C58\n"
          "ADD	R1, R1, #1\n"
          "BL	sub_FFC03AEC\n"
    "loc_FFD263EC:\n"
          "LDR	R2, [SP]\n"
    "loc_FFD263F0:\n"
          "LDR	R3, =0x7265C\n"
          "LDR	R1, [R2, #4]\n"
          "LDR	R0, [R3]\n"
          "BL	sub_FFC0F9AC\n"
          "LDR	R0, [SP]\n"
          "BL	sub_FFD25CD4\n"
    "loc_FFD26408:\n"
          "LDR	R3, =0x72660\n"
          "MOV	R1, R4\n"
          "LDR	R0, [R3]\n"
          "MOV	R2, #0\n"
          "BL	sub_FFC100C4\n"
          "TST	R0, #1\n"
          "BEQ	loc_FFD262C0\n"
          "MOV	R1, #0x28C\n"
          "LDR	R0, =0xFFD25C58\n"
          "ADD	R1, R1, #2\n"
          "BL	sub_FFC03AEC\n"
          "BL	sub_FFC11620\n"
          "ADD	SP, SP, #4\n"
          "LDMFD	SP!, {R4, PC}\n"
  );
} // a420, ok

void __attribute__((naked,noinline)) exp_drv_task(){
 asm volatile(// a420 @ffcdb3a4
"                 STMFD   SP!, {R4-R8,LR}\n"
"                 SUB     SP, SP, #0x14\n"
"                 MOV     R7, SP\n"
"                 B       loc_FFCDB798\n"
" loc_FFCDB3B4:\n"
"                 CMP     R2, #0x1E\n"
"                 BNE     loc_FFCDB3CC\n"
"                 LDR     R0, [R12,#0x34]\n"
"                 MOV     LR, PC\n"
"                 LDR     PC, [R12,#0x30]\n"
"                 B       loc_FFCDB42C\n"
" loc_FFCDB3CC:\n"
"                 CMP     R2, #0x19\n"
"                 BNE     loc_FFCDB3E0\n"
"                 MOV     R0, R12\n"
"                 BL      sub_FFCDB2D4\n"
"                 B       loc_FFCDB41C\n"
" loc_FFCDB3E0:\n"
"                 CMP     R2, #0x1A\n"
"                 BNE     loc_FFCDB3F4\n"
"                 MOV     R0, R12\n"
"                 BL      sub_FFCDB310\n"
"                 B       loc_FFCDB41C\n"
" loc_FFCDB3F4:\n"
"                 SUB     R3, R2, #0x1B\n"
"                 CMP     R3, #1\n"
"                 BHI     loc_FFCDB40C\n"
"                 MOV     R0, R12\n"
"                 BL      sub_FFCDB34C\n"
"                 B       loc_FFCDB41C\n"
" loc_FFCDB40C:\n"
"                 CMP     R2, #0x1D\n"
"                 BNE     loc_FFCDB438\n"
"                 BL      sub_FFC92DC8\n"
"                 BL      sub_FFC94BB8\n"
" loc_FFCDB41C:\n"
"                 LDR     R3, [SP]\n"
"                 LDR     R0, [R3,#0x34]\n"
"                 MOV     LR, PC\n"
"                 LDR     PC, [R3,#0x30]\n"
" loc_FFCDB42C:\n"
"                 LDR     R0, [SP]\n"
"                 BL      sub_FFCD90D0\n"
"                 B       loc_FFCDB798\n"
" loc_FFCDB438:\n"
"                 CMP     R2, #0xD\n"
"                 MOV     R8, #1\n"
"                 BNE     loc_FFCDB4A8\n"
"                 LDR     R1, [R12,#0x24]\n"
"                 ADD     R1, R1, R1,LSL#1\n"
"                 ADD     R1, R12, R1,LSL#1\n"
"                 ADD     R6, SP, #0x0C\n"
"                 SUB     R1, R1, #2\n"
"                 MOV     R2, #6\n"
"                 MOV     R0, R6\n"
"                 BL      sub_FFE9AAC8\n"
"                 LDR     R0, [SP]\n"
"                 BL      sub_FFCDA564\n"
"                 LDR     R3, [SP]\n"
"                 LDR     R1, [R3,#0x24]\n"
"                 LDR     R2, [R3,#0x34]\n"
"                 ADD     R0, R3, #4\n"
"                 MOV     LR, PC\n"
"                 LDR     PC, [R3,#0x30]\n"
"                 LDR     R0, [SP]\n"
"                 BL      sub_FFCDA6E8\n"
"                 LDR     R3, [SP]\n"
"                 ADD     R0, R3, #4\n"
"                 LDR     R1, [R3,#0x24]\n"
"                 LDR     R2, [R3,#0x3C]\n"
"                 MOV     LR, PC\n"
"                 LDR     PC, [R3,#0x38]\n"
"                 B       loc_FFCDB748\n"
" loc_FFCDB4A8:\n"
"                 SUB     R3, R2, #0xE\n"
"                 CMP     R3, #1\n"
"                 BHI     loc_FFCDB564\n"
"                 ADD     R6, SP, #0x0C\n"
"                 ADD     R5, SP, #0x04\n"
"                 MOV     R0, R12\n"
"                 MOV     R1, R6\n"
"                 MOV     R2, R5\n"
"                 BL      sub_FFCDA764\n"
"                 MOV     R4, R0\n"
"                 CMP     R4, #5\n"
"                 CMPNE   R4, #1\n"
"                 BNE     loc_FFCDB4FC\n"
"                 LDR     R12, [SP]\n"
"                 MOV     R0, R5\n"
"                 LDR     R1, [R12,#0x24]\n"
"                 MOV     R2, R4\n"
"                 LDR     R3, [R12,#0x34]\n"
"                 MOV     LR, PC\n"
"                 LDR     PC, [R12,#0x30]\n"
"                 B       loc_FFCDB534\n"
" loc_FFCDB4FC:\n"
"                 CMP     R4, #6\n"
"                 CMPNE   R4, #2\n"
"                 BNE     loc_FFCDB544\n"
"                 LDR     R12, [SP]\n"
"                 MOV     R0, R5\n"
"                 MOV     R1, R8\n"
"                 MOV     R2, R4\n"
"                 LDR     R3, [R12,#0x34]\n"
"                 MOV     LR, PC\n"
"                 LDR     PC, [R12,#0x30]\n"
"                 MOV     R1, R6\n"
"                 LDR     R0, [SP]\n"
"                 MOV     R2, R5\n"
"                 BL      sub_FFCDB110\n"
" loc_FFCDB534:\n"
"                 MOV     R1, R4\n"
"                 LDR     R0, [SP]\n"
"                 BL      sub_FFCDB2B4\n"
"                 B       loc_FFCDB748\n"
" loc_FFCDB544:\n"
"                 LDR     R12, [SP]\n"
"                 MOV     R2, R4\n"
"                 ADD     R0, R12, #4\n"
"                 LDR     R1, [R12,#0x24]\n"
"                 LDR     R3, [R12,#0x34]\n"
"                 MOV     LR, PC\n"
"                 LDR     PC, [R12,#0x30]\n"
"                 B       loc_FFCDB748\n"
" loc_FFCDB564:\n"
"                 CMP     R2, #0x17\n"
"                 BNE     loc_FFCDB5B8\n"
"                 LDR     R1, [R12,#0x24]\n"
"                 ADD     R1, R1, R1,LSL#1\n"
"                 ADD     R1, R12, R1,LSL#1\n"
"                 ADD     R6, SP, #0x0C\n"
"                 SUB     R1, R1, #2\n"
"                 MOV     R2, #6\n"
"                 MOV     R0, R6\n"
"                 BL      sub_FFE9AAC8\n"
"                 LDR     R0, [SP]\n"
"                 BL      sub_FFCDA098\n"
"                 LDR     R3, [SP]\n"
"                 ADD     R0, R3, #4\n"
"                 LDR     R1, [R3,#0x24]\n"
"                 LDR     R2, [R3,#0x34]\n"
"                 MOV     LR, PC\n"
"                 LDR     PC, [R3,#0x30]\n"
"                 LDR     R0, [SP]\n"
"                 BL      sub_FFCDA268\n"
"                 B       loc_FFCDB748\n"
" loc_FFCDB5B8:\n"
"                 ADD     R6, SP, #0x0C\n"
"                 ADD     R1, R12, #4\n"
"                 MOV     R2, #6\n"
"                 MOV     R0, R6\n"
"                 BL      sub_FFE9AAC8\n"
"                 LDR     R12, [SP]\n"
"                 LDR     R3, [R12]\n"
"                 MOV     R2, R12\n"
"                 CMP     R3, #0x18\n"
"                 LDRLS   PC, [PC,R3,LSL#2]\n"
"                 B       loc_FFCDB734\n"
"                 .long loc_FFCDB648\n"
"                 .long loc_FFCDB654\n"
"                 .long loc_FFCDB660\n"
"                 .long loc_FFCDB660\n"
"                 .long loc_FFCDB648\n"
"                 .long loc_FFCDB654\n"
"                 .long loc_FFCDB660\n"
"                 .long loc_FFCDB660\n"
"                 .long loc_FFCDB684\n"
"                 .long loc_FFCDB684\n"
"                 .long loc_FFCDB708\n"
"                 .long loc_FFCDB714\n"
"                 .long loc_FFCDB724\n"
"                 .long loc_FFCDB734\n"
"                 .long loc_FFCDB734\n"
"                 .long loc_FFCDB734\n"
"                 .long loc_FFCDB66C\n"
"                 .long loc_FFCDB678\n"
"                 .long loc_FFCDB694\n"
"                 .long loc_FFCDB6A0\n"
"                 .long loc_FFCDB6C8\n"
"                 .long loc_FFCDB6F0\n"
"                 .long loc_FFCDB6F0\n"
"                 .long loc_FFCDB734\n"
"                 .long loc_FFCDB6FC\n"
" loc_FFCDB648:\n"
"                 MOV     R0, R2\n"
"                 BL      sub_FFCD9638\n"
"                 B       loc_FFCDB730\n"
" loc_FFCDB654:\n"
"                 MOV     R0, R2\n"
"                 BL      sub_FFCD9774\n"
"                 B       loc_FFCDB730\n"
" loc_FFCDB660:\n"
"                 MOV     R0, R2\n"
"                 BL      sub_FFCD98A4\n"
"                 B       loc_FFCDB730\n"
" loc_FFCDB66C:\n"
"                 MOV     R0, R2\n"
"                 BL      sub_FFCD9A78\n"
"                 B       loc_FFCDB730\n"
" loc_FFCDB678:\n"
"                 MOV     R0, R2\n"
"                 BL      sub_FFCD9B80\n"
"                 B       loc_FFCDB730\n"
" loc_FFCDB684:\n"
"                 MOV     R0, R2\n"
"                 BL      sub_FFCD9C44_my\n" //
"                 MOV     R8, #0\n"
"                 B       loc_FFCDB730\n"
" loc_FFCDB694:\n"
"                 MOV     R0, R2\n"
"                 BL      sub_FFCD9D04\n"
"                 B       loc_FFCDB730\n"
" loc_FFCDB6A0:\n"
"                 MOV     R0, R2\n"
"                 LDRH    R2, [R2,#4]\n"
"                 LDR     R3, =0x4DD38\n"
"                 STRH    R2, [SP,#0x0C]\n"
"                 LDRH    R1, [R3,#4]\n"
"                 STRH    R1, [SP,#0x10]\n"
"                 LDRH    R3, [R3,#2]\n"
"                 STRH    R3, [SP,#0x0E]\n"
"                 BL      sub_FFCD9E8C\n"
"                 B       loc_FFCDB730\n"
" loc_FFCDB6C8:\n"
"                 LDR     R3, =0x4DD38\n"
"                 LDRH    R1, [R3]\n"
"                 STRH    R1, [SP,#0x0C]\n"
"                 MOV     R0, R2\n"
"                 LDRH    R2, [R2,#6]\n"
"                 STRH    R2, [SP,#0x0E]\n"
"                 LDRH    R3, [R3,#4]\n"
"                 STRH    R3, [SP,#0x10]\n"
"                 BL      sub_FFCD9F20\n"
"                 B       loc_FFCDB730\n"
" loc_FFCDB6F0:\n"
"                 MOV     R0, R2\n"
"                 BL      sub_FFCD9FA0\n"
"                 B       loc_FFCDB730\n"
" loc_FFCDB6FC:\n"
"                 MOV     R0, R2\n"
"                 BL      sub_FFCDA2F8\n"
"                 B       loc_FFCDB730\n"
" loc_FFCDB708:\n"
"                 MOV     R0, R2\n"
"                 BL      sub_FFCDA3CC\n"
"                 B       loc_FFCDB730\n"
" loc_FFCDB714:\n"
"                 MOV     R0, R2\n"
"                 MOV     R1, #0\n"
"                 BL      sub_FFCDA4B8\n"
"                 B       loc_FFCDB730\n"
" loc_FFCDB724:\n"
"                 MOV     R0, R2\n"
"                 MOV     R1, #1\n"
"                 BL      sub_FFCDA4B8\n"
" loc_FFCDB730:\n"
"                 LDR     R12, [SP]\n"
" loc_FFCDB734:\n"
"                 ADD     R0, R12, #4\n"
"                 LDR     R1, [R12,#0x24]\n"
"                 LDR     R2, [R12,#0x34]\n"
"                 MOV     LR, PC\n"
"                 LDR     PC, [R12,#0x30]\n"
" loc_FFCDB748:\n"
"                 CMP     R8, #1\n"
"                 BNE     loc_FFCDB770\n"
"                 LDR     R1, [SP]\n"
"                 LDR     R3, [R1,#0x24]\n"
"                 ADD     R3, R3, R3,LSL#1\n"
"                 ADD     R1, R1, R3,LSL#1\n"
"                 MOV     R0, R6\n"
"                 SUB     R1, R1, #2\n"
"                 BL      sub_FFCD94A0\n"
"                 B       loc_FFCDB790\n"
" loc_FFCDB770:\n"
"                 MOV     R0, #1\n"
"                 MOV     R1, R0\n"
"                 MOV     R2, R0\n"
"                 BL      sub_FFCD9444\n"
"                 MOV     R0, #1\n"
"                 MOV     R1, R0\n"
"                 MOV     R2, R0\n"
"                 BL      sub_FFCD9560\n"
" loc_FFCDB790:\n"
"                 LDR     R0, [SP]\n"
"                 BL      sub_FFCD90D0\n"
" loc_FFCDB798:\n"
"                 LDR     R3, =0x4DD30\n"
"                 MOV     R2, #0\n"
"                 LDR     R0, [R3]\n"
"                 MOV     R1, R7\n"
"                 BL      sub_FFC100C4\n"
"                 LDR     R12, [SP]\n"
"                 LDR     R2, [R12]\n"
"                 CMP     R2, #0x1F\n"
"                 BNE     loc_FFCDB3B4\n"
"                 MOV     R0, R12\n"
"                 BL      sub_FFCD90D0\n"
"                 LDR     R3, =0x4DD2C\n"
"                 MOV     R1, #1\n"
"                 LDR     R0, [R3]\n"
"                 BL      sub_FFC0F9AC\n"
"                 BL      sub_FFC11620\n"
"                 ADD     SP, SP, #0x14\n"
"                 LDMFD   SP!, {R4-R8,PC}\n"
 );
} // a420

void __attribute__((naked,noinline)) sub_FFCD9C44_my(){//
 asm volatile(
"                 STMFD   SP!, {R4,R5,LR}\n"
"                 LDR     R3, =0x4DD2C\n"
"                 MOV     R4, R0\n"
"                 MOV     R1, #0xE\n"
"                 LDR     R0, [R3]\n"
"                 BL      sub_FFC0FB48\n"
"                 MOV     R1, #0\n"
"                 LDRSH   R0, [R4,#4]\n"
"                 BL      sub_FFCD91AC\n"
"                 MOV     R5, R0\n"
"                 LDRSH   R0, [R4,#6]\n"
"                 BL      sub_FFCD92DC\n"
"                 LDRSH   R0, [R4,#8]\n"
"                 BL      sub_FFCD9378\n"
"                 LDR     R3, [R4]\n"
"                 CMP     R3, #9\n"
"                 MOVEQ   R5, #0\n"
"                 CMP     R5, #1\n"
"                 LDR     R1, =0xFFCD9104\n"
"                 MOV     R2, #2\n"
"                 BNE     loc_FFCD9CB0\n"
"                 LDRSH   R0, [R4,#4]\n"
"                 BL      sub_FFE47B78\n"
"                 LDR     R2, =0x4DD58\n"
"                 MOV     R3, #0\n"
"                 STR     R3, [R2]\n"
"                 B       loc_FFCD9CB4\n"
" loc_FFCD9CB0:\n"
"                 BL      sub_FFCD9414\n"
" loc_FFCD9CB4:\n"
"                 STRH    R0, [R4,#4]\n"
"                 LDRSH   R0, [R4,#6]\n"
"                 BL      sub_FFC92A50_my\n" //
"                 LDRSH   R0, [R4,#8]\n"
"                 MOV     R1, #1\n"
"                 BL      sub_FFC94778\n"
"                 MOV     R1, #0\n"
"                 ADD     R0, R4, #8\n"
"                 BL      sub_FFC94838\n"
"                 CMP     R5, #1\n"
"                 MOV     R1, #2\n"
"                 MOV     R2, #0\n"
"                 LDMNEFD SP!, {R4,R5,PC}\n"
"                 LDR     R3, =0x4DD2C\n"
"                 LDR     R0, [R3]\n"
"                 LDMFD   SP!, {R4,R5,LR}\n"
"                 B       sub_FFC0F99C\n"
 );
}// a420

void __attribute__((naked,noinline)) sub_FFC92A50_my() {
 asm volatile(
"                 STMFD   SP!, {R4,LR}\n"
"                 LDR     R3, =0x5078\n"
"                 LDR     R2, [R3]\n"
"                 MOV     R1, #0x114\n"
"                 MOV     R3, R0,LSL#16\n"
"                 CMP     R2, #1\n"
"                 ADD     R1, R1, #1\n"
"                 LDR     R0, =0xFFC924CC\n"
"                 MOV     R4, R3,ASR#16\n"
"                 BEQ     loc_FFC92A7C\n"
"                 BL      sub_FFC03AEC\n"
" loc_FFC92A7C:\n"
"                 MOV     R1, #0x118\n"
"                 CMN     R4, #0xC00\n"
"                 LDR     R3, =0x34276\n"
"                 LDR     R0, =0xFFC924CC\n"
"                 ADD     R1, R1, #3\n"
"                 LDREQSH R4, [R3]\n"
"                 LDRNE   R3, =0x34276\n"
"                 CMN     R4, #0xC00\n"
"                 STRH    R4, [R3]\n"
"                 BNE     loc_FFC92AA8\n"
"                 BL      sub_FFC03AEC\n"
" loc_FFC92AA8:\n"
"                 MOV     R0, R4\n"
"                 BL      apex2us\n" //previously sub_FFC93B4C
"                 MOV     R4, R0\n"
"                 BL      sub_FFCB8664\n"
"                 MOV     R0, R4\n"
"                 BL      sub_FFC920C0\n"
"                 TST     R0, #1\n"
"                 MOV     R1, #0x120\n"
"                 LDR     R0, =0xFFC924CC\n"
"                 LDMEQFD SP!, {R4,PC}\n"
"                 LDMFD   SP!, {R4,LR}\n"
"                 B       sub_FFC03AEC\n"
 );
}// a420
