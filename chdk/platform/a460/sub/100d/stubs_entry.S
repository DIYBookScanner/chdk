// !!! THIS FILE IS GENERATED. DO NOT EDIT. !!!
#include "stubs_asm.h"

// Camera info:
//   Firmware Ver GM1.00D   // Found @ 0xffc07c40, "GM1.00D" @ 0xffc07c4d
//   Firmware build timestamp: Dec  1 2006 17:28:24
//   Canon PowerShot A460

// Values for makefile.inc
//   PLATFORMID = 12617 (0x3149) // Found @ 0xfffe0130
//   MAXRAMADDR = 0x00ffffff
//   MEMISOSTART = 0x00095730

// Stubs below should be checked. Stub not matched 100%, or difference found to current 'stubs_entry_2.S'
//    Name                                     Address      Rule  %  Comp to stubs_entry_2.S
NHSTUB(EnterToCompensationEVF                 ,0xffe6b0f8) //  3 96%
NHSTUB(FreeUncacheableMemory                  ,0xffc0e0dc) //  1 90%
NHSTUB(GetFocusLensSubjectDistance            ,0xffe42fd4) //  1 83%
NHSTUB(GetFocusLensSubjectDistanceFromLens    ,0xffe434d8) //  2 92%
NHSTUB(GetParameterData                       ,0xffea9740) //  1 86%
NHSTUB(GetPropertyCase                        ,0xffc0b79c) //  2 89%
NHSTUB(GetSystemTime                          ,0xffc03398) //  1 96%
NHSTUB(PutInNdFilter                          ,0xffddc34c) //  1 92%
NHSTUB(PutOutNdFilter                         ,0xffddc394) //  1 94%
//NHSTUB(Remove                               ,0xffd48920) //  3 52%
NHSTUB(Restart                                ,0xffc0b250) //  1 96%
NHSTUB(SetFileAttributes                      ,0xffe1d9f8) //  1 65%
NHSTUB(SetParameterData                       ,0xffea9660) //  1 86%
NHSTUB(SetPropertyCase                        ,0xffc0b664) //  3 96%
NHSTUB(UnsetZoomForMovie                      ,0xffc22b44) //  1 89%
NHSTUB(WriteSDCard                            ,0xffe2f988) //  3 74%
NHSTUB(add_ptp_handler                        ,0xffd7c06c) //  1 96%
NHSTUB(exmem_alloc                            ,0xffc0ddb4) //  2 93%
// ERROR: free is not found.                               //--- ---    *** != 0xffccc760
NHSTUB(kbd_p2_f                               ,0xffdc3ff4) //  1 56%
NHSTUB(kbd_read_keys_r2                       ,0xffdc4ac8) //  3 95%
//NHSTUB(kbd_pwr_off                          ,0xffdc2fa0) //  1 83%    *** != 0x00000000
// ALT: NHSTUB(kbd_pwr_off, 0xffdc2fbc) // 1 5/1
//NHSTUB(kbd_pwr_on                           ,0xffdbb858) //  1 55%    *** != 0x00000000
// ALT: NHSTUB(kbd_pwr_on, 0xffdbb884) // 1 5/4
NHSTUB(malloc                                 ,0xffccc754) //  1 53%
NHSTUB(mkdir                                  ,0xffe1da28) //  1 54%
// ALT: NHSTUB(mkdir, 0xffe1daf0) // 1 17/14
NHSTUB(taskIdListGet                          ,0xffcd689c) //  1 82%
NHSTUB(utime                                  ,0xffebfc2c) //  1 57%
NHSTUB(localtime                              ,0xffcc556c) //  1 93%
NHSTUB(Mount_FileSystem                       ,0xffe1caf4) //  3 93%
NHSTUB(MakeAFScan                             ,0xffe70024) //  2 86%

// Check of modemap from 'platform/CAMERA/shooting.c':
// Firmware modemap table found @ffeab860 -> ffeab860
// Mode 33290 in firmware but not in current modemap

// Values below can be overridden in 'stubs_min.S':
//DEF(levent_table                            ,0xffe9ec88) // Found @0xffe9ec88,          stubs_min = 0xffe9ec88 (0xFFE9EC88)
//DEF(FlashParamsTable                        ,0xffeada5c) // Found @0xffeada5c,          stubs_min = 0xffeada5c (0xFFEADA5C)

// Values below go in 'lib.c':
//int get_flash_params_count(void) { return 0x6f; }                          // Found @0xffea97ac

// Misc stuff
// LED table init @ 0xffdc3914
// LED #1: 0xc022008c, offset 0x4
// LED #2: 0xc0220088, offset 0x44
// LED #3: 0xc0220090, offset 0x84
// LED #4: 0xc0220084, offset 0x204
// LED #5: 0xc0220080, offset 0x244

// canon_data_src: 0xffeef370, canon_data_len: 0xcb60

// Stubs below matched 100%.
//    Name                                     Address                Comp to stubs_entry_2.S
NHSTUB(AllocateUncacheableMemory              ,0xffc0e0a8) //  1
NHSTUB(Close                                  ,0xffe1d7d0) //120
NHSTUB(CreateTask                             ,0xffe83538) //120
NHSTUB(DebugAssert                            ,0xffe8f444) //1100
NHSTUB(DeleteFile_Fut                         ,0xffe18da8) //  1
NHSTUB(DoAELock                               ,0xffe6b284) //120
NHSTUB(DoAFLock                               ,0xffe6aec4) //120
NHSTUB(ExecuteEventProcedure                  ,0xffc04670) //  1
NHSTUB(ExitFromCompensationEVF                ,0xffe6b17c) //  3
NHSTUB(ExitTask                               ,0xffe838f8) //120
NHSTUB(Fclose_Fut                             ,0xffe18f1c) //120
NHSTUB(Feof_Fut                               ,0xffe19118) //  3
NHSTUB(Fflush_Fut                             ,0xffe19154) //  3
NHSTUB(Fgets_Fut                              ,0xffe19080) //  3
NHSTUB(Fopen_Fut                              ,0xffe18edc) //120
NHSTUB(Fread_Fut                              ,0xffe18fd8) //120
NHSTUB(Fseek_Fut                              ,0xffe190cc) //120
NHSTUB(Fwrite_Fut                             ,0xffe1902c) //120
//NHSTUB(GetBatteryTemperature                ,0xffdc7d84) //102            == 0xffdc7d84
NHSTUB(GetCCDTemperature                      ,0xffdc7d70) //102
NHSTUB(GetCurrentAvValue                      ,0xffddc168) //120
NHSTUB(GetDrive_ClusterSize                   ,0xffe1cfbc) //119
NHSTUB(GetDrive_FreeClusters                  ,0xffe1d034) //1103
NHSTUB(GetDrive_TotalClusters                 ,0xffe1cff8) //119
NHSTUB(GetOpticalTemperature                  ,0xffdc7d5c) //120
NHSTUB(GetZoomLensCurrentPoint                ,0xffe5503c) //120
NHSTUB(GetZoomLensCurrentPosition             ,0xffe55050) //102
NHSTUB(GiveSemaphore                          ,0xffe83104) //120
NHSTUB(IsStrobeChargeCompleted                ,0xffd45b54) //  2
NHSTUB(LEDDrive                               ,0xffdc3528) //120
NHSTUB(LocalTime                              ,0xffe8fd58) //115
NHSTUB(LockMainPower                          ,0xffea65dc) //120
NHSTUB(MakeDirectory_Fut                      ,0xffe18e5c) //  3
NHSTUB(MoveFocusLensToDistance                ,0xffdde778) //102
NHSTUB(MoveIrisWithAv                         ,0xffe49cac) //120
NHSTUB(MoveZoomLensWithPoint                  ,0xffe54f14) //120
NHSTUB(Open                                   ,0xffe1d7a8) //120
NHSTUB(PT_MoveDigitalZoomToWide               ,0xffe7af2c) //120
NHSTUB(PT_MoveOpticalZoomAt                   ,0xffe7aef0) //120
NHSTUB(PT_PlaySound                           ,0xffe7a9f0) //  3
NHSTUB(PostLogicalEventForNotPowerType        ,0xffea21f4) //120
NHSTUB(PostLogicalEventToUI                   ,0xffea2270) //120
NHSTUB(Read                                   ,0xffe1d864) //120
NHSTUB(RefreshPhysicalScreen                  ,0xffcb9180) //120
NHSTUB(RenameFile_Fut                         ,0xffe18d00) //  3
NHSTUB(SetAE_ShutterSpeed                     ,0xffde17ac) //102
NHSTUB(SetAutoShutdownTime                    ,0xffea64e0) //120
NHSTUB(SetCurrentCaptureModeType              ,0xffc17b90) //120
NHSTUB(SetLogicalEventActive                  ,0xffea40ec) //1104
//NHSTUB(SetScriptMode                        ,0xffea4154) //120            == 0xffea4154
NHSTUB(SleepTask                              ,0xffe8344c) //120
NHSTUB(TakeSemaphore                          ,0xffe82efc) //1101
NHSTUB(TurnOffBackLight                       ,0xffc2e3e8) //  2
NHSTUB(TurnOnBackLight                        ,0xffc2e3b8) //  2
NHSTUB(TurnOnDisplay                          ,0xffdb9628) //120
NHSTUB(TurnOffDisplay                         ,0xffdb9638) //120
NHSTUB(UnlockAE                               ,0xffe6b2d4) //120
NHSTUB(UnlockAF                               ,0xffe6af44) //120
NHSTUB(UnlockMainPower                        ,0xffea6674) //120
NHSTUB(UpdateMBROnFlash                       ,0xffe1ccf0) //  1
NHSTUB(VbattGet                               ,0xffdc17a8) //120
NHSTUB(Write                                  ,0xffe1d870) //120
NHSTUB(_log                                   ,0xffebe410) //121
NHSTUB(_log10                                 ,0xffebd890) //121
NHSTUB(_pow                                   ,0xffcbd0c4) //121
NHSTUB(_sqrt                                  ,0xffcbee4c) //  1
NHSTUB(apex2us                                ,0xffcddbdc) //  1
NHSTUB(close                                  ,0xffcc9714) //109
NHSTUB(exmem_free                             ,0xffc0e004) //102
NHSTUB(kbd_p1_f                               ,0xffdc3bcc) //  1
NHSTUB(kbd_p1_f_cont                          ,0xffdc3bd8) //109
NHSTUB(lseek                                  ,0xffcc9858) //  1
NHSTUB(memcmp                                 ,0xffcc494c) //120
NHSTUB(memcpy                                 ,0xffcc4988) //120
NHSTUB(memset                                 ,0xffcc4a00) //120
NHSTUB(open                                   ,0xffcc9d58) //109
NHSTUB(closedir                               ,0xffebfad0) //  1
NHSTUB(qsort                                  ,0xffcc41ac) //  1
NHSTUB(rand                                   ,0xffcc41d0) //  1
NHSTUB(realloc                                ,0xffe8f050) //115
NHSTUB(srand                                  ,0xffcc41f4) //  1
NHSTUB(stat                                   ,0xffebfb98) //  1
NHSTUB(strcat                                 ,0xffcc4a20) //  1
NHSTUB(strchr                                 ,0xffcc4a4c) //  1
NHSTUB(strcmp                                 ,0xffcc4a70) //120
NHSTUB(strcpy                                 ,0xffcc4c04) //120
NHSTUB(strftime                               ,0xffcc628c) //  1
NHSTUB(strlen                                 ,0xffcc4d68) //120
NHSTUB(strncmp                                ,0xffcc4dcc) //  1
NHSTUB(strncpy                                ,0xffcc4e10) //  1
NHSTUB(strrchr                                ,0xffcc4e94) //  1
NHSTUB(strtol                                 ,0xffcc45e8) //  1
NHSTUB(isdigit                                ,0xffcc0d1c) //  1
NHSTUB(isspace                                ,0xffcc0d94) //  1
NHSTUB(isalpha                                ,0xffcc0cec) //  1
NHSTUB(isupper                                ,0xffcc0dac) //  1
NHSTUB(islower                                ,0xffcc0d4c) //  1
NHSTUB(ispunct                                ,0xffcc0d7c) //  1
NHSTUB(isxdigit                               ,0xffcc0dc4) //  1
NHSTUB(toupper                                ,0xffcc0dec) //  1
NHSTUB(tolower                                ,0xffcc0ddc) //  1
NHSTUB(taskLock                               ,0xffcd6f58) //  1
NHSTUB(taskUnlock                             ,0xffcd7000) //  1
NHSTUB(taskName                               ,0xffcd6794) //  1
NHSTUB(errnoOfTaskGet                         ,0xffcc7368) //  1
NHSTUB(readdir                                ,0xffebfa9c) //  1
NHSTUB(strtoul                                ,0xffcc4790) //  1
NHSTUB(strpbrk                                ,0xffcc4e58) //  1
NHSTUB(mktime                                 ,0xffcc5734) //  1
NHSTUB(opendir                                ,0xffebfb04) //  1
NHSTUB(memchr                                 ,0xffcc4918) //  1
NHSTUB(memPartInfoGet                         ,0xffcccb74) //  1
NHSTUB(iosDrvInstall                          ,0xffccabf8) //  1
NHSTUB(iosDevAdd                              ,0xffcca934) //  1
NHSTUB(iosDevDelete                           ,0xffcca90c) //  1
NHSTUB(GetCurrentTargetDistance               ,0xffdde4e0) //  1
NHSTUB(taskCreateHookAdd                      ,0xffccf3b4) //  1
NHSTUB(taskDeleteHookAdd                      ,0xffccf2f0) //  1
NHSTUB(Unmount_FileSystem                     ,0xffe1cb9c) //  1
NHSTUB(taskSuspend                            ,0xffcd69a4) //  1
NHSTUB(taskResume                             ,0xffcd6b78) //  1
NHSTUB(time                                   ,0xffcc62b8) //  1
NHSTUB(vsprintf                               ,0xffcc84bc) //115
NHSTUB(EngDrvRead                             ,0xffdcd664) //102
