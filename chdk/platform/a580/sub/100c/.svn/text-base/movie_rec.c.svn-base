

//** MovieRecord_Task_my  @ 0xFFC46678 

void __attribute__((naked,noinline)) MovieRecord_Task_my(  ) { 
asm volatile (
      "STMFD   SP!, {R2-R8,LR}\n"
      "LDR     R8, =0x32B\n"
      "LDR     R7, =0x2710\n"
      "LDR     R4, =0x5178\n"
      "MOV     R6, #0\n"
      "MOV     R5, #1\n"
"loc_FFC46690:\n"
      "LDR     R0, [R4, #0x18]\n"
      "MOV     R2, #0\n"
      "ADD     R1, SP, #4\n"
      "BL      sub_FFC1764C\n"
      "LDR     R0, [R4, #0x20]\n"
      "CMP     R0, #0\n"
      "BNE     loc_FFC46760\n"
      "LDR     R0, [SP, #4]\n"
      "LDR     R1, [R0]\n"
      "SUB     R1, R1, #2\n"
      "CMP     R1, #9\n"
      "ADDLS   PC, PC, R1, LSL #2\n"
      "B       loc_FFC46760\n"
      "B       loc_FFC46714\n"
      "B       loc_FFC46734\n"
      "B       loc_FFC46744\n"
      "B       loc_FFC4674C\n"
      "B       loc_FFC4671C\n"
      "B       loc_FFC46754\n"
      "B       loc_FFC46724\n"
      "B       loc_FFC46760\n"
      "B       loc_FFC4675C\n"
      "B       loc_FFC466EC\n"
"loc_FFC466EC:\n"
      "LDR     R0, =0xFFC46374\n"
      "STR     R6, [R4, #0x34]\n"
      "STR     R0, [R4, #0xA0]\n"
      "LDR     R0, =0xFFC45DEC\n"
      "LDR     R2, =0xFFC45D08\n"
      "LDR     R1, =0x180AC\n"
      "STR     R6, [R4, #0x24]\n"
      "BL      sub_FFCA2C98\n"
      "STR     R5, [R4, #0x38]\n"
      "B       loc_FFC46760\n"
"loc_FFC46714:\n"
      "BL      unlock_optical_zoom\n" //+
      "BL      sub_FFC4646C\n"
      "B       loc_FFC46760\n"
"loc_FFC4671C:\n"
//      "BL      sub_FFC46174\n"  //original
      "BL      sub_FFC46174_my\n" //patch
      "B       loc_FFC46760\n"
"loc_FFC46724:\n"
      "LDR     R1, [R0, #0x10]\n"
      "LDR     R0, [R0, #4]\n"
      "BL      sub_FFD0B0D4\n"
      "B       loc_FFC46760\n"
"loc_FFC46734:\n"
      "LDR     R0, [R4, #0x38]\n"
      "CMP     R0, #5\n"
      "STRNE   R5, [R4, #0x28]\n"
      "B       loc_FFC46760\n"
"loc_FFC46744:\n"
      "BL      sub_FFC45F7C\n"
      "B       loc_FFC46760\n"
"loc_FFC4674C:\n"
      "BL      sub_FFC45E38\n"
      "B       loc_FFC46760\n"
"loc_FFC46754:\n"
      "BL      sub_FFC45C94\n"
      "B       loc_FFC46760\n"
"loc_FFC4675C:\n"
      "BL      sub_FFC468C8\n"
"loc_FFC46760:\n"
      "LDR     R1, [SP, #4]\n"
      "LDR     R3, =0xFFC45AFC\n" // aMovierecorder_
      "STR     R6, [R1]\n"
      "STR     R8, [SP]\n"
      "LDR     R0, [R4, #0x1C]\n"
      "MOV     R2, R7\n"
      "BL      sub_FFC0BCF8\n"
      "B       loc_FFC46690\n"
	);
}


//** sub_FFC46174_my  @ 0xFFC46174 

void __attribute__((naked,noinline)) sub_FFC46174_my() {
asm volatile (
      "STMFD   SP!, {R4-R8,LR}\n"
      "SUB     SP, SP, #0x40\n"
      "MOV     R6, #0\n"
      "LDR     R5, =0x5178\n"
      "MOV     R4, R0\n"
      "STR     R6, [SP, #0x30]\n"
      "STR     R6, [SP, #0x28]\n"
      "LDR     R0, [R5, #0x38]\n"
      "MOV     R8, #4\n"
      "CMP     R0, #3\n"
      "STREQ   R8, [R5, #0x38]\n"
      "LDR     R0, [R5, #0xA0]\n"
      "BLX     R0\n"
      "LDR     R0, [R5, #0x38]\n"
      "CMP     R0, #4\n"
      "BNE     loc_FFC4624C\n"
      "ADD     R3, SP, #0x28\n"
      "ADD     R2, SP, #0x2C\n"
      "ADD     R1, SP, #0x30\n"
      "ADD     R0, SP, #0x34\n"
      "BL      sub_FFD0B268\n"
      "CMP     R0, #0\n"
      "MOV     R7, #1\n"
      "BNE     loc_FFC461F0\n"
      "LDR     R1, [R5, #0x28]\n"
      "CMP     R1, #1\n"
      "BNE     loc_FFC46254\n"
      "LDR     R1, [R5, #0x50]\n"
      "LDR     R2, [R5, #0x3C]\n"
      "CMP     R1, R2\n"
      "BCC     loc_FFC46254\n"
"loc_FFC461F0:\n"
      "CMP     R0, #0x80000001\n"
      "STREQ   R8, [R5, #0x54]\n"
      "BEQ     loc_FFC46228\n"
      "CMP     R0, #0x80000003\n"
      "STREQ   R7, [R5, #0x54]\n"
      "BEQ     loc_FFC46228\n"
      "CMP     R0, #0x80000005\n"
      "MOVEQ   R0, #2\n"
      "BEQ     loc_FFC46224\n"
      "CMP     R0, #0x80000007\n"
      "STRNE   R6, [R5, #0x54]\n"
      "BNE     loc_FFC46228\n"
      "MOV     R0, #3\n"
"loc_FFC46224:\n"
      "STR     R0, [R5, #0x54]\n"
"loc_FFC46228:\n"
      "LDR     R0, =0x180DC\n"
      "LDR     R0, [R0, #8]\n"
      "CMP     R0, #0\n"
      "BEQ     loc_FFC46240\n"
      "BL      sub_FFC32918\n"
      "B       loc_FFC46244\n"
"loc_FFC46240:\n"
      "BL      sub_FFC45C94\n"
"loc_FFC46244:\n"
      "MOV     R0, #5\n"
      "STR     R0, [R5, #0x38]\n"
"loc_FFC4624C:\n"
      "ADD     SP, SP, #0x40\n"
      "LDMFD   SP!, {R4-R8,PC}\n"
"loc_FFC46254:\n"
      "LDR     LR, [SP, #0x30]\n"
      "CMP     LR, #0\n"
      "BEQ     loc_FFC4631C\n"
      "STR     R7, [R5, #0x2C]\n"
      "LDR     R0, [R5, #0x6C]\n"
      "LDR     R1, [R4, #0x14]\n"
      "LDR     R2, [R4, #0x18]\n"
      "LDR     R12, [R4, #0xC]\n"
      "ADD     R3, SP, #0x38\n"
      "ADD     R8, SP, #0x14\n"
      "STMIA   R8, {R0-R3}\n"
      "LDR     R3, [R5, #0x58]\n"
      "ADD     R2, SP, #0x3C\n"
      "ADD     R8, SP, #8\n"
      "LDRD    R0, [SP, #0x28]\n"
      "STMIA   R8, {R0,R2,R3}\n"
      "STR     R1, [SP, #4]\n"
      "STR     LR, [SP]\n"
      "LDMIB   R4, {R0,R1}\n"
      "LDR     R3, [SP, #0x34]\n"
      "MOV     R2, R12\n"
      "BL      sub_FFCC99E4\n"
      "LDR     R0, [R5, #0x10]\n"
      "MOV     R1, #0x3E8\n"
      "BL      _TakeSemaphore \n"
      "CMP     R0, #9\n"
      "BNE     loc_FFC462D0\n"
      "BL      sub_FFD0B844\n"
      "MOV     R0, #0x90000\n"
      "STR     R7, [R5, #0x38]\n"
      "B       loc_FFC462E8\n"
"loc_FFC462D0:\n"
      "LDR     R0, [SP, #0x38]\n"
      "CMP     R0, #0\n"
      "BEQ     loc_FFC462F0\n"
      "BL      sub_FFD0B844\n"
      "MOV     R0, #0xA0000\n"
      "STR     R7, [R5, #0x38]\n"
"loc_FFC462E8:\n"
      "BL      sub_FFC5CAA4\n"  // HardwareDefect
      "B       loc_FFC4624C\n"
"loc_FFC462F0:\n"
      "BL      sub_FFCC9AA8\n"
      "LDR     R0, [SP, #0x34]\n"
      "LDR     R1, [SP, #0x3C]\n"
      "BL      sub_FFD0B5EC\n"
      "LDR     R0, [R5, #0x4C]\n"
      "LDR     R1, =0x51E4\n"
      "ADD     R0, R0, #1\n"
      "STR     R0, [R5, #0x4C]\n"
      "LDR     R0, [SP, #0x3C]\n"
      "MOV     R2, #0\n"
//      "BL      sub_FFD0947C\n"  //original
      "BL      sub_FFD0947C_my\n" //patch
"loc_FFC4631C:\n"
      "LDR     R0, [R5, #0x50]\n"
      "ADD     R0, R0, #1\n"
      "STR     R0, [R5, #0x50]\n"
      "LDR     R1, [R5, #0x78]\n"
      "MUL     R0, R1, R0\n"
      "LDR     R1, [R5, #0x74]\n"
      "BL      sub_FFE5A61C\n"
      "MOV     R4, R0\n"
      "BL      sub_FFD0B87C\n"
      "LDR     R1, [R5, #0x70]\n"
      "CMP     R1, R4\n"
      "BNE     loc_FFC46358\n"
      "LDR     R0, [R5, #0x30]\n"
      "CMP     R0, #1\n"
      "BNE     loc_FFC4636C\n"
"loc_FFC46358:\n"
      "LDR     R1, [R5, #0x84]\n"
      "MOV     R0, R4\n"
      "BLX     R1\n"
      "STR     R4, [R5, #0x70]\n"
      "STR     R6, [R5, #0x30]\n"
"loc_FFC4636C:\n"
      "STR     R6, [R5, #0x2C]\n"
      "B       loc_FFC4624C\n"
	);
}


//** sub_FFD0947C_my  @ 0xFFD0947C 

void __attribute__((naked,noinline)) sub_FFD0947C_my(  ) { 
asm volatile (
      "STMFD   SP!, {R4-R8,LR}\n"
      "LDR     R4, =0x7F7C\n"
      "LDR     LR, [R4]\n"
      "LDR     R2, [R4, #8]\n"
      "CMP     LR, #0\n"
      "LDRNE   R3, [R4, #0xC]\n"
      "MOV     R5, R2\n"
      "CMPNE   R3, #1\n"
      "MOVEQ   R2, #0\n"
      "STREQ   R0, [R4]\n"
      "STREQ   R2, [R4, #0xC]\n"
      "BEQ     loc_FFD09548\n"
      "LDR     R3, [R4, #4]\n"
//      "LDR     R7, =0xFFE7818C\n" //original
      "LDR     R7, =table\n"        //patch
      "ADD     R12, R3, R3, LSL #1\n"
      "LDR     R3, [R7, R12, LSL #2]\n"
      "ADD     R6, R7, #0x30\n"
      "LDR     R8, [R6, R12, LSL #2]\n"
      "SUB     R3, LR, R3\n"
      "CMP     R3, #0\n"
      "SUB     LR, LR, R8\n"
      "BLE     loc_FFD09504\n"
      "ADD     R12, R7, R12, LSL #2\n"
      "LDR     LR, [R12, #4]\n"
      "CMP     LR, R3\n"
      "ADDGE   R2, R2, #1\n"
      "BGE     loc_FFD094F8\n"
      "LDR     R12, [R12, #8]\n"
      "CMP     R12, R3\n"
      "ADDLT   R2, R2, #3\n"
      "ADDGE   R2, R2, #2\n"
"loc_FFD094F8:\n"
//      "CMP     R2, #0x17\n"   //original
//      "MOVGE   R2, #0x16\n"   //original
      "CMP     R2, #0x1A\n"		// +
      "MOVGE   R2, #0x19\n"		// +
      "B       loc_FFD09538\n"
"loc_FFD09504:\n"
      "CMP     LR, #0\n"
      "BGE     loc_FFD09538\n"
      "ADD     R3, R6, R12, LSL #2\n"
      "LDR     R12, [R3, #4]\n"
      "CMP     R12, LR\n"
      "SUBLE   R2, R2, #1\n"
      "BLE     loc_FFD09530\n"
      "LDR     R3, [R3, #8]\n"
      "CMP     R3, LR\n"
      "SUBGT   R2, R2, #3\n"
      "SUBLE   R2, R2, #2\n"
"loc_FFD09530:\n"
      "CMP     R2, #0\n"
      "MOVLT   R2, #0\n"
"loc_FFD09538:\n"
      "CMP     R2, R5\n"
      "STRNE   R2, [R4, #8]\n"
      "MOVNE   R2, #1\n"
      "STRNE   R2, [R4, #0xC]\n"
"loc_FFD09548:\n"
//      "LDR     R2, =0xFFE78130\n"   //original
      "LDR     R2, =CompressionRateTable\n"	// unk_FFE7812C
      "LDR     R3, [R4, #8]\n"
      "LDR     R2, [R2, R3, LSL #2]\n"
                
      "LDR     R3, =video_mode\n"      // +
      "LDR     R3, [R3]\n"             // +
      "LDR     R3, [R3]\n"             // +
      "CMP     R3, #1\n"               // +
      "LDREQ   R3, =video_quality\n"   // +
      "LDREQ   R3, [R3]\n"             // +
      "LDREQ   R2, [R3]\n"             // +

      "STR     R2, [R1]\n"
      "STR     R0, [R4]\n"
      "BL      mute_on_zoom\n"		// +
      "LDMFD   SP!, {R4-R8,PC}\n"
	);
}

#include "conf.h"

int *video_quality = &conf.video_quality;
int *video_mode    = &conf.video_mode;

long def_table[24]={0x2000, 0x38D, 0x788, 0x5800, 0x9C5, 0x14B8, 0x10000, 0x1C6A, 0x3C45, 0x8000, 0xE35, 0x1E23,
           0x1CCD, -0x2E1, -0x579, 0x4F33, -0x7EB, -0xF0C, 0xE666, -0x170A, -0x2BC6, 0x7333, -0xB85, -0x15E3};

long table[24];

void change_video_tables(int a, int b){
 int i;
 for (i=0;i<24;i++) table[i]=(def_table[i]*a)/b;
}

long CompressionRateTable[]={0x60, 0x5D, 0x5A, 0x57, 0x54, 0x51, 0x4D, 0x48, 0x42, 0x3B, 0x32, 0x29, 0x22, 0x1D, 0x17, 0x14, 0x10, 0xE, 0xB, 9, 7, 6, 5, 4, 3, 2, 1};
