
#include "lolevel.h"
#include "platform.h"
#include "core.h"
#include "conf.h"

//JS
//found at 0xFFD1B5D0
static long *nrflag = (long*)0x8C64;

#include "../../../generic/capt_seq.c"

void __attribute__((naked,noinline)) capt_seq_task() {
 asm volatile (
			"STMFD 	SP!, {R3-R7,LR}\n"
			"LDR 	R6, =0x5368\n"
				
		"loc_FFC503B8:\n"		
			"LDR 	R0, [R6,#0x10]\n"
			"MOV 	R2, #0\n"
			"MOV 	R1, SP\n"
			"BL 	sub_FFC16FF0\n"
			"TST 	R0, #1\n"
			"BEQ 	loc_FFC503E4\n"
			"LDR 	R1, =0x539\n"
			"LDR 	R0, =0xFFC4FC88\n"
			"BL 	sub_FFC0BD98\n"			//DebugAssert
			"BL 	sub_ffc0bb50 \n"		//eventproc_export_ExitTask
			"LDMFD 	SP!, {R3-R7,PC}\n"
				
		"loc_FFC503E4:\n"		
			"LDR 	R0, [SP,#0x18-0x18]\n"
			"LDR 	R1, [R0]\n"
			"CMP 	R1, #0x22\n"
			"ADDLS 	PC, PC, R1,LSL#2\n"
			"B 	loc_FFC505EC\n"
				
		"loc_FFC503F8:\n"		
			"B 	loc_FFC50484\n"
				
		"loc_FFC503FC:\n"		
			"B 	loc_FFC5048C\n"
				
		"loc_FFC50400:\n"		
			"B 	loc_FFC50494\n"
				
		"loc_FFC50404:\n"		
			"B 	loc_FFC504A8\n"
				
		"loc_FFC50408:\n"		
			"B 	loc_FFC504A0\n"
				
		"loc_FFC5040C:\n"		
			"B 	loc_FFC504B0\n"
				
		"loc_FFC50410:\n"		
			"B 	loc_FFC504B8\n"
				
		"loc_FFC50414:\n"		
			"B 	loc_FFC504C4\n"
				
		"loc_FFC50418:\n"		
			"B 	loc_FFC5051C\n"
				
		"loc_FFC5041C:\n"		
			"B 	loc_FFC504A8\n"
				
		"loc_FFC50420:\n"		
			"B 	loc_FFC50524\n"
				
		"loc_FFC50424:\n"		
			"B 	loc_FFC50534\n"
				
		"loc_FFC50428:\n"		
			"B 	loc_FFC5053C\n"
				
		"loc_FFC5042C:\n"		
			"B 	loc_FFC50544\n"
				
		"loc_FFC50430:\n"		
			"B 	loc_FFC5054C\n"
				
		"loc_FFC50434:\n"		
			"B 	loc_FFC50554\n"
				
		"loc_FFC50438:\n"		
			"B 	loc_FFC5055C\n"
				
		"loc_FFC5043C:\n"		
			"B 	loc_FFC50564\n"
				
		"loc_FFC50440:\n"		
			"B 	loc_FFC5056C\n"
				
		"loc_FFC50444:\n"		
			"B 	loc_FFC50574\n"
				
		"loc_FFC50448:\n"		
			"B 	loc_FFC5057C\n"
				
		"loc_FFC5044C:\n"		
			"B 	loc_FFC50584\n"
				
		"loc_FFC50450:\n"		
			"B 	loc_FFC5058C\n"
				
		"loc_FFC50454:\n"		
			"B 	loc_FFC50594\n"
				
		"loc_FFC50458:\n"		
			"B 	loc_FFC505A0\n"
				
		"loc_FFC5045C:\n"		
			"B 	loc_FFC505A8\n"
				
		"loc_FFC50460:\n"		
			"B 	loc_FFC505B4\n"
				
		"loc_FFC50464:\n"		
			"B 	loc_FFC505BC\n"
				
		"loc_FFC50468:\n"		
			"B 	loc_FFC505C4\n"
				
		"loc_FFC5046C:\n"		
			"B 	loc_FFC505CC\n"
				
		"loc_FFC50470:\n"		
			"B 	loc_FFC505D4\n"
				
		"loc_FFC50474:\n"		
			"B 	loc_FFC505DC\n"
				
		"loc_FFC50478:\n"		
			"B 	loc_FFC505E4\n"
				
		"loc_FFC5047C:\n"		
			"B 	loc_FFC505F8\n"
				
		"loc_FFC50480:\n"		
			"B 	loc_FFC505F8\n"
				
		"loc_FFC50484:\n"		
				
			"BL 	sub_FFC50C44\n"
			"BL      shooting_expo_param_override\n"  // ---------------> inserted
			
			"B 	loc_FFC504BC\n"
				
		"loc_FFC5048C:\n"		
				
			"BL 	sub_FFC4FD38_my\n"		//-------> changed
			"B 	loc_FFC505F8\n"
				
		"loc_FFC50494:\n"		
				
			"MOV 	R0, #1\n"
			"BL 	sub_FFC50DE0\n"
			"B 	loc_FFC505F8\n"
				
		"loc_FFC504A0:\n"		
				
			"BL 	sub_FFC50928\n"
			"B 	loc_FFC505F8\n"
				
		"loc_FFC504A8:\n"		
				
			"BL 	sub_FFC50C24\n"
			"B 	loc_FFC505F8\n"
				
		"loc_FFC504B0:\n"		
				
			"BL 	sub_FFC50C2C\n"
			"B 	loc_FFC505F8\n"
				
		"loc_FFC504B8:\n"		
				
			"BL 	sub_FFC50D00\n"
				
		"loc_FFC504BC:\n"		
				
			"BL 	sub_FFC4E33C\n"
			"B 	loc_FFC505F8\n"
				
		"loc_FFC504C4:\n"		
				
			"LDR 	R4, [R0,#0xC]\n"
			"BL 	sub_FFC50C34\n"
			"MOV 	R0, R4\n"
			"BL 	sub_FFD1A490\n"
			"TST 	R0, #1\n"
			"MOV 	R5, R0\n"
			"BNE 	loc_FFC50504\n"
			"BL 	sub_FFC5F430\n"
			"STR 	R0, [R4,#0x18]\n"
			"MOV 	R0, R4\n"
			"BL 	sub_FFD1B498\n"
			"MOV 	R0, R4\n"
			"BL 	sub_FFD1BA7C\n"
			"MOV 	R5, R0\n"
			"LDR 	R0, [R4,#0x18]\n"
			"BL 	sub_FFC5F644\n"
				
		"loc_FFC50504:\n"		
			"BL 	sub_FFC50C24\n"
			"MOV 	R2, R4\n"
			"MOV 	R1, #9\n"
			"MOV 	R0, R5\n"
			"BL 	sub_FFC4E718\n"
			"B 	loc_FFC505F8\n"
				
		"loc_FFC5051C:\n"		
				
			"BL 	sub_FFC50D60\n"
			"B 	loc_FFC504BC\n"
				
		"loc_FFC50524:\n"		
				
			"LDR 	R0, =0x1940C\n"
			"LDR 	R0, [R0,#0x4C]\n"
			"BL 	sub_FFC5130C\n"
			"B 	loc_FFC505F8\n"
				
		"loc_FFC50534:\n"		
				
			"BL 	sub_FFC515B4\n"
			"B 	loc_FFC505F8\n"
				
		"loc_FFC5053C:\n"		
				
			"BL 	sub_FFC51640\n"
			"B 	loc_FFC505F8\n"
				
		"loc_FFC50544:\n"		
				
			"BL 	sub_FFD1A6B4\n"
			"B 	loc_FFC505F8\n"
				
		"loc_FFC5054C:\n"		
				
			"BL 	sub_FFD1A89C\n"
			"B 	loc_FFC505F8\n"
				
		"loc_FFC50554:\n"		
				
			"BL 	sub_FFD1A92C\n"
			"B 	loc_FFC505F8\n"
				
		"loc_FFC5055C:\n"		
				
			"BL 	sub_FFD1A9D4\n"
			"B 	loc_FFC505F8\n"
				
		"loc_FFC50564:\n"		
				
			"BL 	sub_FFD1ABF4\n"
			"B 	loc_FFC505F8\n"
				
		"loc_FFC5056C:\n"		
				
			"BL 	sub_FFD1AC44\n"
			"B 	loc_FFC505F8\n"
				
		"loc_FFC50574:\n"		
				
			"MOV 	R0, #0\n"
			"B 	loc_FFC50598\n"
				
		"loc_FFC5057C:\n"		
				
			"BL 	sub_FFD1AE00\n"
			"B 	loc_FFC505F8\n"
				
		"loc_FFC50584:\n"		
				
			"BL 	sub_FFD1AE94\n"
			"B 	loc_FFC505F8\n"
				
		"loc_FFC5058C:\n"		
				
			"BL 	sub_FFD1AF58\n"
			"B 	loc_FFC505F8\n"
				
		"loc_FFC50594:\n"		
				
			"MOV 	R0, #1\n"
				
		"loc_FFC50598:\n"		
			"BL 	sub_FFD1ACC0\n"
			"B 	loc_FFC505F8\n"
				
		"loc_FFC505A0:\n"		
				
			"BL 	sub_FFC50FA8\n"
			"B 	loc_FFC505F8\n"
				
		"loc_FFC505A8:\n"		
				
			"BL 	sub_FFC50FD4\n"
			"BL 	sub_FFC50724\n"
			"B 	loc_FFC505F8\n"
				
		"loc_FFC505B4:\n"		
				
			"BL 	sub_FFD1AAF0\n"
			"B 	loc_FFC505F8\n"
				
		"loc_FFC505BC:\n"		
				
			"BL 	sub_FFD1AB84\n"
			"B 	loc_FFC505F8\n"
				
		"loc_FFC505C4:\n"		
				
			"BL 	sub_FFC4FC18\n"
			"B 	loc_FFC505F8\n"
				
		"loc_FFC505CC:\n"		
				
			"BL 	sub_FFC141F0\n"
			"B 	loc_FFC505F8\n"
				
		"loc_FFC505D4:\n"		
				
			"BL 	sub_FFC52C80\n"
			"B 	loc_FFC505F8\n"
				
		"loc_FFC505DC:\n"		
				
			"BL 	sub_FFC52C9C\n"
			"B 	loc_FFC505F8\n"
				
		"loc_FFC505E4:\n"		
				
			"BL 	sub_FFC52CAC\n"
			"B 	loc_FFC505F8\n"
				
		"loc_FFC505EC:\n"		
				
			"LDR 	R1, =0x65E\n"
			"LDR 	R0, =0xFFC4FC88 \n"
			"BL 	sub_FFC0BD98\n"			//DebugAssert
				
		"loc_FFC505F8:\n"		
				
			"LDR 	R0, [SP,#0x18-0x18]\n"
			"LDR 	R1, [R0,#4]\n"
			"LDR 	R0, [R6,#0xC]\n"
			"BL 	sub_FFC16D60\n"
			"LDR 	R4, [SP,#0x18-0x18]\n"
			"LDR 	R0, [R4,#8]\n"
			"CMP 	R0, #0\n"
			"LDREQ 	R1, =0x11D\n"
			"LDREQ 	R0, =0xFFC4FC88\n"
			"BLEQ 	sub_FFC0BD98\n"			//DebugAssert
			"MOV 	R0, #0\n"
			"STR 	R0, [R4,#8]\n"
			"B 	loc_FFC503B8\n"
 );
} 
//JSE


void __attribute__((naked,noinline)) sub_FFC4FD38_my(){ // 
 asm volatile(
 			"STMFD 	SP!, {R3-R7,LR}\n"
			"LDR 	R4, [R0,#0xC]\n"
			"LDR 	R5, =0x1940C\n"
			"LDR 	R0, [R4,#8]\n"
			"ORR 	R0, R0, #1\n"
			"STR 	R0, [R4,#8]\n"
			"LDRH 	R0, [R5,#0x8A]\n"
			"CMP 	R0, #3\n"
			"BEQ 	loc_FFC4FE08\n"
			"LDR 	R0, [R4,#0xC]\n"
			"CMP 	R0, #1\n"
			"BLS 	loc_FFC4FDB8\n"
			"LDRH 	R0, [R5,#0x88]\n"
			"CMP 	R0, #0\n"
			"BNE 	loc_FFC4FE08\n"
			"LDRH 	R0, [R5,#0x84]\n"
			"CMP 	R0, #2\n"
			"BNE 	loc_FFC4FDC4\n"
			"BL 	sub_FFC51094\n"
			"LDRH 	R0, [R5,#0x8A]\n"
			"CMP 	R0, #3\n"
			"BEQ 	loc_FFC4FE08\n"
			"LDR 	R0, [R4,#0xC]\n"
			"CMP 	R0, #1\n"
			"BLS 	loc_FFC4FDB8\n"
			"LDRH 	R0, [R5,#0x88]\n"
			"CMP 	R0, #0\n"
			"BNE 	loc_FFC4FE08\n"
			"LDRH 	R0, [R5,#0x84]\n"
			"CMP 	R0, #2\n"
			"BEQ 	loc_FFC4FDE8\n"
			"B 	loc_FFC4FDC4\n"
				
		"loc_FFC4FDB8:\n"		
				
			"LDRH 	R0, [R5,#0x88]\n"
			"CMP 	R0, #0\n"
			"BNE 	loc_FFC4FE08\n"
				
		"loc_FFC4FDC4:\n"		
				
			"LDRH 	R0, [R5,#0x84]\n"
			"CMP 	R0, #1\n"
			"BNE 	loc_FFC4FE08\n"
			"LDR 	R0, [R4,#0xC]\n"
			"CMP 	R0, #1\n"
			"BLS 	loc_FFC4FE08\n"
			"LDR 	R0, [R4,#0x10]\n"
			"CMP 	R0, #1\n"
			"BNE 	loc_FFC4FE08\n"
				
		"loc_FFC4FDE8:\n"		
			"LDR 	R3, =0x24D\n"
			"LDR 	R0, =0x5368\n"
			"STR 	R3, [SP,#0x18-0x18]\n"
			"LDR 	R0, [R0,#0xC]\n"
			"LDR 	R2, =0xEA60\n"
			"LDR 	R3, =0xFFC4FC88 \n"
			"MOV 	R1, #0x40000000\n"
			"BL 	sub_FFC5454C\n"
				
		"loc_FFC4FE08:\n"		
				
			"BL 	sub_FFC4FC18\n"
			"MOV 	R0, #2\n"
			"BL 	sub_FFC4B0D8\n"
			"BL 	sub_FFC50C34\n"
			"MOV 	R0, R4\n"
			"BL 	sub_FFC50F1C\n"
			"MOV 	R0, R4\n"
			"BL 	sub_FFD1A098\n"
			"CMP 	R0, #0\n"
			"MOV 	R0, R4\n"
			"BEQ 	loc_FFC4FE50\n"
			"BL 	sub_FFD1A1B0\n"
			"TST 	R0, #1\n"
			"MOVNE 	R2, R4\n"
			"LDMNEFD 	SP!, {R3-R7,LR}\n"
			"MOVNE 	R1, #1\n"
			"BNE 	sub_FFC4E718\n"
			"B 	loc_FFC4FE54\n"
				
		"loc_FFC4FE50:\n"		
			"BL 	sub_FFD1A120\n"
				
		"loc_FFC4FE54:\n"		
			"MOV 	R0, #0\n"
			"STR 	R0, [SP,#0x18-0x18]\n"
			"LDRH 	R0, [R5,#0x8A]\n"
			"MOV 	R2, #2\n"
			"MOV 	R1, SP\n"
			"CMP 	R0, #3\n"
			"LDRNE 	R0, [R4,#0xC]\n"
			"CMPNE 	R0, #1\n"
			"MOVHI 	R0, #1\n"
			"STRHI 	R0, [SP,#0x18-0x18]\n"
			"LDR 	R0, =0x123\n"
			"BL 	sub_FFC5F198  \n"		//PT_GetPropertyCaseString
			"BL 	sub_FFD38E3C\n"
			"BL 	sub_FFC5F430\n"
			"STR 	R0, [R4,#0x18]\n"
			"MOV 	R0, R4\n"
			"BL 	sub_FFD1B498\n"
			"BL 	sub_FFD1C114\n"
			"MOV 	R0, R4\n"
			"BL 	sub_FFD1B560_my\n"	//---------------> changed
			"MOV 	R6, R0\n"
			"BL		capt_seq_hook_raw_here\n"  //	----------> added
			"BL 	sub_FFC52C9C\n"
			"BL 	sub_FFC52CD8\n"
			"MOV 	R2, R4\n"
			"MOV 	R1, #1\n"
			"MOV 	R0, R6\n"
			"BL 	sub_FFC4E718\n"
			"BL 	sub_FFD1BA0C\n"
			"CMP 	R0, #0\n"
			"LDRNE 	R0, [R4,#8]\n"
			"ORRNE 	R0, R0, #0x2000\n"
			"STRNE 	R0, [R4,#8]\n"
			"LDRH 	R0, [R5,#0x8A]\n"
			"CMP 	R0, #3\n"
			"BEQ 	locret_FFC4FEFC\n"
			"LDRH 	R0, [R5,#0x88]\n"
			"CMP 	R0, #0\n"
			"LDREQH 	R0, [R5,#0x84]\n"
			"CMPEQ 	R0, #2\n"
			"MOVEQ 	R0, R4\n"
			"LDMEQFD 	SP!, {R3-R7,LR}\n"
			"BEQ 	sub_FFC510E8\n"
				
		"locret_FFC4FEFC:\n"		
			"LDMFD 	SP!, {R3-R7,PC}\n"
 );
}



void __attribute__((naked,noinline)) sub_FFD1B560_my(){ // 
 asm volatile(
		"STMFD 	SP!, {R1-R9,LR}\n"
		"MOV 	R4, R0\n"
		"BL 	sub_FFD1C274\n"
		"MOV 	R1, #0xFFFFFFFF\n"
		"BL 	sub_FFC16D94\n"
		"MOV 	R2, #4\n"
		"ADD 	R1, SP, #0x28-0x24\n"
		"MOV 	R0, #0x8A\n"
		"BL 	sub_FFC5F2A0 \n"			//PT_GetPropertyCaseString_0
		"TST 	R0, #1\n"
		"MOVNE 	R1, #0x360\n"
		"LDRNE 	R0, =0xFFD1B71C\n"
		"BLNE 	sub_FFC0BD98\n"		//DebugAssert
		"LDR 	R7, =0x194C4\n"
		"LDR 	R6, =0x1940C\n"
		"LDRSH 	R1, [R7,#0xE]\n"
		"LDR 	R0, [R6,#0x80]\n"
		"BL 	sub_FFCE495C\n"
		"BL 	sub_FFC387EC\n"			//GetCCDTemperature
		"LDR 	R3, =0x8C68\n"
		"STRH 	R0, [R4,#0x94]\n"
		"STR 	R3, [SP,#0x28-0x28]\n"
		"MOV 	R1, R0\n"
		"LDRH 	R0, [R6,#0x54]\n"
		"LDRSH 	R2, [R7,#0xC]\n"
		"SUB 	R3, R3, #4\n"
		"BL 	sub_FFD1C86C\n"
		"BL 	wait_until_remote_button_is_released\n"	//---------> changed
		"BL 	capt_seq_hook_set_nr\n"                     // -------> inserted
		"B 		sub_FFD1B5CC\n"                             // continue function in firmware
 );
}

//** exp_drv_task  @ 0xFFC8BDDC 

void __attribute__((naked,noinline)) exp_drv_task(  ) { 
asm volatile ( 
      "STMFD   SP!, {R4-R8,LR} \n"
      "SUB     SP, SP, #0x20 \n"
      "LDR     R8, =0xBB8 \n"
      "LDR     R7, =0x685C \n"
      "LDR     R5, =0x1E4C4 \n"
      "MOV     R0, #0 \n"
      "ADD     R6, SP, #0x10 \n"
      "STR     R0, [SP, #0xC] \n"
"loc_FFC8BDFC:\n"
      "LDR     R0, [R7, #0x20] \n"
      "MOV     R2, #0 \n"
      "ADD     R1, SP, #0x1C \n"
      "BL      sub_FFC16FF0 \n"
      "LDR     R0, [SP, #0xC] \n"
      "CMP     R0, #1 \n"
      "BNE     loc_FFC8BE44 \n"
      "LDR     R0, [SP, #0x1C] \n"
      "LDR     R0, [R0] \n"
      "CMP     R0, #0x13 \n"
      "CMPNE   R0, #0x14 \n"
      "CMPNE   R0, #0x15 \n"
      "BEQ     loc_FFC8BF60 \n"
      "CMP     R0, #0x27 \n"
      "BEQ     loc_FFC8BF38 \n"
      "ADD     R1, SP, #0xC \n"
      "MOV     R0, #0 \n"
      "BL      sub_FFC8BD8C \n"
"loc_FFC8BE44:\n"
      "LDR     R0, [SP, #0x1C] \n"
      "LDR     R1, [R0] \n"
      "CMP     R1, #0x2C \n"
      "BNE     loc_FFC8BE74 \n"
      "LDR     R0, [SP, #0x1C] \n"
      "BL      sub_FFC8D044 \n"
      "LDR     R0, [R7, #0x1C] \n"
      "MOV     R1, #1 \n"
      "BL      sub_FFC16D60 \n"
      "BL      sub_FFC0BB50 \n"
      "ADD     SP, SP, #0x20 \n"
      "LDMFD   SP!, {R4-R8,PC} \n"
"loc_FFC8BE74:\n"
      "CMP     R1, #0x2B \n"
      "BNE     loc_FFC8BE90 \n"
      "LDR     R2, [R0, #0x88]! \n"
      "LDR     R1, [R0, #4] \n"
      "MOV     R0, R1 \n"
      "BLX     R2 \n"
      "B       loc_FFC8C3C8 \n"
"loc_FFC8BE90:\n"
      "CMP     R1, #0x25 \n"
      "BNE     loc_FFC8BEE0 \n"
      "LDR     R0, [R7, #0x1C] \n"
      "MOV     R1, #0x80 \n"
      "BL      sub_FFC16D94 \n"
      "LDR     R0, =0xFFC88860 \n"
      "MOV     R1, #0x80 \n"
      "BL      sub_FFD0E5C4 \n"
      "LDR     R0, [R7, #0x1C] \n"
      "MOV     R2, R8 \n"
      "MOV     R1, #0x80 \n"
      "BL      sub_FFC16CA0 \n"
      "TST     R0, #1 \n"
      "LDRNE   R1, =0xD36 \n"
      "BNE     loc_FFC8BF24 \n"
"loc_FFC8BECC:\n"
      "LDR     R1, [SP, #0x1C] \n"
      "LDR     R0, [R1, #0x8C] \n"
      "LDR     R1, [R1, #0x88] \n"
      "BLX     R1 \n"
      "B       loc_FFC8C3C8 \n"
"loc_FFC8BEE0:\n"
      "CMP     R1, #0x26 \n"
      "BNE     loc_FFC8BF30 \n"
      "ADD     R1, SP, #0xC \n"
      "BL      sub_FFC8BD8C \n"
      "LDR     R0, [R7, #0x1C] \n"
      "MOV     R1, #0x100 \n"
      "BL      sub_FFC16D94 \n"
      "LDR     R0, =0xFFC88870 \n"
      "MOV     R1, #0x100 \n"
      "BL      sub_FFD0EF34 \n"
      "LDR     R0, [R7, #0x1C] \n"
      "MOV     R2, R8 \n"
      "MOV     R1, #0x100 \n"
      "BL      sub_FFC16CA0 \n"
      "TST     R0, #1 \n"
      "BEQ     loc_FFC8BECC \n"
      "MOV     R1, #0xD40 \n"
"loc_FFC8BF24:\n"
      "LDR     R0, =0xFFC88F60 \n"
      "BL      sub_FFC0BD98 \n"
      "B       loc_FFC8BECC \n"
"loc_FFC8BF30:\n"
      "CMP     R1, #0x27 \n"
      "BNE     loc_FFC8BF48 \n"
"loc_FFC8BF38:\n"
      "LDR     R0, [SP, #0x1C] \n"
      "ADD     R1, SP, #0xC \n"
      "BL      sub_FFC8BD8C \n"
      "B       loc_FFC8BECC \n"
"loc_FFC8BF48:\n"
      "CMP     R1, #0x2A \n"
      "BNE     loc_FFC8BF60 \n"
      "BL      sub_FFC76424 \n"
      "BL      sub_FFC770B0 \n"
      "BL      sub_FFC76BE8 \n"
      "B       loc_FFC8BECC \n"
"loc_FFC8BF60:\n"
      "LDR     R0, [SP, #0x1C] \n"
      "MOV     R4, #1 \n"
      "LDR     R1, [R0] \n"
      "CMP     R1, #0x11 \n"
      "CMPNE   R1, #0x12 \n"
      "BNE     loc_FFC8BFD0 \n"
      "LDR     R1, [R0, #0x7C] \n"
      "ADD     R1, R1, R1, LSL #1 \n"
      "ADD     R1, R0, R1, LSL #2 \n"
      "SUB     R1, R1, #8 \n"
      "LDMIA   R1, {R2-R4} \n"
      "STMIA   R6, {R2-R4} \n"
      "BL      sub_FFC8A908 \n"
      "LDR     R0, [SP, #0x1C] \n"
      "LDR     R1, [R0, #0x7C] \n"
      "LDR     R3, [R0, #0x88] \n"
      "LDR     R2, [R0, #0x8C] \n"
      "ADD     R0, R0, #4 \n"
      "BLX     R3 \n"
      "LDR     R0, [SP, #0x1C] \n"
      "BL      sub_FFC8D41C \n"
      "LDR     R0, [SP, #0x1C] \n"
      "LDR     R1, [R0, #0x7C] \n"
      "LDR     R3, [R0, #0x90] \n"
      "LDR     R2, [R0, #0x94] \n"
      "ADD     R0, R0, #4 \n"
      "BLX     R3 \n"
      "B       loc_FFC8C308 \n"
"loc_FFC8BFD0:\n"
      "CMP     R1, #0x13 \n"
      "CMPNE   R1, #0x14 \n"
      "CMPNE   R1, #0x15 \n"
      "BNE     loc_FFC8C084 \n"
      "ADD     R3, SP, #0xC \n"
      "MOV     R2, SP \n"
      "ADD     R1, SP, #0x10 \n"
      "BL      sub_FFC8AB50 \n"
      "CMP     R0, #1 \n"
      "MOV     R4, R0 \n"
      "CMPNE   R4, #5 \n"
      "BNE     loc_FFC8C020 \n"
      "LDR     R0, [SP, #0x1C] \n"
      "MOV     R2, R4 \n"
      "LDR     R1, [R0, #0x7C]! \n"
      "LDR     R12, [R0, #0xC]! \n"
      "LDR     R3, [R0, #4] \n"
      "MOV     R0, SP \n"
      "BLX     R12 \n"
      "B       loc_FFC8C058 \n"
"loc_FFC8C020:\n"
      "LDR     R0, [SP, #0x1C] \n"
      "CMP     R4, #2 \n"
      "LDR     R3, [R0, #0x8C] \n"
      "CMPNE   R4, #6 \n"
      "BNE     loc_FFC8C06C \n"
      "LDR     R12, [R0, #0x88] \n"
      "MOV     R0, SP \n"
      "MOV     R2, R4 \n"
      "MOV     R1, #1 \n"
      "BLX     R12 \n"
      "LDR     R0, [SP, #0x1C] \n"
      "MOV     R2, SP \n"
      "ADD     R1, SP, #0x10 \n"
      "BL      sub_FFC8BAD8 \n"
"loc_FFC8C058:\n"
      "LDR     R0, [SP, #0x1C] \n"
      "LDR     R2, [SP, #0xC] \n"
      "MOV     R1, R4 \n"
      "BL      sub_FFC8BD2C \n"
      "B       loc_FFC8C308 \n"
"loc_FFC8C06C:\n"
      "LDR     R1, [R0, #0x7C] \n"
      "LDR     R12, [R0, #0x88] \n"
      "ADD     R0, R0, #4 \n"
      "MOV     R2, R4 \n"
      "BLX     R12 \n"
      "B       loc_FFC8C308 \n"
"loc_FFC8C084:\n"
      "CMP     R1, #0x21 \n"
      "CMPNE   R1, #0x22 \n"
      "BNE     loc_FFC8C0D0 \n"
      "LDR     R1, [R0, #0x7C] \n"
      "ADD     R1, R1, R1, LSL #1 \n"
      "ADD     R1, R0, R1, LSL #2 \n"
      "SUB     R1, R1, #8 \n"
      "LDMIA   R1, {R2-R4} \n"
      "STMIA   R6, {R2-R4} \n"
      "BL      sub_FFC89E88 \n"
      "LDR     R0, [SP, #0x1C] \n"
      "LDR     R1, [R0, #0x7C] \n"
      "LDR     R3, [R0, #0x88] \n"
      "LDR     R2, [R0, #0x8C] \n"
      "ADD     R0, R0, #4 \n"
      "BLX     R3 \n"
      "LDR     R0, [SP, #0x1C] \n"
      "BL      sub_FFC8A184 \n"
      "B       loc_FFC8C308 \n"
"loc_FFC8C0D0:\n"
      "ADD     R1, R0, #4 \n"
      "LDMIA   R1, {R2,R3,R12} \n"
      "STMIA   R6, {R2,R3,R12} \n"
      "LDR     R1, [R0] \n"
      "CMP     R1, #0x24 \n"
      "ADDLS   PC, PC, R1, LSL #2 \n"
      "B       loc_FFC8C2E8 \n"
      "B       loc_FFC8C180 \n"
      "B       loc_FFC8C180 \n"
      "B       loc_FFC8C188 \n"
      "B       loc_FFC8C190 \n"
      "B       loc_FFC8C190 \n"
      "B       loc_FFC8C190 \n"
      "B       loc_FFC8C180 \n"
      "B       loc_FFC8C188 \n"
      "B       loc_FFC8C190 \n"
      "B       loc_FFC8C190 \n"
      "B       loc_FFC8C1F0 \n"
      "B       loc_FFC8C1F0 \n"
      "B       loc_FFC8C2DC \n"
      "B       loc_FFC8C2E4 \n"
      "B       loc_FFC8C2E4 \n"
      "B       loc_FFC8C2E4 \n"
      "B       loc_FFC8C2E4 \n"
      "B       loc_FFC8C2E8 \n"
      "B       loc_FFC8C2E8 \n"
      "B       loc_FFC8C2E8 \n"
      "B       loc_FFC8C2E8 \n"
      "B       loc_FFC8C2E8 \n"
      "B       loc_FFC8C198 \n"
      "B       loc_FFC8C1A0 \n"
      "B       loc_FFC8C1A0 \n"
      "B       loc_FFC8C1FC \n"
      "B       loc_FFC8C1FC \n"
      "B       loc_FFC8C204 \n"
      "B       loc_FFC8C234 \n"
      "B       loc_FFC8C264 \n"
      "B       loc_FFC8C294 \n"
      "B       loc_FFC8C2C4 \n"
      "B       loc_FFC8C2C4 \n"
      "B       loc_FFC8C2E8 \n"
      "B       loc_FFC8C2E8 \n"
      "B       loc_FFC8C2CC \n"
      "B       loc_FFC8C2D4 \n"
"loc_FFC8C180:\n"
      "BL      sub_FFC88D4C \n"
      "B       loc_FFC8C2E8 \n"
"loc_FFC8C188:\n"
      "BL      sub_FFC88FD4 \n"
      "B       loc_FFC8C2E8 \n"
"loc_FFC8C190:\n"
      "BL      sub_FFC891D8 \n"
      "B       loc_FFC8C2E8 \n"
"loc_FFC8C198:\n"
      "BL      sub_FFC89440 \n"
      "B       loc_FFC8C2E8 \n"
"loc_FFC8C1A0:\n"
      "BL      sub_FFC89634 \n"
      "B       loc_FFC8C2E8 \n"

"loc_FFC8C1F0:\n"
//      "BL      sub_FFC8989C \n" //original
     "BL      sub_FFC8989C_my \n" //patched
     "MOV     R4, #0 \n"
      "B       loc_FFC8C2E8 \n"
"loc_FFC8C1FC:\n"
      "BL      sub_FFC899D8 \n"
      "B       loc_FFC8C2E8 \n"
"loc_FFC8C204:\n"
      "LDRH    R1, [R0, #4] \n"
      "STRH    R1, [SP, #0x10] \n"
      "LDRH    R1, [R5, #2] \n"
      "STRH    R1, [SP, #0x12] \n"
      "LDRH    R1, [R5, #4] \n"
      "STRH    R1, [SP, #0x14] \n"
      "LDRH    R1, [R5, #6] \n"
      "STRH    R1, [SP, #0x16] \n"
      "LDRH    R1, [R0, #0xC] \n"
      "STRH    R1, [SP, #0x18] \n"
      "BL      sub_FFC8D0B8 \n"
      "B       loc_FFC8C2E8 \n"
"loc_FFC8C234:\n"
      "LDRH    R1, [R0, #4] \n"
      "STRH    R1, [SP, #0x10] \n"
      "LDRH    R1, [R5, #2] \n"
      "STRH    R1, [SP, #0x12] \n"
      "LDRH    R1, [R5, #4] \n"
      "STRH    R1, [SP, #0x14] \n"
      "LDRH    R1, [R5, #6] \n"
      "STRH    R1, [SP, #0x16] \n"
      "LDRH    R1, [R5, #8] \n"
      "STRH    R1, [SP, #0x18] \n"
      "BL      sub_FFC8D238 \n"
      "B       loc_FFC8C2E8 \n"
"loc_FFC8C264:\n"
      "LDRH    R1, [R5] \n"
      "STRH    R1, [SP, #0x10] \n"
      "LDRH    R1, [R0, #6] \n"
      "STRH    R1, [SP, #0x12] \n"
      "LDRH    R1, [R5, #4] \n"
      "STRH    R1, [SP, #0x14] \n"
      "LDRH    R1, [R5, #6] \n"
      "STRH    R1, [SP, #0x16] \n"
      "LDRH    R1, [R5, #8] \n"
      "STRH    R1, [SP, #0x18] \n"
      "BL      sub_FFC8D2E4 \n"
      "B       loc_FFC8C2E8 \n"
"loc_FFC8C294:\n"
      "LDRH    R1, [R5] \n"
      "STRH    R1, [SP, #0x10] \n"
      "LDRH    R1, [R5, #2] \n"
      "STRH    R1, [SP, #0x12] \n"
      "LDRH    R1, [R5, #4] \n"
      "STRH    R1, [SP, #0x14] \n"
      "LDRH    R1, [R5, #6] \n"
      "STRH    R1, [SP, #0x16] \n"
      "LDRH    R1, [R0, #0xC] \n"
      "STRH    R1, [SP, #0x18] \n"
      "BL      sub_FFC8D384 \n"
      "B       loc_FFC8C2E8 \n"
"loc_FFC8C2C4:\n"
      "BL      sub_FFC89C4C \n"
      "B       loc_FFC8C2E8 \n"
"loc_FFC8C2CC:\n"
      "BL      sub_FFC8A288 \n"
      "B       loc_FFC8C2E8 \n"
"loc_FFC8C2D4:\n"
      "BL      sub_FFC8A4C0 \n"
      "B       loc_FFC8C2E8 \n"
"loc_FFC8C2DC:\n"
      "BL      sub_FFC8A638 \n"
      "B       loc_FFC8C2E8 \n"
"loc_FFC8C2E4:\n"
      "BL      sub_FFC8A7D0 \n"
"loc_FFC8C2E8:\n"
      "LDR     R0, [SP, #0x1C] \n"
      "LDR     R1, [R0, #0x7C] \n"
      "LDR     R3, [R0, #0x88] \n"
      "LDR     R2, [R0, #0x8C] \n"
      "ADD     R0, R0, #4 \n"
      "BLX     R3 \n"
      "CMP     R4, #1 \n"
      "BNE     loc_FFC8C350 \n"
"loc_FFC8C308:\n"
      "LDR     R0, [SP, #0x1C] \n"
      "MOV     R2, #0xC \n"
      "LDR     R1, [R0, #0x7C] \n"
      "ADD     R1, R1, R1, LSL #1 \n"
      "ADD     R0, R0, R1, LSL #2 \n"
      "SUB     R4, R0, #8 \n"
      "LDR     R0, =0x1E4C4 \n"
      "ADD     R1, SP, #0x10 \n"
      "BL      sub_FFE8EEF8 \n"
      "LDR     R0, =0x1E4D0 \n"
      "MOV     R2, #0xC \n"
      "ADD     R1, SP, #0x10 \n"
      "BL      sub_FFE8EEF8 \n"
      "LDR     R0, =0x1E4DC \n"
      "MOV     R2, #0xC \n"
      "MOV     R1, R4 \n"
      "BL      sub_FFE8EEF8 \n"
      "B       loc_FFC8C3C8 \n"
"loc_FFC8C350:\n"
      "LDR     R0, [SP, #0x1C] \n"
      "LDR     R0, [R0] \n"
      "CMP     R0, #0xB \n"
      "BNE     loc_FFC8C398 \n"
      "MOV     R3, #0 \n"
      "STR     R3, [SP] \n"
      "MOV     R3, #1 \n"
      "MOV     R2, #1 \n"
      "MOV     R1, #1 \n"
      "MOV     R0, #0 \n"
      "BL      sub_FFC88B54 \n"
      "MOV     R3, #0 \n"
      "STR     R3, [SP] \n"
      "MOV     R3, #1 \n"
      "MOV     R2, #1 \n"
      "MOV     R1, #1 \n"
      "MOV     R0, #0 \n"
      "B       loc_FFC8C3C4 \n"
"loc_FFC8C398:\n"
      "MOV     R3, #1 \n"
      "MOV     R2, #1 \n"
      "MOV     R1, #1 \n"
      "MOV     R0, #1 \n"
      "STR     R3, [SP] \n"
      "BL      sub_FFC88B54 \n"
      "MOV     R3, #1 \n"
      "MOV     R2, #1 \n"
      "MOV     R1, #1 \n"
      "MOV     R0, #1 \n"
      "STR     R3, [SP] \n"
"loc_FFC8C3C4:\n"
      "BL      sub_FFC88C94 \n"
"loc_FFC8C3C8:\n"
      "LDR     R0, [SP, #0x1C] \n"
      "BL      sub_FFC8D044 \n"
      "B       loc_FFC8BDFC \n"
	);
}

//** sub_FFC8989C_my  @ 0xFFC8989C

void __attribute__((naked,noinline)) sub_FFC8989C_my() {
asm volatile (
      "STMFD   SP!, {R4-R8,LR} \n"
      "LDR     R7, =0x685C \n"
      "MOV     R4, R0 \n"
      "LDR     R0, [R7, #0x1C] \n"
      "MOV     R1, #0x3E \n"
      "BL      sub_FFC16D94 \n"
      "LDRSH   R0, [R4, #4] \n"
      "MOV     R2, #0 \n"
      "MOV     R1, #0 \n"
      "BL      sub_FFC888E4 \n"
      "MOV     R6, R0 \n"
      "LDRSH   R0, [R4, #6] \n"
      "BL      sub_FFC889F4 \n"
      "LDRSH   R0, [R4, #8] \n"
      "BL      sub_FFC88A4C \n"
      "LDRSH   R0, [R4, #0xA] \n"
      "BL      sub_FFC88AA4 \n"
      "LDRSH   R0, [R4, #0xC] \n"
      "BL      sub_FFC88AFC \n"
      "MOV     R5, R0 \n"
      "LDR     R0, [R4] \n"
      "LDR     R8, =0x1E4DC \n"
      "CMP     R0, #0xB \n"
      "MOVEQ   R6, #0 \n"
      "MOVEQ   R5, #0 \n"
      "BEQ     loc_FFC8992C \n"
      "CMP     R6, #1 \n"
      "BNE     loc_FFC8992C \n"
      "LDRSH   R0, [R4, #4] \n"
      "LDR     R1, =0xFFC88850 \n"
      "MOV     R2, #2 \n"
      "BL      sub_FFD0E8F0 \n"
      "STRH    R0, [R4, #4] \n"
      "MOV     R0, #0 \n"
      "STR     R0, [R7, #0x28] \n"
      "B       loc_FFC89934 \n"
"loc_FFC8992C:\n"
      "LDRH    R0, [R8] \n"
      "STRH    R0, [R4, #4] \n"
"loc_FFC89934:\n"
      "CMP     R5, #1 \n"
      "LDRNEH  R0, [R8, #8] \n"
      "BNE     loc_FFC89950 \n"
      "LDRSH   R0, [R4, #0xC] \n"
      "LDR     R1, =0xFFC888D4 \n"
      "MOV     R2, #0x20 \n"
      "BL      sub_FFC8D074 \n"
"loc_FFC89950:\n"
      "STRH    R0, [R4, #0xC] \n"
      "LDRSH   R0, [R4, #6] \n"
//      "BL      sub_FFC76194 \n"  //original
      "BL      sub_FFC76194_my \n" //patched
      "LDRSH   R0, [R4, #8] \n"
      "MOV     R1, #1 \n"
      "BL      sub_FFC768E0 \n"
      "MOV     R1, #0 \n"
      "ADD     R0, R4, #8 \n"
      "BL      sub_FFC76968 \n"
      "LDRSH   R0, [R4, #0xE] \n"
      "BL      sub_FFC7F230 \n"
      "LDR     R4, =0xBB8 \n"
      "CMP     R6, #1 \n"
      "BNE     loc_FFC899A8 \n"
      "LDR     R0, [R7, #0x1C] \n"
      "MOV     R2, R4 \n"
      "MOV     R1, #2 \n"
      "BL      sub_FFC16CA0 \n"
      "TST     R0, #1 \n"
      "LDRNE   R1, =0x54D \n"
      "LDRNE   R0, =0xFFC88F60 \n"
      "BLNE    sub_FFC0BD98 \n"
"loc_FFC899A8:\n"
      "CMP     R5, #1 \n"
      "LDMNEFD SP!, {R4-R8,PC} \n"
      "LDR     R0, [R7, #0x1C] \n"
      "MOV     R2, R4 \n"
      "MOV     R1, #0x20 \n"
      "BL      sub_FFC16CA0 \n"
      "TST     R0, #1 \n"
      "LDRNE   R1, =0x552 \n"
      "LDRNE   R0, =0xFFC88F60 \n"
      "LDMNEFD SP!, {R4-R8,LR} \n"
      "BNE     sub_FFC0BD98 \n"
      "LDMFD   SP!, {R4-R8,PC} \n"
	);
}

//** sub_FFC76194_my  @ 0xFFC76194

void __attribute__((naked,noinline)) sub_FFC76194_my() {
asm volatile (
      "STMFD   SP!, {R4-R6,LR} \n"
      "LDR     R5, =0x6514 \n"
      "MOV     R4, R0 \n"
      "LDR     R0, [R5, #4] \n"
      "CMP     R0, #1 \n"
      "MOVNE   R1, #0x140 \n"
      "LDRNE   R0, =0xFFC75F98 \n"
      "BLNE    sub_FFC0BD98 \n"
      "CMN     R4, #0xC00 \n"
      "LDREQSH R4, [R5, #2] \n"
      "CMN     R4, #0xC00 \n"
      "LDREQ   R1, =0x146 \n"
      "LDREQ   R0, =0xFFC75F98 \n"
      "STRH    R4, [R5, #2] \n"
      "BLEQ    sub_FFC0BD98 \n"
      "MOV     R0, R4 \n"
//      "BL      sub_FFD910E4 \n"     // original _apex2us
      "BL      apex2us\n"             // patched 
      "MOV     R4, R0 \n"
      "BL      sub_FFCAA854 \n"
      "MOV     R0, R4 \n"
      "BL      sub_FFCAE89C \n"
      "TST     R0, #1 \n"
      "LDRNE   R1, =0x14B \n"
      "LDMNEFD SP!, {R4-R6,LR} \n"
      "LDRNE   R0, =0xFFC75F98 \n"
      "BNE     sub_FFC0BD98 \n"
      "LDMFD   SP!, {R4-R6,PC} \n"
	);
}
