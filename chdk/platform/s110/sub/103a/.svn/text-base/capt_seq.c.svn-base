/*
 * capt_seq.c - auto-generated by CHDK code_gen.
 */
#include "lolevel.h"
#include "platform.h"
#include "core.h"

#define USE_STUBS_NRFLAG 1          // see stubs_entry.S
#define NR_AUTO (0)                 // have to explictly reset value back to 0 to enable auto
#define PAUSE_FOR_FILE_COUNTER 300  // Enable delay in capt_seq_hook_raw_here to ensure file counter is updated

#include "../../../generic/capt_seq.c"

/*************************************************************/
//** capt_seq_task @ 0xF80C17F4 - 0xF80C1AD4, length=185
void __attribute__((naked,noinline)) capt_seq_task() {
asm volatile (
"    STMFD   SP!, {R3-R7,LR} \n"
"    LDR     R4, =0xA31D0 \n"
"    LDR     R7, =0x3EC8 \n"
"    MOV     R6, #0 \n"

"loc_F80C1804:\n"
"    LDR     R0, [R7, #4] \n"
"    MOV     R2, #0 \n"
"    MOV     R1, SP \n"
"    BL      sub_0068F164 /*_ReceiveMessageQueue*/ \n"
"    TST     R0, #1 \n"
"    BEQ     loc_F80C1830 \n"
"    LDR     R1, =0x491 \n"
"    LDR     R0, =0xF80C116C \n"
"    BL      _DebugAssert \n"
"    BL      _ExitTask \n"
"    LDMFD   SP!, {R3-R7,PC} \n"

"loc_F80C1830:\n"
"    LDR     R0, [SP] \n"
"    LDR     R1, [R0] \n"
"    CMP     R1, #0x27 \n"
"    ADDCC   PC, PC, R1, LSL#2 \n"
"    B       loc_F80C1A9C \n"
"    B       loc_F80C18E0 \n"
"    B       loc_F80C18F8 \n"
"    B       loc_F80C1904 \n"
"    B       loc_F80C1918 \n"
"    B       loc_F80C1910 \n"
"    B       loc_F80C1924 \n"
"    B       loc_F80C192C \n"
"    B       loc_F80C1934 \n"
"    B       loc_F80C1950 \n"
"    B       loc_F80C19A4 \n"
"    B       loc_F80C195C \n"
"    B       loc_F80C1968 \n"
"    B       loc_F80C1970 \n"
"    B       loc_F80C198C \n"
"    B       loc_F80C1994 \n"
"    B       loc_F80C199C \n"
"    B       loc_F80C19AC \n"
"    B       loc_F80C19B4 \n"
"    B       loc_F80C19BC \n"
"    B       loc_F80C19C4 \n"
"    B       loc_F80C19CC \n"
"    B       loc_F80C19D4 \n"
"    B       loc_F80C19DC \n"
"    B       loc_F80C19E4 \n"
"    B       loc_F80C19EC \n"
"    B       loc_F80C19F4 \n"
"    B       loc_F80C1A00 \n"
"    B       loc_F80C1A08 \n"
"    B       loc_F80C1A14 \n"
"    B       loc_F80C1A1C \n"
"    B       loc_F80C1A24 \n"
"    B       loc_F80C1A2C \n"
"    B       loc_F80C1A34 \n"
"    B       loc_F80C1A3C \n"
"    B       loc_F80C1A44 \n"
"    B       loc_F80C1A50 \n"
"    B       loc_F80C1A58 \n"
"    B       loc_F80C1A64 \n"
"    B       loc_F80C1AA8 \n"

"loc_F80C18E0:\n"
"    BL      shooting_expo_iso_override\n"      // added
"    BL      sub_F80C2084 \n"
"    BL      shooting_expo_param_override\n"    // added
"    BL      sub_F80BE978 \n"
"    MOV     R0, #0\n"                          // added
"    STR     R0, [R4,#0x28]\n"                  // added, fixes overrides  behavior at short shutter press (from S95)
//"  LDR     R0, [R4, #0x28] \n"  // above patch makes these three lines redundant
//"  CMP     R0, #0 \n"
//"  BLNE    _sub_F82676CC \n"
"    B       loc_F80C1AA8 \n"

"loc_F80C18F8:\n"
"    LDR     R0, [R0, #0x10] \n"
"    BL      sub_F80C1BF0_my \n"  // --> Patched. Old value = 0xF80C1BF0.
"    B       loc_F80C1AA8 \n"

"loc_F80C1904:\n"
"    MOV     R0, #1 \n"
"    BL      sub_F80C23C0 \n"
"    B       loc_F80C1AA8 \n"

"loc_F80C1910:\n"
"    BL      sub_F80C1D3C \n"
"    B       loc_F80C191C \n"

"loc_F80C1918:\n"
"    BL      sub_F80C2064 \n"

"loc_F80C191C:\n"
"    STR     R6, [R4, #0x28] \n"
"    B       loc_F80C1AA8 \n"

"loc_F80C1924:\n"
"    BL      sub_F80C206C \n"
"    B       loc_F80C1AA8 \n"

"loc_F80C192C:\n"
"    BL      sub_F80C2298 \n"
"    B       loc_F80C1954 \n"

"loc_F80C1934:\n"
"    LDR     R5, [R0, #0x10] \n"
"    MOV     R0, R5 \n"
"    BL      sub_F8267798 \n"
"    MOV     R2, R5 \n"
"    MOV     R1, #9 \n"
"    BL      sub_F80BF3FC \n"
"    B       loc_F80C1AA8 \n"

"loc_F80C1950:\n"
"    BL      sub_F80C2328 \n"

"loc_F80C1954:\n"
"    BL      sub_F80BE978 \n"
"    B       loc_F80C1AA8 \n"

"loc_F80C195C:\n"
"    LDR     R0, [R4, #0x58] \n"
"    BL      sub_F80C2EB8 \n"
"    B       loc_F80C1AA8 \n"

"loc_F80C1968:\n"
"    BL      sub_F80C3250 \n"
"    B       loc_F80C1AA8 \n"

"loc_F80C1970:\n"
"    LDRH    R0, [R4] \n"
"    SUB     R1, R0, #0x8200 \n"
"    SUBS    R1, R1, #0x39 \n"
"    MOVNE   R0, #0 \n"
"    MOVEQ   R0, #1 \n"
"    BL      sub_F80C32B4 \n"
"    B       loc_F80C1AA8 \n"

"loc_F80C198C:\n"
"    BL      sub_F80C349C \n"
"    B       loc_F80C1AA8 \n"

"loc_F80C1994:\n"
"    BL      sub_F80C3910 \n"
"    B       loc_F80C1AA8 \n"

"loc_F80C199C:\n"
"    BL      sub_F80C39C4 \n"
"    B       loc_F80C1AA8 \n"

"loc_F80C19A4:\n"
"    BL      sub_F80C2064 \n"
"    B       loc_F80C1AA8 \n"

"loc_F80C19AC:\n"
"    BL      sub_F82654E0 \n"
"    B       loc_F80C1AA8 \n"

"loc_F80C19B4:\n"
"    BL      sub_F8265714 \n"
"    B       loc_F80C1AA8 \n"

"loc_F80C19BC:\n"
"    BL      sub_F82657CC \n"
"    B       loc_F80C1AA8 \n"

"loc_F80C19C4:\n"
"    BL      sub_F8265880 \n"
"    B       loc_F80C1AA8 \n"

"loc_F80C19CC:\n"
"    BL      sub_F8265980 \n"
"    B       loc_F80C1AA8 \n"

"loc_F80C19D4:\n"
"    MOV     R0, #0 \n"
"    B       loc_F80C19F8 \n"

"loc_F80C19DC:\n"
"    BL      sub_F8265BB4 \n"
"    B       loc_F80C1AA8 \n"

"loc_F80C19E4:\n"
"    BL      sub_F8265C48 \n"
"    B       loc_F80C1AA8 \n"

"loc_F80C19EC:\n"
"    BL      sub_F8265CF0 \n"
"    B       loc_F80C1AA8 \n"

"loc_F80C19F4:\n"
"    MOV     R0, #1 \n"

"loc_F80C19F8:\n"
"    BL      sub_F8265A50 \n"
"    B       loc_F80C1AA8 \n"

"loc_F80C1A00:\n"
"    BL      sub_F80C25D4 \n"
"    B       loc_F80C1AA8 \n"

"loc_F80C1A08:\n"
"    BL      sub_F80C2668 \n"
"    BL      sub_F8268B4C \n"
"    B       loc_F80C1AA8 \n"

"loc_F80C1A14:\n"
"    BL      sub_F80C2930 \n"
"    B       loc_F80C1AA8 \n"

"loc_F80C1A1C:\n"
"    BL      sub_F80C2A68 \n"
"    B       loc_F80C1AA8 \n"

"loc_F80C1A24:\n"
"    BL      sub_F8268C20 \n"
"    B       loc_F80C1AA8 \n"

"loc_F80C1A2C:\n"
"    BL      sub_F8036D20 \n"
"    B       loc_F80C1AA8 \n"

"loc_F80C1A34:\n"
"    BL      sub_F80C7B84 \n"
"    B       loc_F80C1AA8 \n"

"loc_F80C1A3C:\n"
"    BL      sub_F80C7C84 \n"
"    B       loc_F80C1AA8 \n"

"loc_F80C1A44:\n"
"    LDR     R0, [R0, #0xC] \n"
"    BL      sub_F8265DF8 \n"
"    B       loc_F80C1AA8 \n"

"loc_F80C1A50:\n"
"    BL      sub_F8265E68 \n"
"    B       loc_F80C1AA8 \n"

"loc_F80C1A58:\n"
"    BL      sub_F80C7E10 \n"
"    BL      sub_F80C7CDC \n"
"    B       loc_F80C1AA8 \n"

"loc_F80C1A64:\n"
"    MOV     R0, #1 \n"
"    BL      sub_F8267FC8 \n"
"    MOV     R0, #1 \n"
"    BL      sub_F82680FC \n"
"    LDRH    R0, [R4, #0xA4] \n"
"    CMP     R0, #4 \n"
"    LDRNEH  R0, [R4] \n"
"    SUBNE   R1, R0, #0x4200 \n"
"    SUBNES  R1, R1, #0x2E \n"
"    BNE     loc_F80C1AA8 \n"
"    BL      sub_F80C7C84 \n"
"    BL      sub_F80C8528 \n"
"    BL      sub_F80C8230 \n"
"    B       loc_F80C1AA8 \n"

"loc_F80C1A9C:\n"
"    LDR     R1, =0x5F2 \n"
"    LDR     R0, =0xF80C116C \n"
"    BL      _DebugAssert \n"

"loc_F80C1AA8:\n"
"    LDR     R0, [SP] \n"
"    LDR     R1, [R0, #4] \n"
"    LDR     R0, [R7] \n"
"    BL      sub_0068EED4 /*_SetEventFlag*/ \n"
"    LDR     R5, [SP] \n"
"    LDR     R0, [R5, #8] \n"
"    CMP     R0, #0 \n"
"    LDREQ   R1, =0x117 \n"
"    LDREQ   R0, =0xF80C116C \n"
"    BLEQ    _DebugAssert \n"
"    STR     R6, [R5, #8] \n"
"    B       loc_F80C1804 \n"
);
}

/*************************************************************/
//** sub_F80C1BF0_my @ 0xF80C1BF0 - 0xF80C1C90, length=41
void __attribute__((naked,noinline)) sub_F80C1BF0_my() {
asm volatile (
"    STMFD   SP!, {R4-R6,LR} \n"
"    LDR     R5, =0xA31D0 \n"
"    MOV     R6, R0 \n"
"    LDR     R0, [R5, #0x28] \n"
"    CMP     R0, #0 \n"
"    BNE     loc_F80C1C40 \n"
"    LDR     R0, [R5, #0x94] \n"
"    TST     R0, #0x30 \n"
"    BLNE    sub_F80C646C \n"
"    BL      sub_F80C5F34 \n"
"    MOV     R1, R6 \n"
"    BL      sub_F80C5F8C \n"
"    LDR     R0, =0x10F \n"
"    MOV     R2, #4 \n"
"    ADD     R1, R6, #0x78 \n"
"    BL      _SetPropertyCase \n"
"    MOV     R2, #4 \n"
"    ADD     R1, R6, #0x7C \n"
"    MOV     R0, #0x2C \n"
"    BL      _SetPropertyCase \n"

"loc_F80C1C40:\n"
"    LDR     R0, [R5, #0x94] \n"
"    TST     R0, #0x20 \n"
"    MOV     R0, R6 \n"
"    BEQ     loc_F80C1C58 \n"
"    BL      sub_F8268594 \n"
"    B       loc_F80C1C5C \n"

"loc_F80C1C58:\n"
"    BL      sub_F8267454_my \n"  // --> Patched. Old value = 0xF8267454.
"    BL      capt_seq_hook_raw_here \n" // +++

"loc_F80C1C5C:\n"
"    MOV     R4, R0 \n"
"    MOV     R2, R6 \n"
"    MOV     R1, #1 \n"
"    BL      sub_F80BF3FC \n"
"    TST     R4, #1 \n"
"    LDMNEFD SP!, {R4-R6,PC} \n"
"    MOV     R0, R6 \n"
"    BL      sub_F8266410 \n"
"    LDR     R0, [R5, #0x94] \n"
"    TST     R0, #2 \n"
"    LDMEQFD SP!, {R4-R6,PC} \n"
"    MOV     R0, R6 \n"
"    LDMFD   SP!, {R4-R6,LR} \n"
"    B       sub_F80BF5A4 \n"
);
}

/*************************************************************/
//** sub_F8267454_my @ 0xF8267454 - 0xF82676C8, length=158
void __attribute__((naked,noinline)) sub_F8267454_my() {
asm volatile (
"    STMFD   SP!, {R3-R7,LR} \n"
"    LDR     R6, =0xA31D0 \n"
"    MOV     R4, R0 \n"
"    LDR     R0, [R6, #0x28] \n"
"    LDR     R5, =0x420D \n"
"    CMP     R0, #0 \n"
"    MOV     R7, #0 \n"
"    BNE     loc_F82674F8 \n"
"    LDR     R1, [R6, #0x94] \n"
"    TST     R1, #6 \n"
"    BNE     loc_F8267494 \n"
"    MOV     R0, #0xC \n"
"    BL      sub_F80CA2EC \n"
"    TST     R0, #1 \n"
"    BEQ     loc_F82674F8 \n"
"    B       loc_F82674F0 \n"

"loc_F8267494:\n"
"    LDRH    R0, [R6] \n"
"    CMP     R0, R5 \n"
"    LDRNEH  R0, [R6, #0xA2] \n"
"    CMPNE   R0, #3 \n"
"    LDRNE   R0, [R4, #8] \n"
"    CMPNE   R0, #1 \n"
"    BLS     loc_F82674D8 \n"
"    LDRH    R0, [R6, #0x9E] \n"
"    CMP     R0, #3 \n"
"    BNE     loc_F82674C4 \n"
"    TST     R1, #2 \n"
"    BNE     loc_F82674F8 \n"

"loc_F82674C4:\n"
"    BL      sub_F801F980 \n"
"    TST     R0, #1 \n"
"    BEQ     loc_F82674F8 \n"
"    BL      sub_F80CA354 \n"
"    B       loc_F82674F0 \n"

"loc_F82674D8:\n"
"    MOV     R0, #0xC \n"
"    BL      sub_F80CA2EC \n"
"    TST     R0, #1 \n"
"    BEQ     loc_F82674F8 \n"
"    BL      sub_F8267E44 \n"
"    BL      sub_F80BF018 \n"

"loc_F82674F0:\n"
"    MOV     R0, #1 \n"
"    LDMFD   SP!, {R3-R7,PC} \n"

"loc_F82674F8:\n"
"    MOV     R0, R4 \n"
"    BL      sub_F8268C94 \n"
"    BL      sub_F80C2074 \n"
"    LDR     R0, [R6, #0x28] \n"
"    CMP     R0, #0 \n"
"    BNE     loc_F82676B4 \n"
"    MOV     R0, R4 \n"
"    BL      sub_F82662FC \n"
"    TST     R0, #1 \n"
"    LDMNEFD SP!, {R3-R7,PC} \n"
"    LDR     R0, [R6, #0x94] \n"
"    AND     R0, R0, #0x40 \n"
"    CMP     R0, #0 \n"
"    LDRNEH  R0, [R6] \n"
"    CMPNE   R0, R5 \n"
"    LDRNEH  R0, [R6, #0xA2] \n"
"    CMPNE   R0, #3 \n"
"    LDRNE   R0, [R4, #8] \n"
"    CMPNE   R0, #1 \n"
"    BLS     loc_F8267564 \n"
"    BL      sub_F82682BC \n"
"    MOV     R3, #0xB3 \n"
"    STR     R3, [SP] \n"
"    LDR     R2, =0x3A98 \n"
"    LDR     R3, =0xF8267774 \n"
"    MOV     R1, #0x8000 \n"
"    BL      sub_F80CA564 \n"

"loc_F8267564:\n"
"    LDR     R0, [R6, #0x94] \n"
"    AND     R0, R0, #4 \n"
"    CMP     R0, #0 \n"
"    LDRNEH  R0, [R6] \n"
"    CMPNE   R0, R5 \n"
"    LDRNEH  R0, [R6, #0xA2] \n"
"    CMPNE   R0, #3 \n"
"    LDRNE   R0, [R4, #8] \n"
"    CMPNE   R0, #1 \n"
"    BLS     loc_F8267598 \n"
"    LDR     R0, [R6, #0x98] \n"
"    CMP     R0, #2 \n"
"    BNE     loc_F82675A4 \n"

"loc_F8267598:\n"
"    MOV     R0, R4 \n"
"    BL      sub_F8266834 \n"
"    BL      sub_F8267D88 \n"

//begin patch
"    BL      wait_until_remote_button_is_released\n" // +++
"    BL      capt_seq_hook_set_nr\n" // +++
//end patch

"loc_F82675A4:\n"
"    LDRH    R0, [R6] \n"
"    CMP     R0, R5 \n"
"    LDRNEH  R0, [R6, #0xA2] \n"
"    CMPNE   R0, #3 \n"
"    LDRNE   R0, [R4, #8] \n"
"    CMPNE   R0, #1 \n"
"    MOVLS   R0, #4 \n"
"    BLLS    sub_F817539C \n"
"    LDR     R0, [R6, #0x94] \n"
"    TST     R0, #4 \n"
"    BEQ     loc_F82675FC \n"
"    LDR     R0, [R6, #0x98] \n"
"    CMP     R0, #2 \n"
"    BNE     loc_F82675FC \n"
"    LDRH    R0, [R6] \n"
"    CMP     R0, R5 \n"
"    LDRNEH  R0, [R6, #0xA2] \n"
"    CMPNE   R0, #3 \n"
"    LDRNE   R0, [R4, #8] \n"
"    CMPNE   R0, #1 \n"
"    MOVLS   R0, #3 \n"
"    BLLS    sub_F817539C \n"

"loc_F82675FC:\n"
"    LDR     R0, [R6, #0x94] \n"
"    TST     R0, #0x40 \n"
"    BEQ     loc_F8267664 \n"
"    LDR     R0, =0x181 \n"
"    MOV     R2, #4 \n"
"    MOV     R1, SP \n"
"    BL      _GetPropertyCase \n"
"    TST     R0, #1 \n"
"    MOVNE   R1, #0xD4 \n"
"    LDRNE   R0, =0xF8267774 \n"
"    BLNE    _DebugAssert \n"
"    LDR     R0, [SP] \n"
"    CMP     R0, #0 \n"
"    BNE     loc_F8267644 \n"
"    BL      sub_F82682BC \n"
"    MOV     R1, #0x8000 \n"
"    BL      sub_0068EED4 /*_SetEventFlag*/ \n"
"    B       loc_F8267664 \n"

"loc_F8267644:\n"
"    BL      sub_F82682BC \n"
"    MOV     R1, #0x8000 \n"
"    BL      sub_0068EF08 /*_ClearEventFlag*/ \n"
"    LDR     R2, =0xF8267440 \n"
"    LDR     R0, [SP] \n"
"    MOV     R3, #0x8000 \n"
"    MOV     R1, R2 \n"
"    BL      sub_F8039EA8 /*_SetTimerAfter*/ \n"

"loc_F8267664:\n"
"    LDR     R0, [R6, #0x94] \n"
"    AND     R0, R0, #6 \n"
"    CMP     R0, #0 \n"
"    LDRNEH  R0, [R6] \n"
"    CMPNE   R0, R5 \n"
"    LDRNEH  R0, [R6, #0xA2] \n"
"    CMPNE   R0, #3 \n"
"    LDRNE   R0, [R4, #8] \n"
"    CMPNE   R0, #1 \n"
"    MOVLS   R0, #2 \n"
"    BLLS    sub_F80CBB2C \n"
"    LDR     R0, [R6, #0x94] \n"
"    TST     R0, #0x10 \n"
"    MOV     R0, R4 \n"
"    BEQ     loc_F82676A8 \n"
"    BL      sub_F84551E4 \n"
"    B       loc_F82676AC \n"

"loc_F82676A8:\n"
"    BL      sub_F8266E7C \n"

"loc_F82676AC:\n"
"    MOV     R7, R0 \n"
"    B       loc_F82676C4 \n"

"loc_F82676B4:\n"
"    LDR     R0, =0xA5F0 \n"
"    LDR     R0, [R0] \n"
"    CMP     R0, #0 \n"
"    MOVNE   R7, #0x1D \n"

"loc_F82676C4:\n"
"    MOV     R0, R7 \n"
"    LDMFD   SP!, {R3-R7,PC} \n"
);
}

/*************************************************************/
//** exp_drv_task @ 0xF810CF84 - 0xF810D614, length=421
void __attribute__((naked,noinline)) exp_drv_task() {
asm volatile (
"    STMFD   SP!, {R4-R9,LR} \n"
"    SUB     SP, SP, #0x2C \n"
"    LDR     R6, =0x5438 \n"
"    LDR     R7, =0xBB8 \n"
"    LDR     R4, =0xC3A10 \n"
"    MOV     R0, #0 \n"
"    ADD     R5, SP, #0x1C \n"
"    STR     R0, [SP, #0xC] \n"

"loc_F810CFA4:\n"
"    LDR     R0, [R6, #0x20] \n"
"    MOV     R2, #0 \n"
"    ADD     R1, SP, #0x28 \n"
"    BL      sub_0068F164 /*_ReceiveMessageQueue*/ \n"
"    LDR     R0, [SP, #0xC] \n"
"    CMP     R0, #1 \n"
"    BNE     loc_F810CFF0 \n"
"    LDR     R0, [SP, #0x28] \n"
"    LDR     R0, [R0] \n"
"    CMP     R0, #0x14 \n"
"    CMPNE   R0, #0x15 \n"
"    CMPNE   R0, #0x16 \n"
"    CMPNE   R0, #0x17 \n"
"    BEQ     loc_F810D150 \n"
"    CMP     R0, #0x2A \n"
"    BEQ     loc_F810D0D8 \n"
"    ADD     R1, SP, #0xC \n"
"    MOV     R0, #0 \n"
"    BL      sub_F810CF34 \n"

"loc_F810CFF0:\n"
"    LDR     R0, [SP, #0x28] \n"
"    LDR     R1, [R0] \n"
"    CMP     R1, #0x30 \n"
"    BNE     loc_F810D01C \n"
"    BL      sub_F810E4B8 \n"
"    LDR     R0, [R6, #0x1C] \n"
"    MOV     R1, #1 \n"
"    BL      sub_0068EED4 /*_SetEventFlag*/ \n"
"    BL      _ExitTask \n"
"    ADD     SP, SP, #0x2C \n"
"    LDMFD   SP!, {R4-R9,PC} \n"

"loc_F810D01C:\n"
"    CMP     R1, #0x2F \n"
"    BNE     loc_F810D038 \n"
"    LDR     R2, [R0, #0x8C]! \n"
"    LDR     R1, [R0, #4] \n"
"    MOV     R0, R1 \n"
"    BLX     R2 \n"
"    B       loc_F810D60C \n"

"loc_F810D038:\n"
"    CMP     R1, #0x28 \n"
"    BNE     loc_F810D088 \n"
"    LDR     R0, [R6, #0x1C] \n"
"    MOV     R1, #0x80 \n"
"    BL      sub_0068EF08 /*_ClearEventFlag*/ \n"
"    LDR     R0, =0xF8108680 \n"
"    MOV     R1, #0x80 \n"
"    BL      sub_F8229E74 \n"
"    LDR     R0, [R6, #0x1C] \n"
"    MOV     R2, R7 \n"
"    MOV     R1, #0x80 \n"
"    BL      sub_0068EE14 /*_WaitForAllEventFlag*/ \n"
"    TST     R0, #1 \n"
"    LDRNE   R1, =0x1643 \n"
"    BNE     loc_F810D144 \n"

"loc_F810D074:\n"
"    LDR     R1, [SP, #0x28] \n"
"    LDR     R0, [R1, #0x90] \n"
"    LDR     R1, [R1, #0x8C] \n"
"    BLX     R1 \n"
"    B       loc_F810D60C \n"

"loc_F810D088:\n"
"    CMP     R1, #0x29 \n"
"    BNE     loc_F810D0D0 \n"
"    ADD     R1, SP, #0xC \n"
"    BL      sub_F810CF34 \n"
"    LDR     R0, [R6, #0x1C] \n"
"    MOV     R1, #0x100 \n"
"    BL      sub_0068EF08 /*_ClearEventFlag*/ \n"
"    LDR     R0, =0xF8108690 \n"
"    MOV     R1, #0x100 \n"
"    BL      sub_F822AC28 \n"
"    LDR     R0, [R6, #0x1C] \n"
"    MOV     R2, R7 \n"
"    MOV     R1, #0x100 \n"
"    BL      sub_0068EE14 /*_WaitForAllEventFlag*/ \n"
"    TST     R0, #1 \n"
"    BEQ     loc_F810D074 \n"
"    LDR     R1, =0x164D \n"
"    B       loc_F810D144 \n"

"loc_F810D0D0:\n"
"    CMP     R1, #0x2A \n"
"    BNE     loc_F810D0E8 \n"

"loc_F810D0D8:\n"
"    LDR     R0, [SP, #0x28] \n"
"    ADD     R1, SP, #0xC \n"
"    BL      sub_F810CF34 \n"
"    B       loc_F810D074 \n"

"loc_F810D0E8:\n"
"    CMP     R1, #0x2D \n"
"    BNE     loc_F810D100 \n"
"    BL      sub_F80F7528 \n"
"    BL      sub_F80F8300 \n"
"    BL      sub_F80F7E10 \n"
"    B       loc_F810D074 \n"

"loc_F810D100:\n"
"    CMP     R1, #0x2E \n"
"    BNE     loc_F810D150 \n"
"    LDR     R0, [R6, #0x1C] \n"
"    MOV     R1, #4 \n"
"    BL      sub_0068EF08 /*_ClearEventFlag*/ \n"
"    LDR     R1, =0xF81086B0 \n"
"    LDR     R0, =0xFFFFF400 \n"
"    MOV     R2, #4 \n"
"    BL      sub_F80F6F6C \n"
"    BL      sub_F80F7208 \n"
"    LDR     R0, [R6, #0x1C] \n"
"    MOV     R2, R7 \n"
"    MOV     R1, #4 \n"
"    BL      sub_0068ED30 /*_WaitForAnyEventFlag*/ \n"
"    TST     R0, #1 \n"
"    BEQ     loc_F810D074 \n"
"    LDR     R1, =0x1675 \n"

"loc_F810D144:\n"
"    LDR     R0, =0xF8108E30 \n"
"    BL      _DebugAssert \n"
"    B       loc_F810D074 \n"

"loc_F810D150:\n"
"    LDR     R0, [SP, #0x28] \n"
"    MOV     R8, #1 \n"
"    LDR     R1, [R0] \n"
"    CMP     R1, #0x12 \n"
"    CMPNE   R1, #0x13 \n"
"    BNE     loc_F810D1B8 \n"
"    LDR     R1, [R0, #0x7C] \n"
"    ADD     R1, R1, R1, LSL#1 \n"
"    ADD     R1, R0, R1, LSL#2 \n"
"    SUB     R1, R1, #8 \n"
"    LDMIA   R1, {R2,R3,R9} \n"
"    STMIA   R5, {R2,R3,R9} \n"
"    BL      sub_F810B3F4 \n"
"    LDR     R0, [SP, #0x28] \n"
"    LDR     R1, [R0, #0x7C] \n"
"    LDR     R3, [R0, #0x8C] \n"
"    LDR     R2, [R0, #0x90] \n"
"    ADD     R0, R0, #4 \n"
"    BLX     R3 \n"
"    LDR     R0, [SP, #0x28] \n"
"    BL      sub_F810E8C4 \n"
"    LDR     R0, [SP, #0x28] \n"
"    LDR     R1, [R0, #0x7C] \n"
"    LDR     R2, [R0, #0x98] \n"
"    LDR     R3, [R0, #0x94] \n"
"    B       loc_F810D4D0 \n"

"loc_F810D1B8:\n"
"    CMP     R1, #0x14 \n"
"    CMPNE   R1, #0x15 \n"
"    CMPNE   R1, #0x16 \n"
"    CMPNE   R1, #0x17 \n"
"    BNE     loc_F810D270 \n"
"    ADD     R3, SP, #0xC \n"
"    MOV     R2, SP \n"
"    ADD     R1, SP, #0x1C \n"
"    BL      sub_F810B658 \n"
"    CMP     R0, #1 \n"
"    MOV     R9, R0 \n"
"    CMPNE   R9, #5 \n"
"    BNE     loc_F810D20C \n"
"    LDR     R0, [SP, #0x28] \n"
"    MOV     R2, R9 \n"
"    LDR     R1, [R0, #0x7C]! \n"
"    LDR     R12, [R0, #0x10]! \n"
"    LDR     R3, [R0, #4] \n"
"    MOV     R0, SP \n"
"    BLX     R12 \n"
"    B       loc_F810D244 \n"

"loc_F810D20C:\n"
"    LDR     R0, [SP, #0x28] \n"
"    CMP     R9, #2 \n"
"    LDR     R3, [R0, #0x90] \n"
"    CMPNE   R9, #6 \n"
"    BNE     loc_F810D258 \n"
"    LDR     R12, [R0, #0x8C] \n"
"    MOV     R2, R9 \n"
"    MOV     R1, #1 \n"
"    MOV     R0, SP \n"
"    BLX     R12 \n"
"    LDR     R0, [SP, #0x28] \n"
"    MOV     R2, SP \n"
"    ADD     R1, SP, #0x1C \n"
"    BL      sub_F810CC24 \n"

"loc_F810D244:\n"
"    LDR     R0, [SP, #0x28] \n"
"    LDR     R2, [SP, #0xC] \n"
"    MOV     R1, R9 \n"
"    BL      sub_F810CED4 \n"
"    B       loc_F810D4D8 \n"

"loc_F810D258:\n"
"    LDR     R1, [R0, #0x7C] \n"
"    LDR     R12, [R0, #0x8C] \n"
"    MOV     R2, R9 \n"
"    ADD     R0, R0, #4 \n"
"    BLX     R12 \n"
"    B       loc_F810D4D8 \n"

"loc_F810D270:\n"
"    CMP     R1, #0x24 \n"
"    CMPNE   R1, #0x25 \n"
"    BNE     loc_F810D2BC \n"
"    LDR     R1, [R0, #0x7C] \n"
"    ADD     R1, R1, R1, LSL#1 \n"
"    ADD     R1, R0, R1, LSL#2 \n"
"    SUB     R1, R1, #8 \n"
"    LDMIA   R1, {R2,R3,R9} \n"
"    STMIA   R5, {R2,R3,R9} \n"
"    BL      sub_F810A3BC \n"
"    LDR     R0, [SP, #0x28] \n"
"    LDR     R1, [R0, #0x7C] \n"
"    LDR     R3, [R0, #0x8C] \n"
"    LDR     R2, [R0, #0x90] \n"
"    ADD     R0, R0, #4 \n"
"    BLX     R3 \n"
"    LDR     R0, [SP, #0x28] \n"
"    BL      sub_F810A818 \n"
"    B       loc_F810D4D8 \n"

"loc_F810D2BC:\n"
"    ADD     R1, R0, #4 \n"
"    LDMIA   R1, {R2,R3,R9} \n"
"    STMIA   R5, {R2,R3,R9} \n"
"    LDR     R1, [R0] \n"
"    CMP     R1, #0x28 \n"
"    ADDCC   PC, PC, R1, LSL#2 \n"
"    B       loc_F810D4C0 \n"
"    B       loc_F810D378 \n"
"    B       loc_F810D378 \n"
"    B       loc_F810D380 \n"
"    B       loc_F810D388 \n"
"    B       loc_F810D388 \n"
"    B       loc_F810D388 \n"
"    B       loc_F810D378 \n"
"    B       loc_F810D380 \n"
"    B       loc_F810D388 \n"
"    B       loc_F810D388 \n"
"    B       loc_F810D3A0 \n"
"    B       loc_F810D3A0 \n"
"    B       loc_F810D4AC \n"
"    B       loc_F810D4B4 \n"
"    B       loc_F810D4B4 \n"
"    B       loc_F810D4B4 \n"
"    B       loc_F810D4B4 \n"
"    B       loc_F810D4BC \n"
"    B       loc_F810D4C0 \n"
"    B       loc_F810D4C0 \n"
"    B       loc_F810D4C0 \n"
"    B       loc_F810D4C0 \n"
"    B       loc_F810D4C0 \n"
"    B       loc_F810D4C0 \n"
"    B       loc_F810D390 \n"
"    B       loc_F810D398 \n"
"    B       loc_F810D398 \n"
"    B       loc_F810D398 \n"
"    B       loc_F810D3AC \n"
"    B       loc_F810D3AC \n"
"    B       loc_F810D3B4 \n"
"    B       loc_F810D3EC \n"
"    B       loc_F810D424 \n"
"    B       loc_F810D45C \n"
"    B       loc_F810D494 \n"
"    B       loc_F810D494 \n"
"    B       loc_F810D4C0 \n"
"    B       loc_F810D4C0 \n"
"    B       loc_F810D49C \n"
"    B       loc_F810D4A4 \n"

"loc_F810D378:\n"
"    BL      sub_F8108C44 \n"
"    B       loc_F810D4C0 \n"

"loc_F810D380:\n"
"    BL      sub_F8108F84 \n"
"    B       loc_F810D4C0 \n"

"loc_F810D388:\n"
"    BL      sub_F81091F0 \n"
"    B       loc_F810D4C0 \n"

"loc_F810D390:\n"
"    BL      sub_F81094E8 \n"
"    B       loc_F810D4C0 \n"

"loc_F810D398:\n"
"    BL      sub_F8109704 \n"
"    B       loc_F810D4C0 \n"

"loc_F810D3A0:\n"
"    BL      sub_F8109AEC_my \n"  // --> Patched. Old value = 0xF8109AEC.
"    MOV     R8, #0 \n"
"    B       loc_F810D4C0 \n"

"loc_F810D3AC:\n"
"    BL      sub_F8109C2C \n"
"    B       loc_F810D4C0 \n"

"loc_F810D3B4:\n"
"    LDRH    R1, [R0, #4] \n"
"    STRH    R1, [SP, #0x1C] \n"
"    LDRH    R1, [R4, #2] \n"
"    STRH    R1, [SP, #0x1E] \n"
"    LDRH    R1, [R4, #4] \n"
"    STRH    R1, [SP, #0x20] \n"
"    LDRH    R1, [R4, #6] \n"
"    STRH    R1, [SP, #0x22] \n"
"    LDRH    R1, [R0, #0xC] \n"
"    STRH    R1, [SP, #0x24] \n"
"    LDRH    R1, [R4, #0xA] \n"
"    STRH    R1, [SP, #0x26] \n"
"    BL      sub_F810E54C \n"
"    B       loc_F810D4C0 \n"

"loc_F810D3EC:\n"
"    LDRH    R1, [R0, #4] \n"
"    STRH    R1, [SP, #0x1C] \n"
"    LDRH    R1, [R4, #2] \n"
"    STRH    R1, [SP, #0x1E] \n"
"    LDRH    R1, [R4, #4] \n"
"    STRH    R1, [SP, #0x20] \n"
"    LDRH    R1, [R4, #6] \n"
"    STRH    R1, [SP, #0x22] \n"
"    LDRH    R1, [R4, #8] \n"
"    STRH    R1, [SP, #0x24] \n"
"    LDRH    R1, [R4, #0xA] \n"
"    STRH    R1, [SP, #0x26] \n"
"    BL      sub_F810E6C4 \n"
"    B       loc_F810D4C0 \n"

"loc_F810D424:\n"
"    LDRH    R1, [R4] \n"
"    STRH    R1, [SP, #0x1C] \n"
"    LDRH    R1, [R0, #6] \n"
"    STRH    R1, [SP, #0x1E] \n"
"    LDRH    R1, [R4, #4] \n"
"    STRH    R1, [SP, #0x20] \n"
"    LDRH    R1, [R4, #6] \n"
"    STRH    R1, [SP, #0x22] \n"
"    LDRH    R1, [R4, #8] \n"
"    STRH    R1, [SP, #0x24] \n"
"    LDRH    R1, [R4, #0xA] \n"
"    STRH    R1, [SP, #0x26] \n"
"    BL      sub_F810E778 \n"
"    B       loc_F810D4C0 \n"

"loc_F810D45C:\n"
"    LDRH    R1, [R4] \n"
"    STRH    R1, [SP, #0x1C] \n"
"    LDRH    R1, [R4, #2] \n"
"    STRH    R1, [SP, #0x1E] \n"
"    LDRH    R1, [R4, #4] \n"
"    STRH    R1, [SP, #0x20] \n"
"    LDRH    R1, [R4, #6] \n"
"    STRH    R1, [SP, #0x22] \n"
"    LDRH    R1, [R0, #0xC] \n"
"    STRH    R1, [SP, #0x24] \n"
"    LDRH    R1, [R4, #0xA] \n"
"    STRH    R1, [SP, #0x26] \n"
"    BL      sub_F810E820 \n"
"    B       loc_F810D4C0 \n"

"loc_F810D494:\n"
"    BL      sub_F810A150 \n"
"    B       loc_F810D4C0 \n"

"loc_F810D49C:\n"
"    BL      sub_F810A91C \n"
"    B       loc_F810D4C0 \n"

"loc_F810D4A4:\n"
"    BL      sub_F810AC04 \n"
"    B       loc_F810D4C0 \n"

"loc_F810D4AC:\n"
"    BL      sub_F810AEC0 \n"
"    B       loc_F810D4C0 \n"

"loc_F810D4B4:\n"
"    BL      sub_F810B080 \n"
"    B       loc_F810D4C0 \n"

"loc_F810D4BC:\n"
"    BL      sub_F810B1E8 \n"

"loc_F810D4C0:\n"
"    LDR     R0, [SP, #0x28] \n"
"    LDR     R1, [R0, #0x7C] \n"
"    LDR     R2, [R0, #0x90] \n"
"    LDR     R3, [R0, #0x8C] \n"

"loc_F810D4D0:\n"
"    ADD     R0, R0, #4 \n"
"    BLX     R3 \n"

"loc_F810D4D8:\n"
"    LDR     R0, [SP, #0x28] \n"
"    LDR     R0, [R0] \n"
"    CMP     R0, #0x10 \n"
"    BEQ     loc_F810D510 \n"
"    BGT     loc_F810D500 \n"
"    CMP     R0, #1 \n"
"    CMPNE   R0, #4 \n"
"    CMPNE   R0, #0xE \n"
"    BNE     loc_F810D544 \n"
"    B       loc_F810D510 \n"

"loc_F810D500:\n"
"    CMP     R0, #0x13 \n"
"    CMPNE   R0, #0x17 \n"
"    CMPNE   R0, #0x1A \n"
"    BNE     loc_F810D544 \n"

"loc_F810D510:\n"
"    LDRSH   R0, [R4] \n"
"    CMN     R0, #0xC00 \n"
"    LDRNESH R1, [R4, #8] \n"
"    CMNNE   R1, #0xC00 \n"
"    STRNEH  R0, [SP, #0x1C] \n"
"    STRNEH  R1, [SP, #0x24] \n"
"    BNE     loc_F810D544 \n"
"    ADD     R0, SP, #0x10 \n"
"    BL      sub_F810EAD0 \n"
"    LDRH    R0, [SP, #0x10] \n"
"    STRH    R0, [SP, #0x1C] \n"
"    LDRH    R0, [SP, #0x18] \n"
"    STRH    R0, [SP, #0x24] \n"

"loc_F810D544:\n"
"    LDR     R0, [SP, #0x28] \n"
"    CMP     R8, #1 \n"
"    BNE     loc_F810D594 \n"
"    LDR     R1, [R0, #0x7C] \n"
"    MOV     R2, #0xC \n"
"    ADD     R1, R1, R1, LSL#1 \n"
"    ADD     R0, R0, R1, LSL#2 \n"
"    SUB     R8, R0, #8 \n"
"    LDR     R0, =0xC3A10 \n"
"    ADD     R1, SP, #0x1C \n"
"    BL      sub_006AB658 \n"
"    LDR     R0, =0xC3A1C \n"
"    MOV     R2, #0xC \n"
"    ADD     R1, SP, #0x1C \n"
"    BL      sub_006AB658 \n"
"    LDR     R0, =0xC3A28 \n"
"    MOV     R2, #0xC \n"
"    MOV     R1, R8 \n"
"    BL      sub_006AB658 \n"
"    B       loc_F810D60C \n"

"loc_F810D594:\n"
"    LDR     R0, [R0] \n"
"    MOV     R3, #1 \n"
"    CMP     R0, #0xB \n"
"    BNE     loc_F810D5D8 \n"
"    MOV     R2, #0 \n"
"    STRD    R2, [SP] \n"
"    MOV     R2, R3 \n"
"    MOV     R1, R3 \n"
"    MOV     R0, #0 \n"
"    BL      sub_F8108A18 \n"
"    MOV     R3, #1 \n"
"    MOV     R2, #0 \n"
"    STRD    R2, [SP] \n"
"    MOV     R2, R3 \n"
"    MOV     R1, R3 \n"
"    MOV     R0, #0 \n"
"    B       loc_F810D608 \n"

"loc_F810D5D8:\n"
"    MOV     R2, #1 \n"
"    STRD    R2, [SP] \n"
"    MOV     R3, R2 \n"
"    MOV     R1, R2 \n"
"    MOV     R0, R2 \n"
"    BL      sub_F8108A18 \n"
"    MOV     R3, #1 \n"
"    MOV     R2, R3 \n"
"    MOV     R1, R3 \n"
"    MOV     R0, R3 \n"
"    STR     R3, [SP] \n"
"    STR     R3, [SP, #4] \n"

"loc_F810D608:\n"
"    BL      sub_F8108B90 \n"

"loc_F810D60C:\n"
"    LDR     R0, [SP, #0x28] \n"
"    BL      sub_F810E4B8 \n"
"    B       loc_F810CFA4 \n"
);
}

/*************************************************************/
//** sub_F8109AEC_my @ 0xF8109AEC - 0xF8109C28, length=80
void __attribute__((naked,noinline)) sub_F8109AEC_my() {
asm volatile (
"    STMFD   SP!, {R4-R8,LR} \n"
"    LDR     R7, =0x5438 \n"
"    MOV     R4, R0 \n"
"    LDR     R0, [R7, #0x1C] \n"
"    MOV     R1, #0x3E \n"
"    BL      sub_0068EF08 /*_ClearEventFlag*/ \n"
"    MOV     R2, #0 \n"
"    LDRSH   R0, [R4, #4] \n"
"    MOV     R1, R2 \n"
"    BL      sub_F8108718 \n"
"    MOV     R6, R0 \n"
"    LDRSH   R0, [R4, #6] \n"
"    BL      sub_F8108878 \n"
"    LDRSH   R0, [R4, #8] \n"
"    BL      sub_F81088D0 \n"
"    LDRSH   R0, [R4, #0xA] \n"
"    BL      sub_F8108928 \n"
"    LDRSH   R0, [R4, #0xC] \n"
"    MOV     R1, #0 \n"
"    BL      sub_F8108980 \n"
"    MOV     R5, R0 \n"
"    LDR     R0, [R4] \n"
"    LDR     R8, =0xC3A28 \n"
"    CMP     R0, #0xB \n"
"    MOVEQ   R6, #0 \n"
"    MOVEQ   R5, R6 \n"
"    BEQ     loc_F8109B80 \n"
"    CMP     R6, #1 \n"
"    BNE     loc_F8109B80 \n"
"    LDRSH   R0, [R4, #4] \n"
"    LDR     R1, =0xF8108670 \n"
"    MOV     R2, #2 \n"
"    BL      sub_F822A194 \n"
"    STRH    R0, [R4, #4] \n"
"    MOV     R0, #0 \n"
"    STR     R0, [R7, #0x28] \n"
"    B       loc_F8109B88 \n"

"loc_F8109B80:\n"
"    LDRH    R0, [R8] \n"
"    STRH    R0, [R4, #4] \n"

"loc_F8109B88:\n"
"    CMP     R5, #1 \n"
"    LDRNEH  R0, [R8, #8] \n"
"    BNE     loc_F8109BA4 \n"
"    LDRSH   R0, [R4, #0xC] \n"
"    LDR     R1, =0xF81086F4 \n"
"    MOV     R2, #0x20 \n"
"    BL      sub_F810E508 \n"

"loc_F8109BA4:\n"
"    STRH    R0, [R4, #0xC] \n"
"    LDRSH   R0, [R4, #6] \n"
"    BL      sub_F80F7274_my \n"  // --> Patched. Old value = 0xF80F7274.
"    LDRSH   R0, [R4, #8] \n"
"    MOV     R1, #1 \n"
"    BL      sub_F80F7AC8 \n"
"    MOV     R1, #0 \n"
"    ADD     R0, R4, #8 \n"
"    BL      sub_F80F7B50 \n"
"    LDRSH   R0, [R4, #0xE] \n"
"    BL      sub_F81028DC \n"
"    LDR     R4, =0xBB8 \n"
"    CMP     R6, #1 \n"
"    BNE     loc_F8109BFC \n"
"    LDR     R0, [R7, #0x1C] \n"
"    MOV     R2, R4 \n"
"    MOV     R1, #2 \n"
"    BL      sub_0068EE14 /*_WaitForAllEventFlag*/ \n"
"    TST     R0, #1 \n"
"    LDRNE   R0, =0xF8108E30 \n"
"    MOVNE   R1, #0x820 \n"
"    BLNE    _DebugAssert \n"

"loc_F8109BFC:\n"
"    CMP     R5, #1 \n"
"    LDMNEFD SP!, {R4-R8,PC} \n"
"    LDR     R0, [R7, #0x1C] \n"
"    MOV     R2, R4 \n"
"    MOV     R1, #0x20 \n"
"    BL      sub_0068EE14 /*_WaitForAllEventFlag*/ \n"
"    TST     R0, #1 \n"
"    LDMEQFD SP!, {R4-R8,PC} \n"
"    LDMFD   SP!, {R4-R8,LR} \n"
"    LDR     R1, =0x825 \n"
"    LDR     R0, =0xF8108E30 \n"
"    B       _DebugAssert \n"
);
}

/*************************************************************/
//** sub_F80F7274_my @ 0xF80F7274 - 0xF80F72DC, length=27
void __attribute__((naked,noinline)) sub_F80F7274_my() {
asm volatile (
"    STMFD   SP!, {R4-R6,LR} \n"
"    LDR     R5, =0x50A4 \n"
"    MOV     R4, R0 \n"
"    LDR     R0, [R5, #4] \n"
"    CMP     R0, #1 \n"
"    MOVNE   R1, #0x154 \n"
"    LDRNE   R0, =0xF80F7070 \n"
"    BLNE    _DebugAssert \n"
"    CMN     R4, #0xC00 \n"
"    LDREQSH R4, [R5, #2] \n"
"    CMN     R4, #0xC00 \n"
"    LDREQ   R1, =0x15A \n"
"    LDREQ   R0, =0xF80F7070 \n"
"    STRH    R4, [R5, #2] \n"
"    BLEQ    _DebugAssert \n"
"    MOV     R0, R4 \n"
"    BL      apex2us \n"  // --> Patched. Old value = _apex2us.
"    MOV     R4, R0 \n"
//"  BL      _sub_F8174B50 \n"  // --> Nullsub call removed.
"    MOV     R0, R4 \n"
"    BL      sub_F817E2C8 \n"
"    TST     R0, #1 \n"
"    LDMEQFD SP!, {R4-R6,PC} \n"
"    LDMFD   SP!, {R4-R6,LR} \n"
"    LDR     R1, =0x15F \n"
"    LDR     R0, =0xF80F7070 \n"
"    B       _DebugAssert \n"
);
}
