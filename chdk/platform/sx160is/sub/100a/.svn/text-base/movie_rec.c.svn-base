/*
 * movie_rec.c - auto-generated by CHDK code_gen.
 */
#include "conf.h"

void change_video_tables(int a, int b){
}

void  set_quality(int *x){ // -17 highest; +12 lowest
 if (conf.video_mode) *x=12-((conf.video_quality-1)*(12+17)/(99-1));
}

/*************************************************************/
//** movie_record_task @ 0xFF990214 - 0xFF99039C, length=99
void __attribute__((naked,noinline)) movie_record_task() {
asm volatile (
"    STMFD   SP!, {R2-R10,LR} \n"
"    LDR     R8, =0xFF98FE44 \n"
"    LDR     R4, =0x74E0 \n"
"    LDR     R9, =0x65B \n"
"    LDR     R10, =0x2710 \n"
"    MVN     R7, #0 \n"
"    MOV     R5, #1 \n"
"    MOV     R6, #0 \n"

"loc_FF990234:\n"
"    LDR     R0, [R4, #0x28] \n"
"    MOV     R2, #0 \n"
"    ADD     R1, SP, #4 \n"
"    BL      sub_004372A4 /*_ReceiveMessageQueue*/ \n"
"    LDR     R0, [R4, #0x30] \n"
"    CMP     R0, #0 \n"
"    LDRNE   R0, [R4, #0x10] \n"
"    CMPNE   R0, #2 \n"
"    LDRNE   R0, [R4, #0x44] \n"
"    CMPNE   R0, #6 \n"
"    BNE     loc_FF990380 \n"
"    LDR     R0, [SP, #4] \n"
"    LDR     R1, [R0] \n"
"    SUB     R1, R1, #2 \n"
"    CMP     R1, #0xD \n"
"    ADDCC   PC, PC, R1, LSL#2 \n"
"    B       loc_FF990380 \n"
"    B       loc_FF9902FC \n"
"    B       loc_FF990320 \n"
"    B       loc_FF990330 \n"
"    B       loc_FF990338 \n"
"    B       loc_FF990304 \n"
"    B       loc_FF990340 \n"
"    B       loc_FF99036C \n"
"    B       loc_FF990374 \n"
"    B       loc_FF990310 \n"
"    B       loc_FF990380 \n"
"    B       loc_FF99037C \n"
"    B       loc_FF9902D8 \n"
"    B       loc_FF9902AC \n"

"loc_FF9902AC:\n"
"    STR     R6, [R4, #0x40] \n"
"    STR     R6, [R4, #0x34] \n"
"    STR     R7, [R4, #0xC4] \n"
"    STRH    R6, [R4, #6] \n"
"    STR     R8, [R4, #0xAC] \n"
"    LDR     R0, [R4, #0x10] \n"
"    ADD     R0, R0, #1 \n"
"    STR     R0, [R4, #0x10] \n"
"    MOV     R0, #6 \n"
"    STR     R0, [R4, #0x44] \n"
"    B       loc_FF9902F4 \n"

"loc_FF9902D8:\n"
"    STR     R6, [R4, #0x40] \n"
"    STR     R7, [R4, #0xC4] \n"
"    STR     R8, [R4, #0xAC] \n"
"    LDR     R0, [R4, #0x10] \n"
"    ADD     R0, R0, #1 \n"
"    STR     R0, [R4, #0x10] \n"
"    STR     R5, [R4, #0x44] \n"

"loc_FF9902F4:\n"
"    STR     R5, [R4, #8] \n"
"    B       loc_FF990380 \n"

"loc_FF9902FC:\n"
"    BL      sub_FF98FB7C \n"
"    B       loc_FF990380 \n"

"loc_FF990304:\n"
"    LDR     R1, [R4, #0xAC] \n"
"    BLX     R1 \n"
//begin patch
"    LDR     R0, =video_compression_rate \n" // added
"    BL      set_quality \n"                 // added
//end patch
"    B       loc_FF990380 \n"

"loc_FF990310:\n"
"    LDR     R1, [R0, #0x18] \n"
"    LDR     R0, [R0, #4] \n"
"    BL      sub_FFAD94DC \n"
"    B       loc_FF990380 \n"

"loc_FF990320:\n"
"    LDR     R0, [R4, #0x44] \n"
"    CMP     R0, #5 \n"
"    STRNE   R5, [R4, #0x34] \n"
"    B       loc_FF990380 \n"

"loc_FF990330:\n"
"    BL      sub_FF98F7FC \n"
"    B       loc_FF990380 \n"

"loc_FF990338:\n"
"    BL      sub_FF98F6CC \n"
"    B       loc_FF990380 \n"

"loc_FF990340:\n"
"    LDR     R0, =0xC5F34 \n"
"    LDR     R0, [R0, #8] \n"
"    CMP     R0, #0 \n"
"    LDRNE   R2, =0xFF98F620 \n"
"    LDRNE   R0, =0xFF98F674 \n"
"    MOVNE   R3, #0 \n"
"    MOVNE   R1, R3 \n"
"    BLNE    sub_FF86880C \n"
"    MOV     R0, #3 \n"
"    STR     R0, [R4, #0x44] \n"
"    B       loc_FF990380 \n"

"loc_FF99036C:\n"
"    BL      sub_FF98F5AC \n"
"    B       loc_FF990380 \n"

"loc_FF990374:\n"
"    BL      sub_FF990CF4 \n"
"    B       loc_FF990380 \n"

"loc_FF99037C:\n"
"    BL      sub_FF990C1C \n"

"loc_FF990380:\n"
"    LDR     R1, [SP, #4] \n"
"    LDR     R3, =0xFF98F30C \n"
"    STR     R6, [R1] \n"
"    STR     R9, [SP] \n"
"    LDR     R0, [R4, #0x2C] \n"
"    MOV     R2, R10 \n"
"    BL      sub_00437C1C /*_PostMessageQueueStrictly*/ \n"
"    B       loc_FF990234 \n"
);
}
