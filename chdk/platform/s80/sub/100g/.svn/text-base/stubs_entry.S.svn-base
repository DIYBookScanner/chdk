// !!! THIS FILE IS GENERATED. DO NOT EDIT. !!!
#include "stubs_asm.h"

// Camera info:
//   Firmware Ver GM1.00G   // Found @ 0xff81a484, "GM1.00G" @ 0xff81a491
//   Firmware build timestamp: Dec 19 2005 17:03:55
//   Canon PowerShot S80

// Values for makefile.inc
//   PLATFORMID = 12538 (0x30fa) // Found @ 0xfffe0130
//   MAXRAMADDR = 0x01ffffff
//   MEMISOSTART = 0x000a27f0

// Stubs below should be checked. Stub not matched 100%, or difference found to current 'stubs_entry_2.S'
//    Name                                     Address      Rule  %  Comp to stubs_entry_2.S
NHSTUB(EnterToCompensationEVF                 ,0xff953378) //  1 87%
NHSTUB(ExitFromCompensationEVF                ,0xff954c84) //  2 90%
NHSTUB(GetFocusLensSubjectDistance            ,0xffaaab38) //  1 96%
NHSTUB(GetFocusLensSubjectDistanceFromLens    ,0xffaab0d8) //  3 52%
NHSTUB(GetSystemTime                          ,0xff814de8) //  1 96%
//NHSTUB(LEDDrive                             ,0xff82d8c4) //120        *** != 0xff82dbb8
//NHSTUB(MoveFocusLensToDistance              ,0xffab89d8) //102        *** != 0x00000000
//NHSTUB(PutInNdFilter                        ,0xffab63b4) //  1 92%    *** != 0xffab67c0
// ALT: NHSTUB(PutInNdFilter, 0xffab63fc) // 1 25/2
// ALT: NHSTUB(PutInNdFilter, 0xffab67c0) // 1 25/2
// ALT: NHSTUB(PutInNdFilter, 0xffab834c) // 1 25/2
// ALT: NHSTUB(PutInNdFilter, 0xffab8394) // 1 25/2
// ALT: NHSTUB(PutInNdFilter, 0xffab63fc) // 2 25/2
// ALT: NHSTUB(PutInNdFilter, 0xffab67c0) // 2 25/2
// ALT: NHSTUB(PutInNdFilter, 0xffab834c) // 2 25/2
// ALT: NHSTUB(PutInNdFilter, 0xffab8394) // 2 25/2
NHSTUB(PutOutNdFilter                         ,0xffab6808) //  1 94%
//NHSTUB(Remove                               ,0xff8c6724) //  3 52%
NHSTUB(UnsetZoomForMovie                      ,0xff9a40c0) //  1 89%
NHSTUB(add_ptp_handler                        ,0xffa610a8) //  1 96%
// ERROR: free is not found.                               //--- ---    *** != 0xffb05b78
// ERROR: kbd_read_keys_r2 is not found.                   //--- ---    *** != 0xff82737c
//NHSTUB(kbd_pwr_off                          ,0xff829344) //  1 83%    *** != 0xff828fec
// ALT: NHSTUB(kbd_pwr_off, 0xff829360) // 1 5/1
// ALT: NHSTUB(kbd_pwr_off, 0xff828fec) // 3 5/1
// ALT: NHSTUB(kbd_pwr_off, 0xff829008) // 3 5/1
// ALT: NHSTUB(kbd_pwr_off, 0xff8290f4) // 3 5/1
// ALT: NHSTUB(kbd_pwr_off, 0xff829110) // 3 5/1
// ALT: NHSTUB(kbd_pwr_off, 0xff8291e0) // 3 5/1
// ALT: NHSTUB(kbd_pwr_off, 0xff8291fc) // 3 5/1
NHSTUB(kbd_pwr_on                             ,0xff928b28) //  1 55%
// ALT: NHSTUB(kbd_pwr_on, 0xff928b54) // 1 5/4
// ALT: NHSTUB(kbd_pwr_on, 0xff928c90) // 1 5/4
// ALT: NHSTUB(kbd_pwr_on, 0xff92b544) // 1 5/4
// ALT: NHSTUB(kbd_pwr_on, 0xff92b570) // 1 5/4
NHSTUB(malloc                                 ,0xffb05b6c) //  1 53%
NHSTUB(taskIdListGet                          ,0xffb137b0) //  1 82%
NHSTUB(localtime                              ,0xffafd2c0) //  1 93%
NHSTUB(Mount_FileSystem                       ,0xff86f2bc) //  1 73%
//NHSTUB(MakeAFScan                           ,0xff955dd8) //  1        *** != 0x00000000

// Check of modemap from 'platform/CAMERA/shooting.c':
// Firmware modemap table found @ff968528 -> ff968528
// Strange mode 0x00010013 in firmware, found in modemap as 19 (MODE_VIDEO_STD)
// Strange mode 0x00010014 in firmware but not in current modemap
// Strange mode 0x00010015 in firmware but not in current modemap
// Strange mode 0x00010016 in firmware but not in current modemap
// Strange mode 0x00020017 in firmware but not in current modemap
// Strange mode 0x00030018 in firmware but not in current modemap

// Values below can be overridden in 'stubs_min.S':
//DEF(levent_table                            ,0xff96122c) // Found @0xff96122c,          stubs_min = 0xff96122c (0xFF96122C)
//DEF(FlashParamsTable                        ,0xff96abdc) // Found @0xff96abdc,          stubs_min = 0xff96abdc (0xFF96ABDC)

// Values below go in 'lib.c':
//int get_flash_params_count(void) { return 0x5e; }                          // Found @0xff96db3c

// Misc stuff
// LED table init @ 0xff82dd64
// LED #1: 0xc022007c, offset 0x104
// LED #2: 0xc022006c, offset 0x144
// LED #3: 0xc022008c, offset 0x4
// LED #4: 0xc0220088, offset 0x44
// LED #5: 0xc0220058, offset 0x84
// LED #6: 0xc0220084, offset 0x204
// LED #7: 0xc0220080, offset 0x244

// canon_data_src: 0xffb1a3f0, canon_data_len: 0xefe0

// For capt_seq.c
DEF(_nrflag,0x6e10) // Found @ ff9580b8 (0x6e10)
//static long *nrflag = (long*)(0x6e10);       // Found @ ff9580b8

// Stubs below matched 100%.
//    Name                                     Address                Comp to stubs_entry_2.S
NHSTUB(AllocateUncacheableMemory              ,0xff814bb0) //  1
NHSTUB(Close                                  ,0xff870568) //120
NHSTUB(CreateTask                             ,0xff821564) //120
NHSTUB(DebugAssert                            ,0xff813a80) //1100
NHSTUB(DeleteFile_Fut                         ,0xff869328) //  1
NHSTUB(DoAELock                               ,0xff9513c4) //120
//NHSTUB(DoAFLock                             ,0xff95124c) //120            == 0xff95124c
NHSTUB(ExecuteEventProcedure                  ,0xff816ac8) //  1
NHSTUB(ExitTask                               ,0xff821924) //120
NHSTUB(Fclose_Fut                             ,0xff869468) //120
NHSTUB(Feof_Fut                               ,0xff86967c) //  1
NHSTUB(Fflush_Fut                             ,0xff8696b4) //  1
NHSTUB(Fgets_Fut                              ,0xff8695ec) //  1
NHSTUB(Fopen_Fut                              ,0xff86942c) //120
NHSTUB(Fread_Fut                              ,0xff86954c) //120
NHSTUB(FreeUncacheableMemory                  ,0xff814be4) //  1
NHSTUB(Fseek_Fut                              ,0xff869634) //120
NHSTUB(Fwrite_Fut                             ,0xff86959c) //120
NHSTUB(GetBatteryTemperature                  ,0xff82d36c) //102
NHSTUB(GetCCDTemperature                      ,0xff82d358) //102
NHSTUB(GetCurrentAvValue                      ,0xffab63a0) //120
//NHSTUB(GetDrive_ClusterSize                 ,0xff86f8a4) //119            == 0xff86f8a4
//NHSTUB(GetDrive_FreeClusters                ,0xff86f93c) //1103            == 0xff86f93c
//NHSTUB(GetDrive_TotalClusters               ,0xff86f900) //119            == 0xff86f900
NHSTUB(GetOpticalTemperature                  ,0xff82d344) //120
NHSTUB(GetParameterData                       ,0xff96dad0) //  1
NHSTUB(GetPropertyCase                        ,0xff824554) //  1
NHSTUB(GetZoomLensCurrentPoint                ,0xffa973d4) //120
NHSTUB(GetZoomLensCurrentPosition             ,0xffa973e8) //102
NHSTUB(GiveSemaphore                          ,0xff82115c) //120
NHSTUB(IsStrobeChargeCompleted                ,0xff904154) //  1
NHSTUB(LocalTime                              ,0xff814108) //115
NHSTUB(LockMainPower                          ,0xff9682a0) //120
NHSTUB(MakeDirectory_Fut                      ,0xff8693b4) //  1
NHSTUB(MoveZoomLensWithPoint                  ,0xffa97264) //120
NHSTUB(Open                                   ,0xff870540) //120
NHSTUB(PT_PlaySound                           ,0xff95f6e8) //  1
NHSTUB(PostLogicalEventForNotPowerType        ,0xff963ef0) //120
NHSTUB(PostLogicalEventToUI                   ,0xff963f7c) //120
NHSTUB(Read                                   ,0xff8705fc) //120
NHSTUB(RefreshPhysicalScreen                  ,0xff97eea8) //120
NHSTUB(RenameFile_Fut                         ,0xff8692a8) //  1
NHSTUB(Restart                                ,0xff822bac) //  1
NHSTUB(SetAE_ShutterSpeed                     ,0xffabba8c) //102
NHSTUB(SetAutoShutdownTime                    ,0xff968198) //120
NHSTUB(SetCurrentCaptureModeType              ,0xff99855c) //120
NHSTUB(SetFileAttributes                      ,0xff870720) //  1
NHSTUB(SetLogicalEventActive                  ,0xff9660f8) //1104
NHSTUB(SetParameterData                       ,0xff96d9f0) //  1
NHSTUB(SetPropertyCase                        ,0xff824438) //  1
//NHSTUB(SetScriptMode                        ,0xff966160) //120            == 0xff966160
NHSTUB(SleepTask                              ,0xff821478) //120
NHSTUB(TakeSemaphore                          ,0xff820f74) //1101
NHSTUB(TurnOffBackLight                       ,0xff9b93a8) //  1
NHSTUB(TurnOnBackLight                        ,0xff9b937c) //  1
NHSTUB(TurnOnDisplay                          ,0xff9289c0) //120
NHSTUB(TurnOffDisplay                         ,0xff9289d0) //120
NHSTUB(UnlockAE                               ,0xff9513e4) //120
NHSTUB(UnlockAF                               ,0xff9512b4) //120
NHSTUB(UnlockMainPower                        ,0xff968354) //120
NHSTUB(UpdateMBROnFlash                       ,0xff86f580) //  1
//NHSTUB(VbattGet                             ,0xff82c2b4) //120            == 0xff82c2b4
NHSTUB(Write                                  ,0xff870608) //120
NHSTUB(WriteSDCard                            ,0xff87ee40) //  1
NHSTUB(_log                                   ,0xffaef0ac) //121
NHSTUB(_log10                                 ,0xffaef754) //121
NHSTUB(_pow                                   ,0xffaefc44) //121
NHSTUB(_sqrt                                  ,0xffaf3f90) //  1
NHSTUB(apex2us                                ,0xff8aef88) //  1
NHSTUB(close                                  ,0xffb02b2c) //109
NHSTUB(exmem_alloc                            ,0xff8127e0) //  1
NHSTUB(kbd_p1_f                               ,0xff826558) //  1
NHSTUB(kbd_p1_f_cont                          ,0xff826564) //109
NHSTUB(kbd_p2_f                               ,0xff826934) //  1
NHSTUB(lseek                                  ,0xffb02c70) //  1
NHSTUB(memcmp                                 ,0xffafc6a0) //120
NHSTUB(memcpy                                 ,0xffafc6dc) //120
NHSTUB(memset                                 ,0xffafc754) //120
NHSTUB(mkdir                                  ,0xff870750) //  1
NHSTUB(open                                   ,0xffb03170) //109
NHSTUB(closedir                               ,0xffafeacc) //  1
NHSTUB(qsort                                  ,0xffafbf00) //  1
NHSTUB(rand                                   ,0xffafbf24) //  1
NHSTUB(realloc                                ,0xffae5f78) //115
NHSTUB(srand                                  ,0xffafbf48) //  1
NHSTUB(stat                                   ,0xffafeb94) //  1
NHSTUB(strcat                                 ,0xffafc774) //  1
NHSTUB(strchr                                 ,0xffafc7a0) //  1
NHSTUB(strcmp                                 ,0xffafc7c4) //120
NHSTUB(strcpy                                 ,0xffafc958) //120
NHSTUB(strftime                               ,0xffafdfe0) //  1
NHSTUB(strlen                                 ,0xffafcabc) //120
NHSTUB(strncmp                                ,0xffafcb20) //  1
NHSTUB(strncpy                                ,0xffafcb64) //  1
NHSTUB(strrchr                                ,0xffafcbe8) //  1
NHSTUB(strtol                                 ,0xffafc33c) //  1
NHSTUB(isdigit                                ,0xffaf8a70) //  1
NHSTUB(isspace                                ,0xffaf8ae8) //  1
NHSTUB(isalpha                                ,0xffaf8a40) //  1
NHSTUB(isupper                                ,0xffaf8b00) //  1
NHSTUB(islower                                ,0xffaf8aa0) //  1
NHSTUB(ispunct                                ,0xffaf8ad0) //  1
NHSTUB(isxdigit                               ,0xffaf8b18) //  1
NHSTUB(toupper                                ,0xffaf8b40) //  1
NHSTUB(tolower                                ,0xffaf8b30) //  1
NHSTUB(taskLock                               ,0xffb13e6c) //  1
NHSTUB(taskUnlock                             ,0xffb13f14) //  1
NHSTUB(taskName                               ,0xffb136a8) //  1
NHSTUB(errnoOfTaskGet                         ,0xffaff298) //  1
NHSTUB(readdir                                ,0xffafea98) //  1
NHSTUB(strtoul                                ,0xffafc4e4) //  1
NHSTUB(strpbrk                                ,0xffafcbac) //  1
NHSTUB(utime                                  ,0xffafec28) //  1
NHSTUB(mktime                                 ,0xffafd488) //  1
NHSTUB(opendir                                ,0xffafeb00) //  1
NHSTUB(memchr                                 ,0xffafc66c) //  1
NHSTUB(memPartInfoGet                         ,0xffb05f8c) //  1
NHSTUB(iosDrvInstall                          ,0xffb04010) //  1
NHSTUB(iosDevAdd                              ,0xffb03d4c) //  1
NHSTUB(iosDevDelete                           ,0xffb03d24) //  1
NHSTUB(GetCurrentTargetDistance               ,0xffab8748) //  1
NHSTUB(taskCreateHookAdd                      ,0xffb091ec) //  1
NHSTUB(taskDeleteHookAdd                      ,0xffb09128) //  1
NHSTUB(Unmount_FileSystem                     ,0xff86f3d4) //  1
NHSTUB(taskSuspend                            ,0xffb138b8) //  1
NHSTUB(taskResume                             ,0xffb13a8c) //  1
NHSTUB(time                                   ,0xffafe00c) //  1
NHSTUB(vsprintf                               ,0xffb003ec) //115
NHSTUB(EngDrvRead                             ,0xff8810a0) //102
