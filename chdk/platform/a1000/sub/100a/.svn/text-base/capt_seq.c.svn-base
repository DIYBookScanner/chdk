#include "lolevel.h"
#include "platform.h"
#include "core.h"

static long *nrflag = (long*)0x8594;

#include "../../../generic/capt_seq.c"

void __attribute__((naked,noinline)) sub_FFD0C284_my() {
     asm volatile (
		     "STMFD   SP!, {R1-R9,LR}\n"
		     "MOV     R4, R0\n"
		     "BL      sub_FFD0CE6C\n"
		     "MOV    R1, #-1\n"
		     "BL      sub_FFC166E0\n"
		     "MOV     R2, #4\n"
		     "ADD      R1, SP, #0x28-0x24\n"
		     "MOV     R0, #0x8A\n"
		     "BL      sub_FFC594CC\n"
		     "TST     R0, #1\n"
		     "MOVNE   R1, #0x35C\n"
		     "LDRNE   R0, =0xFFD0C3FC\n"
		     "BLNE    sub_FFC0BD98\n"
		     "LDR     R7, =0x18D48\n"
		     "LDR     R6, =0x18C90\n"
		     "LDRSH   R1, [R7,#0xE]\n"
		     "LDR     R0, [R6,#0x80]\n"
		     "BL      sub_FFCD6C44\n"
		     "BL      sub_FFC336C8\n"
		     "LDR     R3, =0x8598\n"
		     "STRH    R0, [R4,#0x94]\n"
		     "STR    R3, [SP]\n"     // for the final until everyone uses 'new' gcc\n"
		     "MOV     R1, R0\n"
		     "LDRH    R0, [R6,#0x54]\n"
		     "LDRSH   R2, [R7,#0xC]\n"
		     "SUB     R3, R3, #4\n"
		     "BL      sub_FFD0D464\n"
		     "BL      wait_until_remote_button_is_released\n"
		     "BL      capt_seq_hook_set_nr\n" // +-----------> so immediately override NR
		     "LDR     R0, [R4,#0x1C]\n"
		     "LDR     R8, =0x8594\n"
		     "CMP     R0, #0\n"
		     "LDRNE   R0, [R8]\n"
		     "CMPNE   R0, #6\n"
		     "MOVNE   R0, #1\n"
		     "STRNE   R0, [R8]\n"
		     "LDR     R0, [R8,#4]\n"
		     "BL      sub_FFC33C1C\n"
		     "LDRH    R0, [R6,#0x8A]\n"
		     "CMP     R0, #3\n"
		     "LDRNE   R0, [R4,#0xC]\n"
		     "CMPNE   R0, #1\n"
		     "BLS     loc_FFD0C340\n"
		     "LDRH    R0, [R6,#0x88]\n"
		     "CMP     R0, #0\n"
		     "LDREQH  R0, [R6,#0x84]\n"
		     "CMPEQ   R0, #2\n"
		     "MOVNE   R0, #0\n"
		     "BNE     loc_FFD0C344\n"
		     
	"loc_FFD0C340:\n"
		     "MOV     R0, #1\n"
		     
	"loc_FFD0C344:\n"
		     "BL      sub_FFC754CC\n"
		     "LDRSH   R0, [R4,#0x94]\n"
		     "BL      sub_FFDEEA1C\n"
		     "BL      sub_FFC754DC\n"
		     "MOV     R1, R4\n"
		     "LDR     R0, =0xFFD0BE40\n"
		     "BL      sub_FFC7548C\n"
		     "LDR     R0, [R8]\n"
		     "MOV     R8, #0\n"
		     "CMP     R0, #1\n"
		     "BEQ     loc_FFD0C43C\n"
		     "CMP     R0, #2\n"
		     "BEQ     loc_FFD0C498\n"
		     "CMP     R0, #3\n"
		     "BEQ     loc_FFD0C4B4\n"
		     "CMP     R0, #6\n"
		     "BNE     loc_FFD0C4CC\n"
		     "MOV     R0, #2\n"
		     "STR     R0, [SP,#0x28-0x20]\n"
		     "LDR     R0, [R4,#0x18]\n"
		     "LDR     R5, [SP,#0x28-0x24]\n"
		     "MOV     R3, #2\n"
		     "ADD     R2, SP, #0x28-0x20\n"
		     "MOV     R1, #0x33\n"
		     "BL      sub_FFC5997C\n"
		     "LDR     R0, [R4,#8]\n"
		     "LDR     R3, =0xFFD0BF80\n"
		     "ORR     R0, R0, #0x200\n"
		     "STR     R0, [R4,#8]\n"
		     "STR     R4, [SP]\n"
		     "LDR     R0, [R4,#0x2C]\n"
		     "LDR     R1, =0xFFD0BE58\n"
		     "CMP     R5, #0\n"
		     "MOV     R2, R4\n"
		     "BEQ     loc_FFD0C4AC\n"
		     "BL      sub_FFC76C78\n"
		     "B       loc_FFD0C48C\n"
		     
	"loc_FFD0C43C:\n"
		     "STR     R8, [SP,#0x28-0x20]\n"
		     "LDR     R0, [R4,#0x18]\n"
		     "LDR     R5, [SP,#0x28-0x24]\n"
		     "MOV     R3, #2\n"
		     "ADD     R2, SP, #0x28-0x20\n"
		     "MOV     R1, #0x33\n"
		     "BL      sub_FFC5997C\n"
		     "LDR     R0, [R4,#8]\n"
		     "LDR     R3, =0xFFD0BF80\n"
		     "ORR     R0, R0, #0x40\n"
		     "STR     R0, [R4,#8]\n"
		     "STR     R4, [SP]\n"
		     "LDR     R0, [R4,#0x2C]\n"
		     "LDR     R1, =0xFFD0BE58\n"
		     "CMP     R5, #0\n"
		     "MOV     R2, R4\n"
		     "BEQ     loc_FFD0C488\n"
		     "BL      sub_FFC76B6C\n"
		     "B       loc_FFD0C48C\n"
		     
	"loc_FFD0C488:\n"
		     "BL      sub_FFC74BEC\n"
		     
	"loc_FFD0C48C:\n"
		     "ANDS    R5, R0, #1\n"
		     "MOVNE   R5, #0x1D\n"
		     "B       loc_FFD0C4D8\n"
		     
	"loc_FFD0C498:\n"
		     "LDR     R2, [SP,#0x28-0x24]\n"
		     "ADD     R1, SP, #0x28-0x20\n"
		     "MOV     R0, R4\n"
		     "BL      sub_FFD0C708\n"
		     "B       loc_FFD0C4C4\n"
		     
	"loc_FFD0C4AC:\n"
		     "BL      sub_FFC74CFC\n"
		     "B       loc_FFD0C48C\n"
		     
	"loc_FFD0C4B4:\n"
		     "LDR     R2, [SP,#0x28-0x24]\n"
		     "ADD     R1, SP, #0x28-0x20\n"
		     "MOV     R0, R4\n"
		     "BL      sub_FFD0C034\n"
		     
	"loc_FFD0C4C4:\n"
		     "MOV     R5, R0\n"
		     "B       loc_FFD0C4D8\n"
		     
	"loc_FFD0C4CC:\n"
		     "MOV     R1, #0x398\n"
		     "LDR     R0, =0xFFD0C3FC\n"
		     "BL      sub_FFC0BD98\n"
		     
	"loc_FFD0C4D8:\n"
		     "TST     R5, #1\n"
		     "MOVNE   R0, R5\n"
		     "BNE     locret_FFD0C5FC\n"
		     "LDR     R0, =0xFFD0BE54\n"
		     "MOV     R1, #0\n"
		     "BL      sub_FFC7548C\n"
		     "LDRH    R0, [R6,#0x8A]\n"
		     "CMP     R0, #3\n"
		     "LDRNE   R0, [R4,#0xC]\n"
		     "CMPNE   R0, #1\n"
		     "LDRHIH  R0, [R6,#0x88]\n"
		     "BHI     loc_FFD0C514\n"
		     "LDRH    R0, [R6,#0xA4]\n"
		     "CMP     R0, #5\n"
		     "BLEQ    sub_FFC87F4C\n"
		     
	"loc_FFD0C514:\n"
		     "LDR     R2, =0x8598\n"
		     "LDR     R0, [R4,#0x18]\n"
		     "MOV     R3, #4\n"
		     "MOV     R1, #0x45\n"
		     "BL      sub_FFC5997C\n"
		     "MOV     R0, #1\n"
		     "BL      sub_FFCD6C5C\n"
		     "STR     R0, [R4,#0xC4]\n"
		     "BL      sub_FFC4D5E0\n"
		     "LDRH    R0, [R6,#0x8A]\n"
		     "CMP     R0, #3\n"
		     "LDRNE   R0, [R4,#0xC]\n"
		     "CMPNE   R0, #1\n"
		     "BLS     loc_FFD0C560\n"
		     "LDRH    R0, [R6,#0x88]\n"
		     "CMP     R0, #0\n"
		     "LDREQH  R0, [R6,#0x84]\n"
		     "CMPEQ   R0, #2\n"
		     "BNE     loc_FFD0C58C\n"
		     
	"loc_FFD0C560:\n"
		     "BL      sub_FFD0CE6C\n"
		     "LDR     R5, =0x3B3\n"
		     "LDR     R2, =0x3A98\n"
		     "LDRNE   R3, =0xFFD0C3FC\n"
		     "MOV     R1, #4\n"
		     "STR     R5, [SP]\n"
		     "BL      sub_FFC4EEF4\n"
		     "CMP     R0, #0\n"
		     "MOVNE   R1, R5\n"
		     "LDRNE   R0, =0xFFD0C3FC\n"
		     "BLNE    sub_FFC0BD98\n"
		     	
	"loc_FFD0C58C:\n"
		     "LDRH    R0, [SP,#0x28-0x20]\n"
		     "STRH    R0, [R4,#0x14]\n"
		     "LDRH    R0, [R6,#0x54]\n"
		     "LDRH    R1, [SP,#0x28-0x20]\n"
		     "BL      sub_FFD0D5AC\n"
		     "STR     R0, [R4,#0x98]\n"
		     "MOV     R0, #0xD8\n"
		     "MOV     R2, #2\n"
		     "MOV     R1, SP\n"
		     "STR     R8, [SP]\n"
		     "BL      sub_FFC594CC\n"
		     "TST     R0, #1\n"
		     "LDRNE   R1, =0x3C1\n"
		     "LDRNE   R0, =0xFFD0C3FC\n"
		     "BLNE    sub_FFC0BD98\n"
		     "LDR     R0, [R4,#0x98]\n"
		     "CMP     R0, #0\n"
		     "BNE     loc_FFD0C5F8\n"
		     "LDR     R0, [R7]\n"
		     "CMP     R0, #0\n"
		     "BEQ     loc_FFD0C5EC\n"
		     "LDRH    R0, [SP]\n"
		     "CMP     R0, #1\n"
		     "BEQ     loc_FFD0C5F8\n"
		     
	"loc_FFD0C5EC:\n"
		     "MOV     R1, #0\n"
		     "MOV     R0, #0x45\n"
		     "BL      sub_FFC676C4\n"
		     
	"loc_FFD0C5F8:\n"
		     "MOV     R0, #0\n"
		     
	"locret_FFD0C5FC:\n"
		     "LDMFD   SP!, {R1-R9,PC}\n"
    ".ltorg\n"
     );
}
//0xFFC4B22C

void __attribute__((naked,noinline)) task_CaptSeqTask_my()
{
	asm volatile (
"                 STMFD   SP!, {R3-R7,LR}\n"
"                 LDR     R6, =0x5190\n"
" loc_FFC4B234:\n"
"                 LDR     R0, [R6,#8]\n"
"                 MOV     R2, #0\n"
"                 MOV     R1, SP\n"
"                 BL      sub_FFC1693C\n"
"                 TST     R0, #1\n"
"                 BEQ     loc_FFC4B260\n"
"                 LDR     R1, =0x539\n"
"                 LDR     R0, =0xFFC4AE40\n"
"                 BL      sub_FFC0BD98\n"
"                 BL      sub_FFC0BB50\n"
"                 LDMFD   SP!, {R3-R7,PC}\n"
" loc_FFC4B260:\n"
"                 LDR     R0, [SP,#0x18-0x18]\n"
"                 LDR     R1, [R0]\n"
"                 CMP     R1, #0x1D\n"
"                 ADDLS   PC, PC, R1,LSL#2\n"
"                 B       loc_FFC4B42C\n"
" loc_FFC4B274:\n"
"                 B       loc_FFC4B2EC\n"
" loc_FFC4B278:\n"
"                 B       loc_FFC4B2F4\n"
" loc_FFC4B27C:\n"
"                 B       loc_FFC4B2FC\n"
" loc_FFC4B280:\n"
"                 B       loc_FFC4B310\n"
" loc_FFC4B284:\n"
"                 B       loc_FFC4B308\n"
" loc_FFC4B288:\n"
"                 B       loc_FFC4B318\n"
" loc_FFC4B28C:\n"
"                 B       loc_FFC4B320\n"
" loc_FFC4B290:\n"
"                 B       loc_FFC4B32C\n"
" loc_FFC4B294:\n"
"                 B       loc_FFC4B384\n"
" loc_FFC4B298:\n"
"                 B       loc_FFC4B310\n"
" loc_FFC4B29C:\n"
"                 B       loc_FFC4B38C\n"
" loc_FFC4B2A0:\n"
"                 B       loc_FFC4B39C\n"
" loc_FFC4B2A4:\n"
"                 B       loc_FFC4B3A4\n"
" loc_FFC4B2A8:\n"
"                 B       loc_FFC4B3AC\n"
" loc_FFC4B2AC:\n"
"                 B       loc_FFC4B3B4\n"
" loc_FFC4B2B0:\n"
"                 B       loc_FFC4B3BC\n"
" loc_FFC4B2B4:\n"
"                 B       loc_FFC4B3C4\n"
" loc_FFC4B2B8:\n"
"                 B       loc_FFC4B3CC\n"
" loc_FFC4B2BC:\n"
"                 B       loc_FFC4B3D8\n"
" loc_FFC4B2C0:\n"
"                 B       loc_FFC4B3E0\n"
" loc_FFC4B2C4:\n"
"                 B       loc_FFC4B3E8\n"
" loc_FFC4B2C8:\n"
"                 B       loc_FFC4B3F0\n"
" loc_FFC4B2CC:\n"
"                 B       loc_FFC4B3F8\n"
" loc_FFC4B2D0:\n"
"                 B       loc_FFC4B404\n"
" loc_FFC4B2D4:\n"
"                 B       loc_FFC4B40C\n"
" loc_FFC4B2D8:\n"
"                 B       loc_FFC4B414\n"
" loc_FFC4B2DC:\n"
"                 B       loc_FFC4B41C\n"
" loc_FFC4B2E0:\n"
"                 B       loc_FFC4B424\n"
" loc_FFC4B2E4:\n"
"                 B       loc_FFC4B438\n"
" loc_FFC4B2E8:\n"
"                 B       loc_FFC4B438\n"
" loc_FFC4B2EC:\n"
"                 BL      sub_FFC4BAB8\n"
"                 BL	  shooting_expo_param_override\n"
"                 B       loc_FFC4B324\n"
" loc_FFC4B2F4:\n"
//"                 BL      sub_FFC4B554\n"
"                 BL      sub_FFC4B554_my\n"
"                 B       loc_FFC4B438\n"
" loc_FFC4B2FC:\n"
"                 MOV     R0, #1\n"
"                 BL      sub_FFC4BC54\n"
"                 B       loc_FFC4B438\n"
" loc_FFC4B308:\n"
"                 BL      sub_FFC4B738\n"
"                 B       loc_FFC4B438\n"
" loc_FFC4B310:\n"
"                 BL      sub_FFC4BA98\n"
"                 B       loc_FFC4B438\n"
" loc_FFC4B318:\n"
"                 BL      sub_FFC4BAA0\n"
"                 B       loc_FFC4B438\n"
" loc_FFC4B320:\n"
"                 BL      sub_FFC4BB74\n"
"\n"
" loc_FFC4B324:\n"
"                 BL      sub_FFC4959C\n"
"                 B       loc_FFC4B438\n"
" loc_FFC4B32C:\n"
"                 LDR     R4, [R0,#0xC]\n"
"                 BL      sub_FFC4BAA8\n"
"                 MOV     R0, R4\n"
"                 BL      sub_FFD0B3CC\n"
"                 TST     R0, #1\n"
"                 MOV     R5, R0\n"
"                 BNE     loc_FFC4B36C\n"
"                 BL      sub_FFC5965C\n"
"                 STR     R0, [R4,#0x18]\n"
"                 MOV     R0, R4\n"
"                 BL      sub_FFD0C1BC\n"
"                 MOV     R0, R4\n"
"                 BL      sub_FFD0C670\n"
"                 MOV     R5, R0\n"
"                 LDR     R0, [R4,#0x18]\n"
"                 BL      sub_FFC59870\n"
" loc_FFC4B36C:\n"
"                 BL      sub_FFC4BA98\n"
"                 MOV     R2, R4\n"
"                 MOV     R1, #9\n"
"                 MOV     R0, R5\n"
"                 BL      sub_FFC49978\n"
"                 B       loc_FFC4B438\n"
" loc_FFC4B384:\n"
"                 BL      sub_FFC4BBD4\n"
"                 B       loc_FFC4B324\n"
" loc_FFC4B38C:\n"
"                 LDR     R0, =0x18C90\n"
"                 LDR     R0, [R0,#0x4C]\n"
//"                 BL      sub_FFC4BF6C\n"
"                 BL      sub_FFC4BF6C_my\n"
"                 B       loc_FFC4B438\n"
" loc_FFC4B39C:\n"
"                 BL      sub_FFC4C214\n"
"                 B       loc_FFC4B438\n"
" loc_FFC4B3A4:\n"
"                 BL      sub_FFC4C2A0\n"
"                 B       loc_FFC4B438\n"
" loc_FFC4B3AC:\n"
"                 BL      sub_FFD0B5F0\n"
"                 B       loc_FFC4B438\n"
" loc_FFC4B3B4:\n"
"                 BL      sub_FFD0B7D8\n"
"                 B       loc_FFC4B438\n"
" loc_FFC4B3BC:\n"
"                 BL      sub_FFD0B868\n"
"                 B       loc_FFC4B438\n"
" loc_FFC4B3C4:\n"
"                 BL      sub_FFD0B910\n"
"                 B       loc_FFC4B438\n"
" loc_FFC4B3CC:\n"
"                 MOV     R0, #0\n"
"                 BL      sub_FFD0BAB4\n"
"                 B       loc_FFC4B438\n"
" loc_FFC4B3D8:\n"
"                 BL      sub_FFD0BBF4\n"
"                 B       loc_FFC4B438\n"
" loc_FFC4B3E0:\n"
"                 BL      sub_FFD0BC88\n"
"                 B       loc_FFC4B438\n"
" loc_FFC4B3E8:\n"
"                 BL      sub_FFD0BD4C\n"
"                 B       loc_FFC4B438\n"
" loc_FFC4B3F0:\n"
"                 BL      sub_FFC4BDBC\n"
"                 B       loc_FFC4B438\n"
" loc_FFC4B3F8:\n"
"                 BL      sub_FFC4BDE8\n"
"                 BL      sub_FFC1416C\n"
"                 B       loc_FFC4B438\n"
" loc_FFC4B404:\n"
"                 BL      sub_FFD0B9CC\n"
"                 B       loc_FFC4B438\n"
" loc_FFC4B40C:\n"
"                 BL      sub_FFD0BA10\n"
"                 B       loc_FFC4B438\n"
" loc_FFC4B414:\n"
"                 BL      sub_FFC4D74C\n"
"                 B       loc_FFC4B438\n"
" loc_FFC4B41C:\n"
"                 BL      sub_FFC4D768\n"
"                 B       loc_FFC4B438\n"
" loc_FFC4B424:\n"
"                 BL      sub_FFC4D778\n"
"                 B       loc_FFC4B438\n"
" loc_FFC4B42C:\n"
"                 LDR     R1, =0x65E\n"
"                 LDR     R0, =0xFFC4AE40\n"
"                 BL      sub_FFC0BD98\n"
" loc_FFC4B438:\n"
"                 LDR     R0, [SP,#0x18-0x18]\n"
"                 LDR     R1, [R0,#4]\n"
"                 LDR     R0, [R6,#4]\n"
"                 BL      sub_FFC166AC\n"
"                 LDR     R4, [SP,#0x18-0x18]\n"
"                 LDR     R0, [R4,#8]\n"
"                 CMP     R0, #0\n"
"                 LDREQ   R1, =0x11D\n"
"                 LDREQ   R0, =0xFFC4AE40\n"
"                 BLEQ    sub_FFC0BD98\n"
"                 MOV     R0, #0\n"
"                 STR     R0, [R4,#8]\n"
"                 B       loc_FFC4B234\n"
);
}

void __attribute((naked,noinline)) sub_FFC4BF6C_my() {
     asm volatile (
"                 STMFD   SP!, {R4-R9,LR}\n"
"                 MOV     R9, R0\n"
"                 MOV     R0, #0x41\n"
"                 SUB     SP, SP, #0x3C\n"
"                 MOV     R6, #0\n"
"                 STR     R0, [SP,#0x58-0x20]\n"
"                 BL      sub_FFC4BF3C\n"
"                 CMP     R0, #0\n"
"                 MOVNE   R1, #0x17C\n"
"                 BNE     loc_FFC4C130\n"
"                 LDR     R5, =0x51B4\n"
"                 LDR     R1, =0x40E\n"
"                 LDR     R0, [R5,#8]\n"
"                 BL      sub_FFC166E0\n"
"                 BL      sub_FFC5965C\n"
"                 STR     R0, [R5,#4]\n"
"                 MOV     R0, #0\n"
"                 BL      sub_FFC5361C\n"
"                 STR     R0, [SP,#0x58-0x2C]\n"
"                 ADD     R0, SP, #0x58-0x2C\n"
"                 ADD     R1, SP, #0x58-0x54\n"
"                 BL      sub_FFC53768\n"
"                 ADD     R0, SP, #0x58-0x54\n"
"                 BL      sub_FFC53650\n"
"                 STR     R0, [SP,#0x58-0x28]\n"
"                 LDR     R0, [R5,#4]\n"
"                 MOV     R3, #4\n"
"                 ADD     R2, SP, #0x58-0x28\n"
"                 MOV     R1, #0x34\n"
"                 BL      sub_FFC5997C\n"
"                 LDR     R8, [SP,#0x58-0x28]\n"
"                 BL      sub_FFC4C3A0\n"
"                 MOV     R4, #0\n"
"                 ADD     R1, SP, #0x58-0x2C\n"
"                 ADD     R0, SP, #0x58-0x28\n"
"                 STR     R4, [SP,#0x58-0x28]\n"
"                 STR     R4, [SP,#0x58-0x2C]\n"
"                 BL      sub_FFC1CF90\n"
"                 LDR     R0, [R5,#4]\n"
"                 MOV     R3, #2\n"
"                 ADD     R2, SP, #0x58-0x28\n"
"                 MOV     R1, #0x2F\n"
"                 BL      sub_FFC5997C\n"
"                 LDR     R0, [R5,#4]\n"
"                 MOV     R3, #2\n"
"                 ADD     R2, SP, #0x58-0x2C\n"
"                 MOV     R1, #0x2D\n"
"                 BL      sub_FFC5997C\n"
"                 ADD     R1, SP, #0x58-0x2C\n"
"                 ADD     R0, SP, #0x58-0x28\n"
"                 BL      sub_FFC21214\n"
"                 LDR     R0, [R5,#4]\n"
"                 MOV     R3, #2\n"
"                 ADD     R2, SP, #0x58-0x28\n"
"                 MOV     R1, #0x30\n"
"                 BL      sub_FFC5997C\n"
"                 ADD     R1, SP, #0x58-0x2C\n"
"                 ADD     R0, SP, #0x58-0x28\n"
"                 BL      sub_FFC1DFA4\n"
"                 LDR     R0, [R5,#4]\n"
"                 MOV     R3, #2\n"
"                 ADD     R2, SP, #0x58-0x2C\n"
"                 MOV     R1, #0x2E\n"
"                 BL      sub_FFC5997C\n"
"                 LDR     R0, [R5,#4]\n"
"                 MOV     R3, #2\n"
"                 ADD     R2, SP, #0x58-0x28\n"
"                 MOV     R1, #0xB8\n"
"                 BL      sub_FFC59A28\n"
"                 TST     R0, #1\n"
"                 MOVNE   R1, #0x148\n"
"                 LDRNE   R0, =0xFFC4C268\n"
"                 BLNE    sub_FFC0BD98\n"
"                 LDRH    R0, [SP,#0x58-0x28]\n"
"                 MOV     R3, #4\n"
"                 ADD     R2, SP, #0x58-0x2C\n"
"                 CMP     R0, #0\n"
"                 MOVNE   R0, #1\n"
"                 STR     R0, [SP,#0x58-0x2C]\n"
"                 LDR     R0, [R5,#4]\n"
"                 MOV     R1, #0x92\n"
"                 BL      sub_FFC5997C\n"
"                 MOV     R2, #1\n"
"                 ADD     R1, SP, #0x58-0x20\n"
"                 MOV     R0, #0xFA\n"
"                 BL      sub_FFC594CC\n"
"                 TST     R0, #1\n"
"                 LDRNE   R1, =0x193\n"
"                 LDRNE   R0, =0xFFC4C268\n"
"                 BLNE    sub_FFC0BD98\n"
"                 BL      sub_FFC4C488\n"
"                 CMP     R0, #0\n"
"                 LDRB    R0, [SP,#0x58-0x20]\n"
"                 MOVEQ   R2, #0x84\n"
"                 MOVNE   R2, #0x14\n"
"                 AND     R1, R0, #0xFF\n"
"                 ADD     R0, SP, #0x58-0x24\n"
"                 MOV     R3, R9\n"
"                 STR     R8, [SP,#0x58-0x58]\n"
"                 BL      sub_FFCE7B88\n"
"                 TST     R0, #1\n"
"                 LDRNE   R1, =0x197\n"
"                 BNE     loc_FFC4C130\n"
"                 BL      sub_FFC4C488\n"
"                 CMP     R0, #0\n"
"                 LDR     R0, =0x18C6C\n"
"                 LDR     R1, [SP,#0x58-0x24]\n"
"                 MOVEQ   R2, #0x80\n"
"                 MOVNE   R2, #0x10\n"
"                 BL      sub_FFCDFFA0\n"
"                 TST     R0, #1\n"
"                 BEQ     loc_FFC4C140\n"
"                 LDR     R1, =0x19F\n"
" loc_FFC4C130:\n"
"                 LDR     R0, =0xFFC4C268\n"
"                 BL      sub_FFC0BD98\n"
" loc_FFC4C138:\n"
"                 ADD     SP, SP, #0x3C\n"
"                 LDMFD   SP!, {R4-R9,PC}\n"
" loc_FFC4C140:\n"
"                 LDR     R0, [R5,#4]\n"
"                 MOV     R3, #4\n"
"                 ADD     R2, SP, #0x58-0x24\n"
"                 MOV     R1, #0x2B\n"
"                 MOV     R7, R5\n"
"                 BL      sub_FFC5997C\n"
"                 BL      sub_FFC3F018\n"
"                 LDRSB   R1, [SP,#0x58-0x20]\n"
"                 CMP     R0, R1\n"
"                 MOVEQ   R5, R4\n"
"                 BEQ     loc_FFC4C1BC\n"
"                 LDR     R6, =0x18C6C\n"
"                 MOV     R0, R6\n"
"                 BL      sub_FFCE9EB8\n"
"                 MOV     R5, R0\n"
"                 MOV     R0, R6\n"
"                 BL      sub_FFC400E4\n"
"                 BL      sub_FFC3FFE0\n"
"                 MOV     R1, R5\n"
"                 UMULL   R8, R1, R0, R5\n"
"                 MOV     R9, R1\n"
"                 BL      sub_FFC88868\n"
"                 CMP     R4, R9\n"
"                 MOV     R2, R8\n"
"                 CMPEQ   R0, R2\n"
"                 MOV     R5, R0\n"
"                 LDRCS   R1, =0x1AD\n"
"		  LDRCS	  R0, =0xFFC4C268\n"
"                 BLCS    sub_FFC0BD98\n"
"                 SUBS    R4, R8, R5\n"
"                 SBC     R5, R9, #0\n"
" loc_FFC4C1BC:\n"
"                 BL      taskcreate_MovieRecord_my\n"
"                 LDR     R0, =0x18C90\n"
"                 LDRH    R3, [R0,#0x4A]\n"
"                 LDRH    R2, [R0,#0x48]\n"
"                 LDR     R1, [R0,#0x44]\n"
"                 LDR     R0, [R0,#0x40]\n"
"                 BL      sub_FFC470E0\n"
"                 MOV     R3, #0\n"
"                 LDR     R2, =0xFFC4BEF8\n"
"                 MOV     R1, #0\n"
"                 LDR     R0, =0xFFC4BF18\n"
"                 ADD     R8, SP, #0x58-0x4C\n"
"                 STMIA   R8, {R0-R3}\n"
"                 LDR     R2, =0xFFC4BF1C\n"
"                 LDR     R1, =0xFFC4BF14\n"
"                 STMEA   SP, {R1-R3}\n"
"                 LDR     R1, [R7,#4]\n"
"                 MOV     R3, R5\n"
"                 MOV     R2, R4\n"
"                 MOV     R0, R6\n"
"                 BL      sub_FFC4743C\n"
"                 B       loc_FFC4C138\n"
);
}

void __attribute((naked,noinline)) taskcreate_MovieRecord_my() {
     asm volatile (
"                 STMFD   SP!, {R3-R9,LR}\n"
"                 LDR     R5, =0x5068\n"
"                 MOV     R6, #0\n"
"                 STR     R6, [R5,#0x20]\n"
"                 LDR     R0, [R5,#4]\n"
"                 LDR     R8, =0x2710\n"
"                 CMP     R0, #0\n"
"                 BNE     loc_FFC4811C\n"
"                 MOV     R0, #1\n"
"                 STR     R0, [R5,#4]\n"
"                 MOV     R0, #0\n"
"                 MOV     R1, #0\n"
"                 BL      sub_FFC0BC14\n"
"                 STR     R0, [R5,#0x10]\n"
"                 MOV     R0, #0\n"
"                 MOV     R1, #0\n"
"                 BL      sub_FFC0BC14\n"
"                 STR     R0, [R5,#0x14]\n"
"                 MOV     R0, #0\n"
"                 MOV     R1, #0xA\n"
"                 BL      sub_FFC0BBCC\n"
"                 STR     R0, [R5,#0x18]\n"
"                 MOV     R0, #0\n"
"                 MOV     R1, #0xA\n"
"                 BL      sub_FFC0BBCC\n"
"                 LDR     R7, =0x187F0\n"
"                 MOV     R4, #9\n"
"                 STR     R0, [R5,#0x1C]\n"
" loc_FFC480D4:\n"
"                 RSB     R0, R4, R4,LSL#3\n"
"                 MOV     R3, #0x2E4\n"
"                 STR     R6, [R7,R0,LSL#2]\n"
"                 STR     R3, [SP,#0x20-0x20]\n"
"                 ADD     R1, R7, R0,LSL#2\n"
"                 LDR     R0, [R5,#0x1C]\n"
"                 LDR     R3, =0xFFC473DC\n"
"                 MOV     R2, R8\n"
"                 BL      sub_FFC0BCD8\n"
"                 SUBS    R4, R4, #1\n"
"                 BPL     loc_FFC480D4\n"
"                 MOV     R3, #0\n"
"                 STR     R3, [SP,#0x20-0x20]\n"
"                 LDR     R3, =task_MovieRecord_my\n"
"                 MOV     R2, #0x1000\n"
"                 MOV     R1, #0x14\n"
"                 LDR     R0, =0xFFC48264\n"
"                 BL      sub_FFC0BB98\n"
" loc_FFC4811C:\n"
"                 BL      sub_FFD06DF4\n"
"                 BL      sub_FFC48180\n"
"                 MOV     R1, R0\n"
"                 LDR     R3, =0x2EE\n"
"                 MOV     R0, #0xB\n"
"                 STR     R0, [R1]\n"
"                 STR     R3, [SP,#0x20-0x20]\n"
"                 LDR     R0, [R5,#0x18]\n"
"                 LDR     R3, =0xFFC473DC\n"
"                 MOV     R2, R8\n"
"                 BL      sub_FFC0BCD8\n"
"                 LDMFD   SP!, {R3-R9,PC}\n"
);
}

void __attribute((naked,noinline)) task_MovieRecord_my() {
     asm volatile (
"                 STMFD   SP!, {R2-R8,LR}\n"
"                 LDR     R8, =0x332\n"
"                 LDR     R7, =0x2710\n"
"                 LDR     R4, =0x5068\n"
"                 MOV     R6, #0\n"
"                 MOV     R5, #1\n"
"\n"
" loc_FFC47F74:\n"
"                 LDR     R0, [R4,#0x18]\n"
"                 MOV     R2, #0\n"
"                 ADD     R1, SP, #0x20-0x1C\n"
"                 BL      sub_FFC1693C\n"
"                 LDR     R0, [R4,#0x20]\n"
"                 CMP     R0, #0\n"
"                 BNE     loc_FFC48044\n"
"                 LDR     R0, [SP,#0x20-0x1C]\n"
"                 LDR     R1, [R0]\n"
"                 SUB     R1, R1, #2\n"
"                 CMP     R1, #9\n"
"                 ADDLS   PC, PC, R1,LSL#2\n"
"                 B       loc_FFC48044\n"
" loc_FFC47FA8:\n"
"                 B       loc_FFC47FF8\n"
" loc_FFC47FAC:\n"
"                 B       loc_FFC48018\n"
" loc_FFC47FB0:\n"
"                 B       loc_FFC48028\n"
" loc_FFC47FB4:\n"
"                 B       loc_FFC48030\n"
" loc_FFC47FB8:\n"
"                 B       loc_FFC48000\n"
" loc_FFC47FBC:\n"
"                 B       loc_FFC48038\n"
" loc_FFC47FC0:\n"
"                 B       loc_FFC48008\n"
" loc_FFC47FC4:\n"
"                 B       loc_FFC48044\n"
" loc_FFC47FC8:\n"
"                 B       loc_FFC48040\n"
" loc_FFC47FCC:\n"
"                 B       loc_FFC47FD0\n"
" loc_FFC47FD0:\n"
"                 STR     R6, [R4,#0x34]\n"
"                 LDR     R0, =0xFFC47C58\n"
"                 LDR     R2, =0xFFC475F0\n"
"                 LDR     R1, =0x18918\n"
"                 STR     R0, [R4,#0xA0]\n"
"                 LDR     R0, =0xFFC476D4\n"
"                 STR     R6, [R4,#0x24]\n"
"                 BL      sub_FFCA1E2C\n"
"                 STR     R5, [R4,#0x38]\n"
"                 B       loc_FFC48044\n"
" loc_FFC47FF8:\n"
"BL      unlock_optical_zoom\n"
"                 BL      sub_FFC47D50\n"
"                 B       loc_FFC48044\n"
" loc_FFC48000:\n"
"                 BL      sub_FFC47A58_my\n"
"                 B       loc_FFC48044\n"
" loc_FFC48008:\n"
"                 LDR     R1, [R0,#0x10]\n"
"                 LDR     R0, [R0,#4]\n"
"                 BL      sub_FFD07A18\n"
"                 B       loc_FFC48044\n"
" loc_FFC48018:\n"
"                 LDR     R0, [R4,#0x38]\n"
"                 CMP     R0, #5\n"
"                 STRNE   R5, [R4,#0x28]\n"
"                 B       loc_FFC48044\n"
" loc_FFC48028:\n"
"                 BL      sub_FFC47864\n"
"                 B       loc_FFC48044\n"
" loc_FFC48030:\n"
"                 BL      sub_FFC47720\n"
"                 B       loc_FFC48044\n"
" loc_FFC48038:\n"
"                 BL      sub_FFC4757C\n"
"                 B       loc_FFC48044\n"
" loc_FFC48040:\n"
"                 BL      sub_FFC481AC\n"
" loc_FFC48044:\n"
"                 LDR     R1, [SP,#0x20-0x1C]\n"
"                 LDR     R3, =0xFFC473DC\n"
"                 STR     R6, [R1]\n"
"                 STR     R8, [SP,#0x20-0x20]\n"
"                 LDR     R0, [R4,#0x1C]\n"
"                 MOV     R2, R7\n"
"                 BL      sub_FFC0BCD8\n"
"                 B       loc_FFC47F74\n"
);
}

void __attribute((naked,noinline)) sub_FFC47A58_my() {
     asm volatile (
"                 STMFD   SP!, {R4-R8,LR}\n"
"                 SUB     SP, SP, #0x40\n"
"                 MOV     R6, #0\n"
"                 LDR     R5, =0x5068\n"
"                 MOV     R4, R0\n"
"                 STR     R6, [SP,#0x58-0x28]\n"
"                 STR     R6, [SP,#0x58-0x30]\n"
"                 LDR     R0, [R5,#0x38]\n"
"                 MOV     R8, #4\n"
"                 CMP     R0, #3\n"
"                 STREQ   R8, [R5,#0x38]\n"
"                 LDR     R0, [R5,#0xA0]\n"
//"                 BLX     R0\n"
 ".long   0xE12FFF30\n"
"                 LDR     R0, [R5,#0x38]\n"
"                 CMP     R0, #4\n"
"                 BNE     loc_FFC47B30\n"
"                 ADD     R3, SP, #0x58-0x30\n"
"                 ADD     R2, SP, #0x58-0x30+4\n"
"                 ADD     R1, SP, #0x58-0x28\n"
"                 ADD     R0, SP, #0x58-0x24\n"
"                 BL      sub_FFD07BAC\n"
"                 CMP     R0, #0\n"
"                 MOV     R7, #1\n"
"                 BNE     loc_FFC47AD4\n"
"                 LDR     R1, [R5,#0x28]\n"
"                 CMP     R1, #1\n"
"                 BNE     loc_FFC47B38\n"
"                 LDR     R1, [R5,#0x50]\n"
"                 LDR     R2, [R5,#0x3C]\n"
"                 CMP     R1, R2\n"
"                 BCC     loc_FFC47B38\n"
" loc_FFC47AD4:\n"
"                 CMP     R0, #0x80000001\n"
"                 STREQ   R8, [R5,#0x54]\n"
"                 BEQ     loc_FFC47B0C\n"
"                 CMP     R0, #0x80000003\n"
"                 STREQ   R7, [R5,#0x54]\n"
"                 BEQ     loc_FFC47B0C\n"
"                 CMP     R0, #0x80000005\n"
"                 MOVEQ   R0, #2\n"
"                 BEQ     loc_FFC47B08\n"
"                 CMP     R0, #0x80000007\n"
"                 STRNE   R6, [R5,#0x54]\n"
"                 BNE     loc_FFC47B0C\n"
"                 MOV     R0, #3\n"
" loc_FFC47B08:\n"
"                 STR     R0, [R5,#0x54]\n"
" loc_FFC47B0C:\n"
"                 LDR     R0, =0x18948\n"
"                 LDR     R0, [R0,#8]\n"
"                 CMP     R0, #0\n"
"                 BEQ     loc_FFC47B24\n"
"                 BL      sub_FFC3262C\n"
"                 B       loc_FFC47B28\n"
" loc_FFC47B24:\n"
"                 BL      sub_FFC4757C\n"
" loc_FFC47B28:\n"
"                 MOV     R0, #5\n"
"                 STR     R0, [R5,#0x38]\n"
" loc_FFC47B30:\n"
"                 ADD     SP, SP, #0x40\n"
"                 LDMFD   SP!, {R4-R8,PC}\n"
" loc_FFC47B38:\n"
"                 LDR     LR, [SP,#0x58-0x28]\n"
"                 CMP     LR, #0\n"
"                 BEQ     loc_FFC47C00\n"
"                 STR     R7, [R5,#0x2C]\n"
"                 LDR     R0, [R5,#0x6C]\n"
"                 LDR     R1, [R4,#0x14]\n"
"                 LDR     R2, [R4,#0x18]\n"
"                 LDR     R12, [R4,#0xC]\n"
"                 ADD     R3, SP, #0x58-0x20\n"
"                 ADD     R8, SP, #0x58-0x44\n"
"                 STMIA   R8, {R0-R3}\n"
"                 LDR     R3, [R5,#0x58]\n"
"                 ADD     R2, SP, #0x58-0x1C\n"
"                 ADD     R8, SP, #0x58-0x50\n"
//"                 LDRD    R0, [SP,#0x58-0x30]\n"
".long   0xE1CD02D8\n"
"                 STMIA   R8, {R0,R2,R3}\n"
"                 STR     R1, [SP,#0x58-0x54]\n"
"                 STR     LR, [SP,#0x58-0x58]\n"
"                 LDMIB   R4, {R0,R1}\n"
"                 LDR     R3, [SP,#0x58-0x24]\n"
"                 MOV     R2, R12\n"
"                 BL      sub_FFCCE2A0\n"
"                 LDR     R0, [R5,#0x10]\n"
"                 MOV     R1, #0x3E8\n"
"                 BL      sub_FFC0B74C\n"
"                 CMP     R0, #9\n"
"                 BNE     loc_FFC47BB4\n"
"                 BL      sub_FFD08188\n"
"                 MOV     R0, #0x90000\n"
"                 STR     R7, [R5,#0x38]\n"
"                 B       loc_FFC47BCC\n"
" loc_FFC47BB4:\n"
"                 LDR     R0, [SP,#0x58-0x20]\n"
"                 CMP     R0, #0\n"
"                 BEQ     loc_FFC47BD4\n"
"                 BL      sub_FFD08188\n"
"                 MOV     R0, #0xA0000\n"
"                 STR     R7, [R5,#0x38]\n"
" loc_FFC47BCC:\n"
"                 BL      sub_FFC5D06C\n"
"                 B       loc_FFC47B30\n"
" loc_FFC47BD4:\n"
"                 BL      sub_FFCCE364\n"
"                 LDR     R0, [SP,#0x58-0x24]\n"
"                 LDR     R1, [SP,#0x58-0x1C]\n"
"                 BL      sub_FFD07F30\n"
"                 LDR     R0, [R5,#0x4C]\n"
"                 LDR     R1, =0x50D4\n"
"                 ADD     R0, R0, #1\n"
"                 STR     R0, [R5,#0x4C]\n"
"                 LDR     R0, [SP,#0x58-0x1C]\n"
"                 MOV     R2, #0\n"
"                 BL      sub_FFD05DA8_my\n"
" loc_FFC47C00:\n"
"                 LDR     R0, [R5,#0x50]\n"
"                 ADD     R0, R0, #1\n"
"                 STR     R0, [R5,#0x50]\n"
"                 LDR     R1, [R5,#0x78]\n"
"                 MUL     R0, R1, R0\n"
"                 LDR     R1, [R5,#0x74]\n"
"                 BL      sub_FFE730E8\n"
"                 MOV     R4, R0\n"
"                 BL      sub_FFD081C0\n"
"                 LDR     R1, [R5,#0x70]\n"
"                 CMP     R1, R4\n"
"                 BNE     loc_FFC47C3C\n"
"                 LDR     R0, [R5,#0x30]\n"
"                 CMP     R0, #1\n"
"                 BNE     loc_FFC47C50\n"
" loc_FFC47C3C:\n"
"                 LDR     R1, [R5,#0x84]\n"
"                 MOV     R0, R4\n"
//"                 BLX     R1\n"
".long   0xE12FFF31\n"
"                 STR     R4, [R5,#0x70]\n"
"                 STR     R6, [R5,#0x30]\n"
" loc_FFC47C50:\n"
"                 STR     R6, [R5,#0x2C]\n"
"                 B       loc_FFC47B30\n"
);
}

void __attribute((naked,noinline)) sub_FFD05DA8_my() {
     asm volatile (
"                 STMFD   SP!, {R4-R8,LR}\n"
"                 LDR     R4, =0x8074\n"
"                 LDR     LR, [R4]\n"
"                 LDR     R2, [R4,#8]\n"
"                 CMP     LR, #0\n"
"                 LDRNE   R3, [R4,#0xC]\n"
"                 MOV     R5, R2\n"
"                 CMPNE   R3, #1\n"
"                 MOVEQ   R2, #0\n"
"                 STREQ   R0, [R4]\n"
"                 STREQ   R2, [R4,#0xC]\n"
"                 BEQ     loc_FFD05E74\n"
"                 LDR     R3, [R4,#4]\n"
"                 LDR     R7, =table\n"
"                 ADD     R12, R3, R3,LSL#1\n"
"                 LDR     R3, [R7,R12,LSL#2]\n"
"                 ADD     R6, R7, #0x30\n"
"                 LDR     R8, [R6,R12,LSL#2]\n"
"                 SUB     R3, LR, R3\n"
"                 CMP     R3, #0\n"
"                 SUB     LR, LR, R8\n"
"                 BLE     loc_FFD05E30\n"
"                 ADD     R12, R7, R12,LSL#2\n"
"                 LDR     LR, [R12,#4]\n"
"                 CMP     LR, R3\n"
"                 ADDGE   R2, R2, #1\n"
"                 BGE     loc_FFD05E24\n"
"                 LDR     R12, [R12,#8]\n"
"                 CMP     R12, R3\n"
"                 ADDLT   R2, R2, #3\n"
"                 ADDGE   R2, R2, #2\n"
" loc_FFD05E24:\n"
"                 CMP     R2, #0x1A\n"
"                 MOVGE   R2, #0x19\n"
"                 B       loc_FFD05E64\n"
" loc_FFD05E30:\n"
"                 CMP     LR, #0\n"
"                 BGE     loc_FFD05E64\n"
"                 ADD     R3, R6, R12,LSL#2\n"
"                 LDR     R12, [R3,#4]\n"
"                 CMP     R12, LR\n"
"                 SUBLE   R2, R2, #1\n"
"                 BLE     loc_FFD05E5C\n"
"                 LDR     R3, [R3,#8]\n"
"                 CMP     R3, LR\n"
"                 SUBGT   R2, R2, #3\n"
"                 SUBLE   R2, R2, #2\n"
" loc_FFD05E5C:\n"
"                 CMP     R2, #0\n"
"                 MOVLT   R2, #0\n"
" loc_FFD05E64:\n"
"                 CMP     R2, R5\n"
"                 STRNE   R2, [R4,#8]\n"
"                 MOVNE   R2, #1\n"
"                 STRNE   R2, [R4,#0xC]\n"
" loc_FFD05E74:\n"
"                 LDR     R2, =CompressionRateTable\n"
"                 LDR     R3, [R4,#8]\n"
"                 LDR     R2, [R2,R3,LSL#2]\n"
		"LDR     R3, =video_mode\n"      // +
                "LDR     R3, [R3]\n"             // +
                "LDR     R3, [R3]\n"             // +
                "CMP     R3, #1\n"               // +
                "LDREQ   R3, =video_quality\n"   // +     
                "LDREQ   R3, [R3]\n"             // +     
                "LDREQ   R2, [R3]\n"             // +     

"                 STR     R2, [R1]\n"
"                 STR     R0, [R4]\n"
                "BL      mute_on_zoom\n"     // +
"                 LDMFD   SP!, {R4-R8,PC}\n"
);
}

#include "conf.h"

int *video_quality = &conf.video_quality;
int *video_mode    = &conf.video_mode;

long def_table[24]={0x2000, 0x38D, 0x788, 0x5800, 0x9C5, 0x14B8, 0x10000, 0x1C6A, 0x3C45, 0x8000, 0xE35, 0x1E23,
           0x1CCD, -0x2E1, -0x579, 0x4F33, -0x7EB, -0xF0C, 0xE666, -0x170A, -0x2BC6, 0x7333, -0xB85, -0x15E3};

long table[24];

void change_video_tables(int a, int b){
 int i;
 for (i=0;i<24;i++) table[i]=(def_table[i]*a)/b; 
}

long CompressionRateTable[]={0x60, 0x5D, 0x5A, 0x57, 0x54, 0x51, 0x4D, 0x48, 0x42, 0x3B, 0x32, 0x29, 0x22, 0x1D, 0x17, 0x14, 0x10, 0xE, 0xB, 9, 7, 6, 5, 4, 3, 2, 1};

void __attribute((naked,noinline)) sub_FFC4B554_my() {
     asm volatile (
		     "STMFD   SP!, {R3-R5,LR}\n"
		     "LDR     R4, [R0,#0xC]\n"
		     "LDR     R0, [R4,#8]\n"
		     "ORR     R0, R0, #1\n"
		     "STR     R0, [R4,#8]\n"
		     "MOV     R0, #2\n"
		     "BL      sub_FFC462C8\n"
		     "BL      sub_FFC4BAA8\n"
		     "MOV     R0, R4\n"
		     "BL      sub_FFC4BD70\n"
		     "MOV     R0, R4\n"
		     "BL      sub_FFD0B054\n"
		     "CMP     R0, #0\n"
		     "MOV     R0, R4\n"
		     "BEQ     loc_FFC4B5AC\n"
		     "BL      sub_FFD0B0F0\n"
		     "TST     R0, #1\n"
		     "MOVNE   R2, R4\n"
		     "LDMNEFD SP!, {R3-R5,LR}\n"
		     "MOVNE   R1, #1\n"
		     "BNE     sub_FFC49978\n"
		     "B       loc_FFC4B5B0\n"
		     
	"loc_FFC4B5AC:\n"
		     "BL      sub_FFD0B0A4\n"
		     
	"loc_FFC4B5B0:\n"
		     "MOV     R0, #0\n"
		     "STR     R0, [SP]\n"
		     "LDR     R0, =0x18C90\n"
		     "MOV     R2, #2\n"
		     "LDRH    R0, [R0,#0x8A]\n"
		     "MOV     R1, SP\n"
		     "CMP     R0, #3\n"
		     "LDRNE   R0, [R4,#0xC]\n"
		     "CMPNE   R0, #1\n"
		     "MOVHI   R0, #1\n"
		     "STRHI   R0, [SP]\n"
		     "LDR     R0, =0x123\n"
		     "BL      sub_FFC593C4\n"
		     "BL      sub_FFD2D858\n"
		     "BL      shooting_expo_param_override\n"  // +-----------> Override Canon stuff :)
		     "BL      sub_FFC5965C\n"
		     "STR     R0, [R4,#0x18]\n"
		     "MOV     R0, R4\n"
		     "BL      sub_FFD0C1BC\n"
		     "BL      sub_FFD0CD0C\n"
		     "MOV     R0, R4\n"
		     "BL      sub_FFD0C284_my\n"
		     "BL      capt_seq_hook_raw_here\n" // +-----------> Capture RAW, camera already did badpixel-sub (always) though some pixels are still there
		     "MOV     R5, R0\n"
		     "BL      sub_FFC4D768\n"
		     "BL      sub_FFC4D7A4\n"
		     "MOV     R2, R4\n"
		     "MOV     R1, #1\n"
		     "MOV     R0, R5\n"
		     "BL      sub_FFC49978\n"
		     "BL      sub_FFD0C600\n"
		     "CMP     R0, #0\n"
		     "LDRNE   R0, [R4,#8]\n"
		     "ORRNE   R0, R0, #0x2000\n"
		     "STRNE   R0, [R4,#8]\n"
		     "LDMFD   SP!, {R3-R5,PC}\n"
		     "\n"
	".ltorg\n"
     );
}


