# This file is included from */sub/*/Makefile
#

include $(topdir)makefile.inc

CFLAGS+=-DLOW_LEVEL

all: libplatformsub.a

TARGET_PRIMARY=$(PRIMARY_ROOT)/$(PLATFORM)/sub/$(PLATFORMSUB)/PRIMARY.BIN

FWVERADDR=$(shell grep "Firmware Ver" stubs_entry.S | \
    awk -F'["|@]' '{printf "%s", substr($$5,2);}')

#OBJS= should be defined in */sub/*/Makefile for camera files
#add platform dependent 'core' files (build as THUMB)
OBJS+=main.thm.o gui_draw.thm.o memmgmt.thm.o \
     gui.thm.o kbd_process.thm.o conf.thm.o gui_osd.thm.o raw.thm.o usb_sync.thm.o\
     shot_histogram.thm.o shooting.thm.o camera_info.thm.o remotecap.thm.o

capt_seq.o: capt_seq.c $(topdir)platform/generic/capt_seq.c

libplatformsub.a: $(OBJS) bin_compat.h

clean:
	rm -f *.o libplatformsub.a stubs_entry.S.err stubs_not_found_names.err

distclean: clean
	rm -f stubs_entry.S stubs_auto.S bin_compat.h
	rm -rf .dep

run-code-gen:
	@echo $^ \-\> $@
	if [ -s $(TARGET_PRIMARY) ] && [ -s code_gen.txt ] ; then \
	  $(topdir)tools/code_gen $(ROMBASEADDR) code_gen.txt $(TARGET_PRIMARY) $(ALT_ROMBASEADDR) ; \
	else \
	  echo CAUTION! code_gen cannot be run due to target firmware binary or code_gen.txt not found! ; \
	fi ; \

stubs_auto.S: $(STUBS_AUTO_DEPS)
	@echo $^ \-\> $@
	cat $^ | \
	    grep -E 'B[[:alpha:]]*[[:space:]]+sub_[0-9A-Fa-f]' | \
	    sed 's/.*B[[:alpha:]]*[[:space:]][[:space:]]*sub_\([0-9A-Fa-f]*\).*/\1/' | \
	    $(SORT) | uniq | \
	    awk 'BEGIN {print "/* THIS FILE IS GENERATED */\n/* DO NOT EDIT THIS FILE! */\n\n#include \"stubs_asm.h\"\n"} \
	        {printf("STUB(%s)\n",$$1)}' > stubs_auto.S

stubs_entry.S: $(TARGET_PRIMARY) $(topdir)tools/signatures_$(PLATFORMOS).h $(topdir)tools/finsig_$(PLATFORMOS)$(EXE) stubs_entry_2.S stubs_min.S
	@echo \-\> $@
ifdef OPT_GEN_STUBS
	rm -f stubs_entry.S.err
	if [ -s $(TARGET_PRIMARY) ] ; then \
	  $(topdir)tools/finsig_$(PLATFORMOS) $(TARGET_PRIMARY) $(ROMBASEADDR) stubs_entry.S $(ALT_ROMBASEADDR) ; \
	else \
	  echo CAUTION! \'stubs_entry.S\' is not updated due to target firmware binary not found! ; \
	  touch stubs_entry.S ; \
	fi ; \
	if [ "X`grep 'ERROR' stubs_entry.S`" != "X" ] ; then \
	  grep "ERROR" stubs_entry.S | $(ESED) "s/\/\/ ERROR: ([^ ]+) is not found.*/\1/" | $(SORT) | uniq > stubs_nf.names ; \
	  grep -E "NH?STUB|IGNORE" stubs_entry_2.S | $(ESED) "s/ *(NH?STUB|IGNORE)\( *([^ ,)]+).*/\2/" | $(SORT) | uniq > stubs_mn.names ; \
	  comm -23 stubs_nf.names stubs_mn.names > stubs_not_found_names.err ; \
	  rm -f stubs_nf.names stubs_mn.names ; \
	  if [ -s stubs_not_found_names.err ] ; then \
	    echo ERROR! There are unresolved addresses in \'stubs_entry.S\' \($(PLATFORM)-$(PLATFORMSUB)\) for the following names: ; \
	    cat stubs_not_found_names.err ; \
	    echo Please, add them into \'stubs_entry_2.S\' manually! ; \
	    mv stubs_entry.S stubs_entry.S.err ; \
	    exit 1 ; \
	  fi ; \
	  rm -f stubs_not_found_names.err ; \
	fi
else
	echo CAUTION! \'stubs_entry.S\' updating is turned off! ; \
	touch stubs_entry.S
endif

bin_compat.h: stubs_entry.S
# GM version prefix is hardcoded!
	@echo creating bin_compat.h
	rm -f bin_compat.h
	echo "/* THIS FILE IS GENERATED, DO NOT EDIT! */" > bin_compat.h
	grep "Firmware Ver" stubs_entry.S | \
	awk -F'["|@]' '{printf "\nver_sig_t ver_sigs[]={\n"; \
	printf "    {(const char *)%s, \"%s\"},\n", substr($$5,2), $$3;}' >> bin_compat.h
    # insert each compatible version
	awk -v ptt="^$(PLATFORM),$(PLATFORMSUB)" -F',' '$$0 ~ ptt {print $$4}' $(topdir)camera_list.csv | \
	awk -F':' '{for(i=1;i<=NF;i++){ \
	str=toupper($$i); len=length(str); str1=substr(str,1,len-3) "." substr(str,len-2); \
	printf "    {(const char *)%s, \"GM%s\"},\n", "$(FWVERADDR)", str1};}' >> bin_compat.h
    #
	echo "};" >> bin_compat.h
	echo "pid_sig_t pid_sigs[]={" >> bin_compat.h
	grep "PLATFORMID" stubs_entry.S | \
	awk -F'@' '{printf "    {(short *)%s, PLATFORMID},\n", substr($$2,2);}' >> bin_compat.h
	echo "};" >> bin_compat.h


$(TARGET_PRIMARY):
	touch $(TARGET_PRIMARY)

include $(topdir)bottom.inc


# Define empty recipes for source files (including the makefiles)
# to prevent make from trying implicit rules to create them. Speeds up build process
$(topdir)platform/makefile_sub.inc: ;
